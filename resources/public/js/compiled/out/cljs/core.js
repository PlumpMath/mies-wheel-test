// Compiled by ClojureScript 0.0-2665 {:static-fns true}
if(!goog.isProvided_('cljs.core')) {
goog.provide('cljs.core');
}
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2665";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__18752__delegate = function (args){
return console.log.apply(console,(function (){var G__18751 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__18751) : cljs.core.into_array.call(null,G__18751));
})());
};
var G__18752 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__18753__i = 0, G__18753__a = new Array(arguments.length -  0);
while (G__18753__i < G__18753__a.length) {G__18753__a[G__18753__i] = arguments[G__18753__i + 0]; ++G__18753__i;}
  args = new cljs.core.IndexedSeq(G__18753__a,0);
} 
return G__18752__delegate.call(this,args);};
G__18752.cljs$lang$maxFixedArity = 0;
G__18752.cljs$lang$applyTo = (function (arglist__18754){
var args = cljs.core.seq(arglist__18754);
return G__18752__delegate(args);
});
G__18752.cljs$core$IFn$_invoke$arity$variadic = G__18752__delegate;
return G__18752;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__18756 = x;
return goog.isString(G__18756);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__18758 = x__$1;
return goog.typeOf(G__18758);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__12581__auto__ = ty;
if(cljs.core.truth_(and__12581__auto__)){
return ty.cljs$lang$type;
} else {
return and__12581__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__18760 = obj;
return goog.typeOf(G__18760);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__18762 = Symbol;
return goog.typeOf(G__18762);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__13480__auto___18764 = len;
var i_18765 = (0);
while(true){
if((i_18765 < n__13480__auto___18764)){
(new_arr[i_18765] = (arr[i_18765]));

var G__18766 = (i_18765 + (1));
i_18765 = G__18766;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__18767 = (i + (1));
i = G__18767;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__18776__delegate = function (array,i,idxs){
var G__18773 = aget;
var G__18774 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__18775 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__18773,G__18774,G__18775) : cljs.core.apply.call(null,G__18773,G__18774,G__18775));
};
var G__18776 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__18777__i = 0, G__18777__a = new Array(arguments.length -  2);
while (G__18777__i < G__18777__a.length) {G__18777__a[G__18777__i] = arguments[G__18777__i + 2]; ++G__18777__i;}
  idxs = new cljs.core.IndexedSeq(G__18777__a,0);
} 
return G__18776__delegate.call(this,array,i,idxs);};
G__18776.cljs$lang$maxFixedArity = 2;
G__18776.cljs$lang$applyTo = (function (arglist__18778){
var array = cljs.core.first(arglist__18778);
arglist__18778 = cljs.core.next(arglist__18778);
var i = cljs.core.first(arglist__18778);
var idxs = cljs.core.rest(arglist__18778);
return G__18776__delegate(array,i,idxs);
});
G__18776.cljs$core$IFn$_invoke$arity$variadic = G__18776__delegate;
return G__18776;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__18779 = null;
if (arguments.length > 2) {
var G__18780__i = 0, G__18780__a = new Array(arguments.length -  2);
while (G__18780__i < G__18780__a.length) {G__18780__a[G__18780__i] = arguments[G__18780__i + 2]; ++G__18780__i;}
G__18779 = new cljs.core.IndexedSeq(G__18780__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__18779);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__18789__delegate = function (array,idx,idx2,idxv){
var G__18785 = aset;
var G__18786 = (array[idx]);
var G__18787 = idx2;
var G__18788 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__18785,G__18786,G__18787,G__18788) : cljs.core.apply.call(null,G__18785,G__18786,G__18787,G__18788));
};
var G__18789 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__18790__i = 0, G__18790__a = new Array(arguments.length -  3);
while (G__18790__i < G__18790__a.length) {G__18790__a[G__18790__i] = arguments[G__18790__i + 3]; ++G__18790__i;}
  idxv = new cljs.core.IndexedSeq(G__18790__a,0);
} 
return G__18789__delegate.call(this,array,idx,idx2,idxv);};
G__18789.cljs$lang$maxFixedArity = 3;
G__18789.cljs$lang$applyTo = (function (arglist__18791){
var array = cljs.core.first(arglist__18791);
arglist__18791 = cljs.core.next(arglist__18791);
var idx = cljs.core.first(arglist__18791);
arglist__18791 = cljs.core.next(arglist__18791);
var idx2 = cljs.core.first(arglist__18791);
var idxv = cljs.core.rest(arglist__18791);
return G__18789__delegate(array,idx,idx2,idxv);
});
G__18789.cljs$core$IFn$_invoke$arity$variadic = G__18789__delegate;
return G__18789;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__18792 = null;
if (arguments.length > 3) {
var G__18793__i = 0, G__18793__a = new Array(arguments.length -  3);
while (G__18793__i < G__18793__a.length) {G__18793__a[G__18793__i] = arguments[G__18793__i + 3]; ++G__18793__i;}
G__18792 = new cljs.core.IndexedSeq(G__18793__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__18792);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__18799 = (function (a,x){
a.push(x);

return a;
});
var G__18800 = [];
var G__18801 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__18799,G__18800,G__18801) : cljs.core.reduce.call(null,G__18799,G__18800,G__18801));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__18802__i = 0, G__18802__a = new Array(arguments.length -  2);
while (G__18802__i < G__18802__a.length) {G__18802__a[G__18802__i] = arguments[G__18802__i + 2]; ++G__18802__i;}
  args = new cljs.core.IndexedSeq(G__18802__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__18803){
var obj = cljs.core.first(arglist__18803);
arglist__18803 = cljs.core.next(arglist__18803);
var s = cljs.core.first(arglist__18803);
var args = cljs.core.rest(arglist__18803);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj18805 = {};
return obj18805;
})();


cljs.core.IFn = (function (){var obj18807 = {};
return obj18807;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18853 = x__13237__auto__;
return goog.typeOf(G__18853);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18855 = x__13237__auto__;
return goog.typeOf(G__18855);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18857 = x__13237__auto__;
return goog.typeOf(G__18857);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18859 = x__13237__auto__;
return goog.typeOf(G__18859);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18861 = x__13237__auto__;
return goog.typeOf(G__18861);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18863 = x__13237__auto__;
return goog.typeOf(G__18863);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18865 = x__13237__auto__;
return goog.typeOf(G__18865);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18867 = x__13237__auto__;
return goog.typeOf(G__18867);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18869 = x__13237__auto__;
return goog.typeOf(G__18869);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18871 = x__13237__auto__;
return goog.typeOf(G__18871);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18873 = x__13237__auto__;
return goog.typeOf(G__18873);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18875 = x__13237__auto__;
return goog.typeOf(G__18875);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18877 = x__13237__auto__;
return goog.typeOf(G__18877);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18879 = x__13237__auto__;
return goog.typeOf(G__18879);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18881 = x__13237__auto__;
return goog.typeOf(G__18881);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18883 = x__13237__auto__;
return goog.typeOf(G__18883);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18885 = x__13237__auto__;
return goog.typeOf(G__18885);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18887 = x__13237__auto__;
return goog.typeOf(G__18887);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18889 = x__13237__auto__;
return goog.typeOf(G__18889);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18891 = x__13237__auto__;
return goog.typeOf(G__18891);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18893 = x__13237__auto__;
return goog.typeOf(G__18893);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._invoke[(function (){var G__18895 = x__13237__auto__;
return goog.typeOf(G__18895);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._invoke["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj18897 = {};
return obj18897;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__12581__auto__ = value;
if(and__12581__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__12581__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__13237__auto__ = (((value == null))?null:value);
return (function (){var or__12593__auto__ = (cljs.core._clone[(function (){var G__18901 = x__13237__auto__;
return goog.typeOf(G__18901);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._clone["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj18903 = {};
return obj18903;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._count[(function (){var G__18907 = x__13237__auto__;
return goog.typeOf(G__18907);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._count["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj18909 = {};
return obj18909;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._empty[(function (){var G__18913 = x__13237__auto__;
return goog.typeOf(G__18913);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._empty["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj18915 = {};
return obj18915;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._conj[(function (){var G__18919 = x__13237__auto__;
return goog.typeOf(G__18919);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._conj["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj18921 = {};
return obj18921;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._nth[(function (){var G__18927 = x__13237__auto__;
return goog.typeOf(G__18927);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._nth["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._nth[(function (){var G__18929 = x__13237__auto__;
return goog.typeOf(G__18929);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._nth["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj18931 = {};
return obj18931;
})();


cljs.core.ISeq = (function (){var obj18933 = {};
return obj18933;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._first[(function (){var G__18937 = x__13237__auto__;
return goog.typeOf(G__18937);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._first["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._rest[(function (){var G__18941 = x__13237__auto__;
return goog.typeOf(G__18941);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._rest["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj18943 = {};
return obj18943;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._next[(function (){var G__18947 = x__13237__auto__;
return goog.typeOf(G__18947);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._next["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj18949 = {};
return obj18949;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__12581__auto__ = o;
if(and__12581__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__12581__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__13237__auto__ = (((o == null))?null:o);
return (function (){var or__12593__auto__ = (cljs.core._lookup[(function (){var G__18955 = x__13237__auto__;
return goog.typeOf(G__18955);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._lookup["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__12581__auto__ = o;
if(and__12581__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__12581__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__13237__auto__ = (((o == null))?null:o);
return (function (){var or__12593__auto__ = (cljs.core._lookup[(function (){var G__18957 = x__13237__auto__;
return goog.typeOf(G__18957);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._lookup["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj18959 = {};
return obj18959;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__18963 = x__13237__auto__;
return goog.typeOf(G__18963);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._assoc[(function (){var G__18967 = x__13237__auto__;
return goog.typeOf(G__18967);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._assoc["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj18969 = {};
return obj18969;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._dissoc[(function (){var G__18973 = x__13237__auto__;
return goog.typeOf(G__18973);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._dissoc["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj18975 = {};
return obj18975;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._key[(function (){var G__18979 = x__13237__auto__;
return goog.typeOf(G__18979);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._key["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._val[(function (){var G__18983 = x__13237__auto__;
return goog.typeOf(G__18983);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._val["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj18985 = {};
return obj18985;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._disjoin[(function (){var G__18989 = x__13237__auto__;
return goog.typeOf(G__18989);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._disjoin["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj18991 = {};
return obj18991;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._peek[(function (){var G__18995 = x__13237__auto__;
return goog.typeOf(G__18995);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._peek["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._pop[(function (){var G__18999 = x__13237__auto__;
return goog.typeOf(G__18999);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._pop["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj19001 = {};
return obj19001;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._assoc_n[(function (){var G__19005 = x__13237__auto__;
return goog.typeOf(G__19005);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj19007 = {};
return obj19007;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__12581__auto__ = o;
if(and__12581__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__12581__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__13237__auto__ = (((o == null))?null:o);
return (function (){var or__12593__auto__ = (cljs.core._deref[(function (){var G__19011 = x__13237__auto__;
return goog.typeOf(G__19011);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._deref["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj19013 = {};
return obj19013;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__12581__auto__ = o;
if(and__12581__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__12581__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__13237__auto__ = (((o == null))?null:o);
return (function (){var or__12593__auto__ = (cljs.core._deref_with_timeout[(function (){var G__19017 = x__13237__auto__;
return goog.typeOf(G__19017);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj19019 = {};
return obj19019;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__12581__auto__ = o;
if(and__12581__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__12581__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__13237__auto__ = (((o == null))?null:o);
return (function (){var or__12593__auto__ = (cljs.core._meta[(function (){var G__19023 = x__13237__auto__;
return goog.typeOf(G__19023);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._meta["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj19025 = {};
return obj19025;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__12581__auto__ = o;
if(and__12581__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__12581__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__13237__auto__ = (((o == null))?null:o);
return (function (){var or__12593__auto__ = (cljs.core._with_meta[(function (){var G__19029 = x__13237__auto__;
return goog.typeOf(G__19029);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._with_meta["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj19031 = {};
return obj19031;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._reduce[(function (){var G__19037 = x__13237__auto__;
return goog.typeOf(G__19037);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._reduce["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._reduce[(function (){var G__19039 = x__13237__auto__;
return goog.typeOf(G__19039);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._reduce["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj19041 = {};
return obj19041;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._kv_reduce[(function (){var G__19045 = x__13237__auto__;
return goog.typeOf(G__19045);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj19047 = {};
return obj19047;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__12581__auto__ = o;
if(and__12581__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__12581__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__13237__auto__ = (((o == null))?null:o);
return (function (){var or__12593__auto__ = (cljs.core._equiv[(function (){var G__19051 = x__13237__auto__;
return goog.typeOf(G__19051);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._equiv["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj19053 = {};
return obj19053;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__12581__auto__ = o;
if(and__12581__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__12581__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__13237__auto__ = (((o == null))?null:o);
return (function (){var or__12593__auto__ = (cljs.core._hash[(function (){var G__19057 = x__13237__auto__;
return goog.typeOf(G__19057);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._hash["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj19059 = {};
return obj19059;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__12581__auto__ = o;
if(and__12581__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__12581__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__13237__auto__ = (((o == null))?null:o);
return (function (){var or__12593__auto__ = (cljs.core._seq[(function (){var G__19063 = x__13237__auto__;
return goog.typeOf(G__19063);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._seq["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj19065 = {};
return obj19065;
})();


cljs.core.IList = (function (){var obj19067 = {};
return obj19067;
})();


cljs.core.IRecord = (function (){var obj19069 = {};
return obj19069;
})();


cljs.core.IReversible = (function (){var obj19071 = {};
return obj19071;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._rseq[(function (){var G__19075 = x__13237__auto__;
return goog.typeOf(G__19075);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._rseq["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj19077 = {};
return obj19077;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._sorted_seq[(function (){var G__19081 = x__13237__auto__;
return goog.typeOf(G__19081);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._sorted_seq_from[(function (){var G__19085 = x__13237__auto__;
return goog.typeOf(G__19085);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._entry_key[(function (){var G__19089 = x__13237__auto__;
return goog.typeOf(G__19089);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._entry_key["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._comparator[(function (){var G__19093 = x__13237__auto__;
return goog.typeOf(G__19093);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._comparator["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj19095 = {};
return obj19095;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__12581__auto__ = writer;
if(and__12581__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__12581__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__13237__auto__ = (((writer == null))?null:writer);
return (function (){var or__12593__auto__ = (cljs.core._write[(function (){var G__19099 = x__13237__auto__;
return goog.typeOf(G__19099);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._write["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__12581__auto__ = writer;
if(and__12581__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__12581__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__13237__auto__ = (((writer == null))?null:writer);
return (function (){var or__12593__auto__ = (cljs.core._flush[(function (){var G__19103 = x__13237__auto__;
return goog.typeOf(G__19103);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._flush["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj19105 = {};
return obj19105;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__12581__auto__ = o;
if(and__12581__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__12581__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__13237__auto__ = (((o == null))?null:o);
return (function (){var or__12593__auto__ = (cljs.core._pr_writer[(function (){var G__19109 = x__13237__auto__;
return goog.typeOf(G__19109);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj19111 = {};
return obj19111;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__12581__auto__ = d;
if(and__12581__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__12581__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__13237__auto__ = (((d == null))?null:d);
return (function (){var or__12593__auto__ = (cljs.core._realized_QMARK_[(function (){var G__19115 = x__13237__auto__;
return goog.typeOf(G__19115);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj19117 = {};
return obj19117;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._notify_watches[(function (){var G__19121 = x__13237__auto__;
return goog.typeOf(G__19121);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._add_watch[(function (){var G__19125 = x__13237__auto__;
return goog.typeOf(G__19125);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._add_watch["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__12581__auto__ = this$;
if(and__12581__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__12581__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__13237__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12593__auto__ = (cljs.core._remove_watch[(function (){var G__19129 = x__13237__auto__;
return goog.typeOf(G__19129);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj19131 = {};
return obj19131;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._as_transient[(function (){var G__19135 = x__13237__auto__;
return goog.typeOf(G__19135);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._as_transient["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj19137 = {};
return obj19137;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__12581__auto__ = tcoll;
if(and__12581__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__12581__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__13237__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12593__auto__ = (cljs.core._conj_BANG_[(function (){var G__19141 = x__13237__auto__;
return goog.typeOf(G__19141);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__12581__auto__ = tcoll;
if(and__12581__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__12581__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__13237__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12593__auto__ = (cljs.core._persistent_BANG_[(function (){var G__19145 = x__13237__auto__;
return goog.typeOf(G__19145);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj19147 = {};
return obj19147;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__12581__auto__ = tcoll;
if(and__12581__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__12581__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__13237__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12593__auto__ = (cljs.core._assoc_BANG_[(function (){var G__19151 = x__13237__auto__;
return goog.typeOf(G__19151);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj19153 = {};
return obj19153;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__12581__auto__ = tcoll;
if(and__12581__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__12581__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__13237__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12593__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__19157 = x__13237__auto__;
return goog.typeOf(G__19157);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj19159 = {};
return obj19159;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__12581__auto__ = tcoll;
if(and__12581__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__12581__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__13237__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12593__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__19163 = x__13237__auto__;
return goog.typeOf(G__19163);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__12581__auto__ = tcoll;
if(and__12581__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__12581__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__13237__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12593__auto__ = (cljs.core._pop_BANG_[(function (){var G__19167 = x__13237__auto__;
return goog.typeOf(G__19167);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj19169 = {};
return obj19169;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__12581__auto__ = tcoll;
if(and__12581__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__12581__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__13237__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12593__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__19173 = x__13237__auto__;
return goog.typeOf(G__19173);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj19175 = {};
return obj19175;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__12581__auto__ = x;
if(and__12581__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__12581__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__13237__auto__ = (((x == null))?null:x);
return (function (){var or__12593__auto__ = (cljs.core._compare[(function (){var G__19179 = x__13237__auto__;
return goog.typeOf(G__19179);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._compare["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj19181 = {};
return obj19181;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._drop_first[(function (){var G__19185 = x__13237__auto__;
return goog.typeOf(G__19185);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._drop_first["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj19187 = {};
return obj19187;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._chunked_first[(function (){var G__19191 = x__13237__auto__;
return goog.typeOf(G__19191);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._chunked_rest[(function (){var G__19195 = x__13237__auto__;
return goog.typeOf(G__19195);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj19197 = {};
return obj19197;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._chunked_next[(function (){var G__19201 = x__13237__auto__;
return goog.typeOf(G__19201);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj19203 = {};
return obj19203;
})();

cljs.core._name = (function _name(x){
if((function (){var and__12581__auto__ = x;
if(and__12581__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__12581__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__13237__auto__ = (((x == null))?null:x);
return (function (){var or__12593__auto__ = (cljs.core._name[(function (){var G__19207 = x__13237__auto__;
return goog.typeOf(G__19207);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._name["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__12581__auto__ = x;
if(and__12581__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__12581__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__13237__auto__ = (((x == null))?null:x);
return (function (){var or__12593__auto__ = (cljs.core._namespace[(function (){var G__19211 = x__13237__auto__;
return goog.typeOf(G__19211);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._namespace["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj19213 = {};
return obj19213;
})();


cljs.core.IReset = (function (){var obj19215 = {};
return obj19215;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__12581__auto__ = o;
if(and__12581__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__12581__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__13237__auto__ = (((o == null))?null:o);
return (function (){var or__12593__auto__ = (cljs.core._reset_BANG_[(function (){var G__19219 = x__13237__auto__;
return goog.typeOf(G__19219);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj19221 = {};
return obj19221;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__12581__auto__ = o;
if(and__12581__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__12581__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__13237__auto__ = (((o == null))?null:o);
return (function (){var or__12593__auto__ = (cljs.core._swap_BANG_[(function (){var G__19231 = x__13237__auto__;
return goog.typeOf(G__19231);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__12581__auto__ = o;
if(and__12581__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__12581__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__13237__auto__ = (((o == null))?null:o);
return (function (){var or__12593__auto__ = (cljs.core._swap_BANG_[(function (){var G__19233 = x__13237__auto__;
return goog.typeOf(G__19233);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__12581__auto__ = o;
if(and__12581__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__12581__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__13237__auto__ = (((o == null))?null:o);
return (function (){var or__12593__auto__ = (cljs.core._swap_BANG_[(function (){var G__19235 = x__13237__auto__;
return goog.typeOf(G__19235);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__12581__auto__ = o;
if(and__12581__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__12581__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__13237__auto__ = (((o == null))?null:o);
return (function (){var or__12593__auto__ = (cljs.core._swap_BANG_[(function (){var G__19237 = x__13237__auto__;
return goog.typeOf(G__19237);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj19239 = {};
return obj19239;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__12581__auto__ = o;
if(and__12581__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__12581__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__13237__auto__ = (((o == null))?null:o);
return (function (){var or__12593__auto__ = (cljs.core._vreset_BANG_[(function (){var G__19243 = x__13237__auto__;
return goog.typeOf(G__19243);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj19245 = {};
return obj19245;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__12581__auto__ = coll;
if(and__12581__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__12581__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__13237__auto__ = (((coll == null))?null:coll);
return (function (){var or__12593__auto__ = (cljs.core._iterator[(function (){var G__19249 = x__13237__auto__;
return goog.typeOf(G__19249);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._iterator["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__19252 = (4294967295);
var G__19253 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__19252,G__19253) : Math.imul.call(null,G__19252,G__19253));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__19256 = a;
var G__19257 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__19256,G__19257) : Math.imul.call(null,G__19256,G__19257));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__19258 = (i + (2));
var G__19259 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__19258;
h1 = G__19259;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj19261 = {};
return obj19261;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__19262 = (i + (1));
var G__19263 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__19262;
hash = G__19263;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj19267 = {};
return obj19267;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__19270 = o;
if(G__19270){
var bit__13267__auto__ = (G__19270.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__13267__auto__) || (G__19270.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__19271 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__19271) : Math.floor.call(null,G__19271));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__12581__auto__ = cljs.core.not(a.ns);
if(and__12581__auto__){
return b.ns;
} else {
return and__12581__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__19278 = a.ns;
var G__19279 = b.ns;
return goog.array.defaultCompare(G__19278,G__19279);
})();
if(((0) === nsc)){
var G__19280 = a.name;
var G__19281 = b.name;
return goog.array.defaultCompare(G__19280,G__19281);
} else {
return nsc;
}
}
} else {
var G__19282 = a.name;
var G__19283 = b.name;
return goog.array.defaultCompare(G__19282,G__19283);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__13014__auto__ = self__._hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__19285 = null;
var G__19285__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__19285__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__19285 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__19285__2.call(this,self__,coll);
case 3:
return G__19285__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19285.cljs$core$IFn$_invoke$arity$2 = G__19285__2;
G__19285.cljs$core$IFn$_invoke$arity$3 = G__19285__3;
return G__19285;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args19284){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19284)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163840;
})
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.val;
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__19289 = x;
if(G__19289){
var bit__13274__auto__ = null;
if(cljs.core.truth_((function (){var or__12593__auto__ = bit__13274__auto__;
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
return G__19289.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__19289.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__19289);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__19289);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__19291 = value;
if(G__19291){
var bit__13274__auto__ = (G__19291.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__13274__auto__) || (G__19291.cljs$core$ICloneable$)){
return true;
} else {
if((!G__19291.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__19291);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__19291);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__19293 = coll;
if(G__19293){
var bit__13267__auto__ = (G__19293.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__13267__auto__) || (G__19293.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__19295 = coll;
if(G__19295){
var bit__13267__auto__ = (G__19295.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13267__auto__) || (G__19295.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__19297 = coll;
if(G__19297){
var bit__13267__auto__ = (G__19297.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13267__auto__) || (G__19297.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__19299 = coll;
if(G__19299){
var bit__13267__auto__ = (G__19299.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13267__auto__) || (G__19299.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__19304__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__19305 = y;
var G__19306 = cljs.core.first(more);
var G__19307 = cljs.core.next(more);
x = G__19305;
y = G__19306;
more = G__19307;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19304 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19308__i = 0, G__19308__a = new Array(arguments.length -  2);
while (G__19308__i < G__19308__a.length) {G__19308__a[G__19308__i] = arguments[G__19308__i + 2]; ++G__19308__i;}
  more = new cljs.core.IndexedSeq(G__19308__a,0);
} 
return G__19304__delegate.call(this,x,y,more);};
G__19304.cljs$lang$maxFixedArity = 2;
G__19304.cljs$lang$applyTo = (function (arglist__19309){
var x = cljs.core.first(arglist__19309);
arglist__19309 = cljs.core.next(arglist__19309);
var y = cljs.core.first(arglist__19309);
var more = cljs.core.rest(arglist__19309);
return G__19304__delegate(x,y,more);
});
G__19304.cljs$core$IFn$_invoke$arity$variadic = G__19304__delegate;
return G__19304;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__19310 = null;
if (arguments.length > 2) {
var G__19311__i = 0, G__19311__a = new Array(arguments.length -  2);
while (G__19311__i < G__19311__a.length) {G__19311__a[G__19311__i] = arguments[G__19311__i + 2]; ++G__19311__i;}
G__19310 = new cljs.core.IndexedSeq(G__19311__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19310);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__19312 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__19312) : cljs.core.es6_iterator_seq.call(null,G__19312));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__19313 = (n + (1));
var G__19314 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__19315 = cljs.core.next(coll__$1);
n = G__19313;
hash_code = G__19314;
coll__$1 = G__19315;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__19316 = (n + (1));
var G__19317 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__19318 = cljs.core.next(coll__$1);
n = G__19316;
hash_code = G__19317;
coll__$1 = G__19318;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__19319 = o;
return goog.getUid(G__19319);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__19321 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19321) : cljs.core.deref.call(null,G__19321));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__19328 = val;
var G__19329 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19328,G__19329) : f.call(null,G__19328,G__19329));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19334 = nval;
var G__19335 = (n + (1));
val = G__19334;
n = G__19335;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__19330 = val__$1;
var G__19331 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19330,G__19331) : f.call(null,G__19330,G__19331));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19336 = nval;
var G__19337 = (n + (1));
val__$1 = G__19336;
n = G__19337;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__19332 = val__$1;
var G__19333 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19332,G__19333) : f.call(null,G__19332,G__19333));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19338 = nval;
var G__19339 = (n + (1));
val__$1 = G__19338;
n = G__19339;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__19346 = val;
var G__19347 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19346,G__19347) : f.call(null,G__19346,G__19347));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19352 = nval;
var G__19353 = (n + (1));
val = G__19352;
n = G__19353;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__19348 = val__$1;
var G__19349 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19348,G__19349) : f.call(null,G__19348,G__19349));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19354 = nval;
var G__19355 = (n + (1));
val__$1 = G__19354;
n = G__19355;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__19350 = val__$1;
var G__19351 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19350,G__19351) : f.call(null,G__19350,G__19351));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19356 = nval;
var G__19357 = (n + (1));
val__$1 = G__19356;
n = G__19357;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__19359 = x;
if(G__19359){
var bit__13274__auto__ = (G__19359.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__13274__auto__) || (G__19359.cljs$core$ICounted$)){
return true;
} else {
if((!G__19359.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__19359);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__19359);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__19361 = x;
if(G__19361){
var bit__13274__auto__ = (G__19361.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13274__auto__) || (G__19361.cljs$core$IIndexed$)){
return true;
} else {
if((!G__19361.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__19361);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__19361);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__19362 = coll__$1;
var G__19363 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__19362,G__19363) : cljs.core.equiv_sequential.call(null,G__19362,G__19363));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__19364 = o;
var G__19365 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__19364,G__19365) : cljs.core.cons.call(null,G__19364,G__19365));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__19368 = coll__$1;
var G__19369 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__19368,G__19369) : cljs.core.equiv_sequential.call(null,G__19368,G__19369));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__19370 = cljs.core.List.EMPTY;
var G__19371 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__19370,G__19371) : cljs.core.with_meta.call(null,G__19370,G__19371));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__19372 = f;
var G__19373 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__19372,G__19373) : cljs.core.seq_reduce.call(null,G__19372,G__19373));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__19374 = f;
var G__19375 = start;
var G__19376 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__19374,G__19375,G__19376) : cljs.core.seq_reduce.call(null,G__19374,G__19375,G__19376));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__19377 = o;
var G__19378 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__19377,G__19378) : cljs.core.cons.call(null,G__19377,G__19378));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__19379 = sn;
s = G__19379;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__19384__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__19385 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__19386 = cljs.core.first(xs);
var G__19387 = cljs.core.next(xs);
coll = G__19385;
x = G__19386;
xs = G__19387;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__19384 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__19388__i = 0, G__19388__a = new Array(arguments.length -  2);
while (G__19388__i < G__19388__a.length) {G__19388__a[G__19388__i] = arguments[G__19388__i + 2]; ++G__19388__i;}
  xs = new cljs.core.IndexedSeq(G__19388__a,0);
} 
return G__19384__delegate.call(this,coll,x,xs);};
G__19384.cljs$lang$maxFixedArity = 2;
G__19384.cljs$lang$applyTo = (function (arglist__19389){
var coll = cljs.core.first(arglist__19389);
arglist__19389 = cljs.core.next(arglist__19389);
var x = cljs.core.first(arglist__19389);
var xs = cljs.core.rest(arglist__19389);
return G__19384__delegate(coll,x,xs);
});
G__19384.cljs$core$IFn$_invoke$arity$variadic = G__19384__delegate;
return G__19384;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__19390 = null;
if (arguments.length > 2) {
var G__19391__i = 0, G__19391__a = new Array(arguments.length -  2);
while (G__19391__i < G__19391__a.length) {G__19391__a[G__19391__i] = arguments[G__19391__i + 2]; ++G__19391__i;}
G__19390 = new cljs.core.IndexedSeq(G__19391__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__19390);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__19392 = cljs.core.next(s);
var G__19393 = (acc + (1));
s = G__19392;
acc = G__19393;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__19395 = coll;
if(G__19395){
var bit__13267__auto__ = (G__19395.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__13267__auto__) || (G__19395.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__19396 = cljs.core.next(coll);
var G__19397 = (n - (1));
coll = G__19396;
n = G__19397;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__19398 = cljs.core.next(coll);
var G__19399 = (n - (1));
var G__19400 = not_found;
coll = G__19398;
n = G__19399;
not_found = G__19400;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__19405 = coll;
if(G__19405){
var bit__13267__auto__ = (G__19405.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13267__auto__) || (G__19405.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__19406 = coll;
if(G__19406){
var bit__13274__auto__ = (G__19406.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13274__auto__) || (G__19406.cljs$core$ISeq$)){
return true;
} else {
if((!G__19406.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19406);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19406);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__19407 = coll;
if(G__19407){
var bit__13267__auto__ = (G__19407.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13267__auto__) || (G__19407.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__19408 = coll;
if(G__19408){
var bit__13274__auto__ = (G__19408.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13274__auto__) || (G__19408.cljs$core$ISeq$)){
return true;
} else {
if((!G__19408.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19408);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19408);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__19409 = (n__$1 - (1));
var G__19410 = cljs.core.rest(xs);
n__$1 = G__19409;
xs = G__19410;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__19413 = o;
if(G__19413){
var bit__13267__auto__ = (G__19413.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13267__auto__) || (G__19413.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__19414 = o;
if(G__19414){
var bit__13267__auto__ = (G__19414.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13267__auto__) || (G__19414.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__19418__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__19419 = ret;
var G__19420 = cljs.core.first(kvs);
var G__19421 = cljs.core.second(kvs);
var G__19422 = cljs.core.nnext(kvs);
coll = G__19419;
k = G__19420;
v = G__19421;
kvs = G__19422;
continue;
} else {
return ret;
}
break;
}
};
var G__19418 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__19423__i = 0, G__19423__a = new Array(arguments.length -  3);
while (G__19423__i < G__19423__a.length) {G__19423__a[G__19423__i] = arguments[G__19423__i + 3]; ++G__19423__i;}
  kvs = new cljs.core.IndexedSeq(G__19423__a,0);
} 
return G__19418__delegate.call(this,coll,k,v,kvs);};
G__19418.cljs$lang$maxFixedArity = 3;
G__19418.cljs$lang$applyTo = (function (arglist__19424){
var coll = cljs.core.first(arglist__19424);
arglist__19424 = cljs.core.next(arglist__19424);
var k = cljs.core.first(arglist__19424);
arglist__19424 = cljs.core.next(arglist__19424);
var v = cljs.core.first(arglist__19424);
var kvs = cljs.core.rest(arglist__19424);
return G__19418__delegate(coll,k,v,kvs);
});
G__19418.cljs$core$IFn$_invoke$arity$variadic = G__19418__delegate;
return G__19418;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__19425 = null;
if (arguments.length > 3) {
var G__19426__i = 0, G__19426__a = new Array(arguments.length -  3);
while (G__19426__i < G__19426__a.length) {G__19426__a[G__19426__i] = arguments[G__19426__i + 3]; ++G__19426__i;}
G__19425 = new cljs.core.IndexedSeq(G__19426__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__19425);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__19429__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__19430 = ret;
var G__19431 = cljs.core.first(ks);
var G__19432 = cljs.core.next(ks);
coll = G__19430;
k = G__19431;
ks = G__19432;
continue;
} else {
return ret;
}
}
break;
}
};
var G__19429 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__19433__i = 0, G__19433__a = new Array(arguments.length -  2);
while (G__19433__i < G__19433__a.length) {G__19433__a[G__19433__i] = arguments[G__19433__i + 2]; ++G__19433__i;}
  ks = new cljs.core.IndexedSeq(G__19433__a,0);
} 
return G__19429__delegate.call(this,coll,k,ks);};
G__19429.cljs$lang$maxFixedArity = 2;
G__19429.cljs$lang$applyTo = (function (arglist__19434){
var coll = cljs.core.first(arglist__19434);
arglist__19434 = cljs.core.next(arglist__19434);
var k = cljs.core.first(arglist__19434);
var ks = cljs.core.rest(arglist__19434);
return G__19429__delegate(coll,k,ks);
});
G__19429.cljs$core$IFn$_invoke$arity$variadic = G__19429__delegate;
return G__19429;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__19435 = null;
if (arguments.length > 2) {
var G__19436__i = 0, G__19436__a = new Array(arguments.length -  2);
while (G__19436__i < G__19436__a.length) {G__19436__a[G__19436__i] = arguments[G__19436__i + 2]; ++G__19436__i;}
G__19435 = new cljs.core.IndexedSeq(G__19436__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__19435);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__12593__auto__ = (function (){var G__19441 = f;
return goog.isFunction(G__19441);
})();
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
var G__19442 = f;
if(G__19442){
var bit__13274__auto__ = null;
if(cljs.core.truth_((function (){var or__12593__auto____$1 = bit__13274__auto__;
if(cljs.core.truth_(or__12593__auto____$1)){
return or__12593__auto____$1;
} else {
return G__19442.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__19442.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__19442);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__19442);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__19908 = null;
var G__19908__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__19908__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19444 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__19444) : self__.afn.call(null,G__19444));
});
var G__19908__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19445 = a;
var G__19446 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__19445,G__19446) : self__.afn.call(null,G__19445,G__19446));
});
var G__19908__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19447 = a;
var G__19448 = b;
var G__19449 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__19447,G__19448,G__19449) : self__.afn.call(null,G__19447,G__19448,G__19449));
});
var G__19908__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19450 = a;
var G__19451 = b;
var G__19452 = c;
var G__19453 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__19450,G__19451,G__19452,G__19453) : self__.afn.call(null,G__19450,G__19451,G__19452,G__19453));
});
var G__19908__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19454 = a;
var G__19455 = b;
var G__19456 = c;
var G__19457 = d;
var G__19458 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__19454,G__19455,G__19456,G__19457,G__19458) : self__.afn.call(null,G__19454,G__19455,G__19456,G__19457,G__19458));
});
var G__19908__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19459 = a;
var G__19460 = b;
var G__19461 = c;
var G__19462 = d;
var G__19463 = e;
var G__19464 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__19459,G__19460,G__19461,G__19462,G__19463,G__19464) : self__.afn.call(null,G__19459,G__19460,G__19461,G__19462,G__19463,G__19464));
});
var G__19908__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19465 = a;
var G__19466 = b;
var G__19467 = c;
var G__19468 = d;
var G__19469 = e;
var G__19470 = f;
var G__19471 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__19465,G__19466,G__19467,G__19468,G__19469,G__19470,G__19471) : self__.afn.call(null,G__19465,G__19466,G__19467,G__19468,G__19469,G__19470,G__19471));
});
var G__19908__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19472 = a;
var G__19473 = b;
var G__19474 = c;
var G__19475 = d;
var G__19476 = e;
var G__19477 = f;
var G__19478 = g;
var G__19479 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__19472,G__19473,G__19474,G__19475,G__19476,G__19477,G__19478,G__19479) : self__.afn.call(null,G__19472,G__19473,G__19474,G__19475,G__19476,G__19477,G__19478,G__19479));
});
var G__19908__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19480 = a;
var G__19481 = b;
var G__19482 = c;
var G__19483 = d;
var G__19484 = e;
var G__19485 = f;
var G__19486 = g;
var G__19487 = h;
var G__19488 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__19480,G__19481,G__19482,G__19483,G__19484,G__19485,G__19486,G__19487,G__19488) : self__.afn.call(null,G__19480,G__19481,G__19482,G__19483,G__19484,G__19485,G__19486,G__19487,G__19488));
});
var G__19908__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19489 = a;
var G__19490 = b;
var G__19491 = c;
var G__19492 = d;
var G__19493 = e;
var G__19494 = f;
var G__19495 = g;
var G__19496 = h;
var G__19497 = i;
var G__19498 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__19489,G__19490,G__19491,G__19492,G__19493,G__19494,G__19495,G__19496,G__19497,G__19498) : self__.afn.call(null,G__19489,G__19490,G__19491,G__19492,G__19493,G__19494,G__19495,G__19496,G__19497,G__19498));
});
var G__19908__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19499 = a;
var G__19500 = b;
var G__19501 = c;
var G__19502 = d;
var G__19503 = e;
var G__19504 = f;
var G__19505 = g;
var G__19506 = h;
var G__19507 = i;
var G__19508 = j;
var G__19509 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__19499,G__19500,G__19501,G__19502,G__19503,G__19504,G__19505,G__19506,G__19507,G__19508,G__19509) : self__.afn.call(null,G__19499,G__19500,G__19501,G__19502,G__19503,G__19504,G__19505,G__19506,G__19507,G__19508,G__19509));
});
var G__19908__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19510 = a;
var G__19511 = b;
var G__19512 = c;
var G__19513 = d;
var G__19514 = e;
var G__19515 = f;
var G__19516 = g;
var G__19517 = h;
var G__19518 = i;
var G__19519 = j;
var G__19520 = k;
var G__19521 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__19510,G__19511,G__19512,G__19513,G__19514,G__19515,G__19516,G__19517,G__19518,G__19519,G__19520,G__19521) : self__.afn.call(null,G__19510,G__19511,G__19512,G__19513,G__19514,G__19515,G__19516,G__19517,G__19518,G__19519,G__19520,G__19521));
});
var G__19908__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19522 = a;
var G__19523 = b;
var G__19524 = c;
var G__19525 = d;
var G__19526 = e;
var G__19527 = f;
var G__19528 = g;
var G__19529 = h;
var G__19530 = i;
var G__19531 = j;
var G__19532 = k;
var G__19533 = l;
var G__19534 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__19522,G__19523,G__19524,G__19525,G__19526,G__19527,G__19528,G__19529,G__19530,G__19531,G__19532,G__19533,G__19534) : self__.afn.call(null,G__19522,G__19523,G__19524,G__19525,G__19526,G__19527,G__19528,G__19529,G__19530,G__19531,G__19532,G__19533,G__19534));
});
var G__19908__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19535 = a;
var G__19536 = b;
var G__19537 = c;
var G__19538 = d;
var G__19539 = e;
var G__19540 = f;
var G__19541 = g;
var G__19542 = h;
var G__19543 = i;
var G__19544 = j;
var G__19545 = k;
var G__19546 = l;
var G__19547 = m;
var G__19548 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__19535,G__19536,G__19537,G__19538,G__19539,G__19540,G__19541,G__19542,G__19543,G__19544,G__19545,G__19546,G__19547,G__19548) : self__.afn.call(null,G__19535,G__19536,G__19537,G__19538,G__19539,G__19540,G__19541,G__19542,G__19543,G__19544,G__19545,G__19546,G__19547,G__19548));
});
var G__19908__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19549 = a;
var G__19550 = b;
var G__19551 = c;
var G__19552 = d;
var G__19553 = e;
var G__19554 = f;
var G__19555 = g;
var G__19556 = h;
var G__19557 = i;
var G__19558 = j;
var G__19559 = k;
var G__19560 = l;
var G__19561 = m;
var G__19562 = n;
var G__19563 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__19549,G__19550,G__19551,G__19552,G__19553,G__19554,G__19555,G__19556,G__19557,G__19558,G__19559,G__19560,G__19561,G__19562,G__19563) : self__.afn.call(null,G__19549,G__19550,G__19551,G__19552,G__19553,G__19554,G__19555,G__19556,G__19557,G__19558,G__19559,G__19560,G__19561,G__19562,G__19563));
});
var G__19908__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19564 = a;
var G__19565 = b;
var G__19566 = c;
var G__19567 = d;
var G__19568 = e;
var G__19569 = f;
var G__19570 = g;
var G__19571 = h;
var G__19572 = i;
var G__19573 = j;
var G__19574 = k;
var G__19575 = l;
var G__19576 = m;
var G__19577 = n;
var G__19578 = o;
var G__19579 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__19564,G__19565,G__19566,G__19567,G__19568,G__19569,G__19570,G__19571,G__19572,G__19573,G__19574,G__19575,G__19576,G__19577,G__19578,G__19579) : self__.afn.call(null,G__19564,G__19565,G__19566,G__19567,G__19568,G__19569,G__19570,G__19571,G__19572,G__19573,G__19574,G__19575,G__19576,G__19577,G__19578,G__19579));
});
var G__19908__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19580 = a;
var G__19581 = b;
var G__19582 = c;
var G__19583 = d;
var G__19584 = e;
var G__19585 = f;
var G__19586 = g;
var G__19587 = h;
var G__19588 = i;
var G__19589 = j;
var G__19590 = k;
var G__19591 = l;
var G__19592 = m;
var G__19593 = n;
var G__19594 = o;
var G__19595 = p;
var G__19596 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__19580,G__19581,G__19582,G__19583,G__19584,G__19585,G__19586,G__19587,G__19588,G__19589,G__19590,G__19591,G__19592,G__19593,G__19594,G__19595,G__19596) : self__.afn.call(null,G__19580,G__19581,G__19582,G__19583,G__19584,G__19585,G__19586,G__19587,G__19588,G__19589,G__19590,G__19591,G__19592,G__19593,G__19594,G__19595,G__19596));
});
var G__19908__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19597 = a;
var G__19598 = b;
var G__19599 = c;
var G__19600 = d;
var G__19601 = e;
var G__19602 = f;
var G__19603 = g;
var G__19604 = h;
var G__19605 = i;
var G__19606 = j;
var G__19607 = k;
var G__19608 = l;
var G__19609 = m;
var G__19610 = n;
var G__19611 = o;
var G__19612 = p;
var G__19613 = q;
var G__19614 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__19597,G__19598,G__19599,G__19600,G__19601,G__19602,G__19603,G__19604,G__19605,G__19606,G__19607,G__19608,G__19609,G__19610,G__19611,G__19612,G__19613,G__19614) : self__.afn.call(null,G__19597,G__19598,G__19599,G__19600,G__19601,G__19602,G__19603,G__19604,G__19605,G__19606,G__19607,G__19608,G__19609,G__19610,G__19611,G__19612,G__19613,G__19614));
});
var G__19908__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19615 = a;
var G__19616 = b;
var G__19617 = c;
var G__19618 = d;
var G__19619 = e;
var G__19620 = f;
var G__19621 = g;
var G__19622 = h;
var G__19623 = i;
var G__19624 = j;
var G__19625 = k;
var G__19626 = l;
var G__19627 = m;
var G__19628 = n;
var G__19629 = o;
var G__19630 = p;
var G__19631 = q;
var G__19632 = r;
var G__19633 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__19615,G__19616,G__19617,G__19618,G__19619,G__19620,G__19621,G__19622,G__19623,G__19624,G__19625,G__19626,G__19627,G__19628,G__19629,G__19630,G__19631,G__19632,G__19633) : self__.afn.call(null,G__19615,G__19616,G__19617,G__19618,G__19619,G__19620,G__19621,G__19622,G__19623,G__19624,G__19625,G__19626,G__19627,G__19628,G__19629,G__19630,G__19631,G__19632,G__19633));
});
var G__19908__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19634 = a;
var G__19635 = b;
var G__19636 = c;
var G__19637 = d;
var G__19638 = e;
var G__19639 = f;
var G__19640 = g;
var G__19641 = h;
var G__19642 = i;
var G__19643 = j;
var G__19644 = k;
var G__19645 = l;
var G__19646 = m;
var G__19647 = n;
var G__19648 = o;
var G__19649 = p;
var G__19650 = q;
var G__19651 = r;
var G__19652 = s;
var G__19653 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__19634,G__19635,G__19636,G__19637,G__19638,G__19639,G__19640,G__19641,G__19642,G__19643,G__19644,G__19645,G__19646,G__19647,G__19648,G__19649,G__19650,G__19651,G__19652,G__19653) : self__.afn.call(null,G__19634,G__19635,G__19636,G__19637,G__19638,G__19639,G__19640,G__19641,G__19642,G__19643,G__19644,G__19645,G__19646,G__19647,G__19648,G__19649,G__19650,G__19651,G__19652,G__19653));
});
var G__19908__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19654 = self__.afn;
var G__19655 = a;
var G__19656 = b;
var G__19657 = c;
var G__19658 = d;
var G__19659 = e;
var G__19660 = f;
var G__19661 = g;
var G__19662 = h;
var G__19663 = i;
var G__19664 = j;
var G__19665 = k;
var G__19666 = l;
var G__19667 = m;
var G__19668 = n;
var G__19669 = o;
var G__19670 = p;
var G__19671 = q;
var G__19672 = r;
var G__19673 = s;
var G__19674 = t;
var G__19675 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__19654,G__19655,G__19656,G__19657,G__19658,G__19659,G__19660,G__19661,G__19662,G__19663,G__19664,G__19665,G__19666,G__19667,G__19668,G__19669,G__19670,G__19671,G__19672,G__19673,G__19674,G__19675) : cljs.core.apply.call(null,G__19654,G__19655,G__19656,G__19657,G__19658,G__19659,G__19660,G__19661,G__19662,G__19663,G__19664,G__19665,G__19666,G__19667,G__19668,G__19669,G__19670,G__19671,G__19672,G__19673,G__19674,G__19675));
});
G__19908 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__19908__1.call(this,self__);
case 2:
return G__19908__2.call(this,self__,a);
case 3:
return G__19908__3.call(this,self__,a,b);
case 4:
return G__19908__4.call(this,self__,a,b,c);
case 5:
return G__19908__5.call(this,self__,a,b,c,d);
case 6:
return G__19908__6.call(this,self__,a,b,c,d,e);
case 7:
return G__19908__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__19908__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__19908__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__19908__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__19908__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__19908__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__19908__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__19908__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__19908__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__19908__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__19908__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__19908__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__19908__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__19908__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__19908__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__19908__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19908.cljs$core$IFn$_invoke$arity$1 = G__19908__1;
G__19908.cljs$core$IFn$_invoke$arity$2 = G__19908__2;
G__19908.cljs$core$IFn$_invoke$arity$3 = G__19908__3;
G__19908.cljs$core$IFn$_invoke$arity$4 = G__19908__4;
G__19908.cljs$core$IFn$_invoke$arity$5 = G__19908__5;
G__19908.cljs$core$IFn$_invoke$arity$6 = G__19908__6;
G__19908.cljs$core$IFn$_invoke$arity$7 = G__19908__7;
G__19908.cljs$core$IFn$_invoke$arity$8 = G__19908__8;
G__19908.cljs$core$IFn$_invoke$arity$9 = G__19908__9;
G__19908.cljs$core$IFn$_invoke$arity$10 = G__19908__10;
G__19908.cljs$core$IFn$_invoke$arity$11 = G__19908__11;
G__19908.cljs$core$IFn$_invoke$arity$12 = G__19908__12;
G__19908.cljs$core$IFn$_invoke$arity$13 = G__19908__13;
G__19908.cljs$core$IFn$_invoke$arity$14 = G__19908__14;
G__19908.cljs$core$IFn$_invoke$arity$15 = G__19908__15;
G__19908.cljs$core$IFn$_invoke$arity$16 = G__19908__16;
G__19908.cljs$core$IFn$_invoke$arity$17 = G__19908__17;
G__19908.cljs$core$IFn$_invoke$arity$18 = G__19908__18;
G__19908.cljs$core$IFn$_invoke$arity$19 = G__19908__19;
G__19908.cljs$core$IFn$_invoke$arity$20 = G__19908__20;
G__19908.cljs$core$IFn$_invoke$arity$21 = G__19908__21;
G__19908.cljs$core$IFn$_invoke$arity$22 = G__19908__22;
return G__19908;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args19443){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19443)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__19676 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__19676) : self__.afn.call(null,G__19676));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__19677 = a;
var G__19678 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__19677,G__19678) : self__.afn.call(null,G__19677,G__19678));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__19679 = a;
var G__19680 = b;
var G__19681 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__19679,G__19680,G__19681) : self__.afn.call(null,G__19679,G__19680,G__19681));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__19682 = a;
var G__19683 = b;
var G__19684 = c;
var G__19685 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__19682,G__19683,G__19684,G__19685) : self__.afn.call(null,G__19682,G__19683,G__19684,G__19685));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__19686 = a;
var G__19687 = b;
var G__19688 = c;
var G__19689 = d;
var G__19690 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__19686,G__19687,G__19688,G__19689,G__19690) : self__.afn.call(null,G__19686,G__19687,G__19688,G__19689,G__19690));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__19691 = a;
var G__19692 = b;
var G__19693 = c;
var G__19694 = d;
var G__19695 = e;
var G__19696 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__19691,G__19692,G__19693,G__19694,G__19695,G__19696) : self__.afn.call(null,G__19691,G__19692,G__19693,G__19694,G__19695,G__19696));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__19697 = a;
var G__19698 = b;
var G__19699 = c;
var G__19700 = d;
var G__19701 = e;
var G__19702 = f;
var G__19703 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__19697,G__19698,G__19699,G__19700,G__19701,G__19702,G__19703) : self__.afn.call(null,G__19697,G__19698,G__19699,G__19700,G__19701,G__19702,G__19703));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__19704 = a;
var G__19705 = b;
var G__19706 = c;
var G__19707 = d;
var G__19708 = e;
var G__19709 = f;
var G__19710 = g;
var G__19711 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__19704,G__19705,G__19706,G__19707,G__19708,G__19709,G__19710,G__19711) : self__.afn.call(null,G__19704,G__19705,G__19706,G__19707,G__19708,G__19709,G__19710,G__19711));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__19712 = a;
var G__19713 = b;
var G__19714 = c;
var G__19715 = d;
var G__19716 = e;
var G__19717 = f;
var G__19718 = g;
var G__19719 = h;
var G__19720 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__19712,G__19713,G__19714,G__19715,G__19716,G__19717,G__19718,G__19719,G__19720) : self__.afn.call(null,G__19712,G__19713,G__19714,G__19715,G__19716,G__19717,G__19718,G__19719,G__19720));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__19721 = a;
var G__19722 = b;
var G__19723 = c;
var G__19724 = d;
var G__19725 = e;
var G__19726 = f;
var G__19727 = g;
var G__19728 = h;
var G__19729 = i;
var G__19730 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__19721,G__19722,G__19723,G__19724,G__19725,G__19726,G__19727,G__19728,G__19729,G__19730) : self__.afn.call(null,G__19721,G__19722,G__19723,G__19724,G__19725,G__19726,G__19727,G__19728,G__19729,G__19730));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__19731 = a;
var G__19732 = b;
var G__19733 = c;
var G__19734 = d;
var G__19735 = e;
var G__19736 = f;
var G__19737 = g;
var G__19738 = h;
var G__19739 = i;
var G__19740 = j;
var G__19741 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__19731,G__19732,G__19733,G__19734,G__19735,G__19736,G__19737,G__19738,G__19739,G__19740,G__19741) : self__.afn.call(null,G__19731,G__19732,G__19733,G__19734,G__19735,G__19736,G__19737,G__19738,G__19739,G__19740,G__19741));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__19742 = a;
var G__19743 = b;
var G__19744 = c;
var G__19745 = d;
var G__19746 = e;
var G__19747 = f;
var G__19748 = g;
var G__19749 = h;
var G__19750 = i;
var G__19751 = j;
var G__19752 = k;
var G__19753 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__19742,G__19743,G__19744,G__19745,G__19746,G__19747,G__19748,G__19749,G__19750,G__19751,G__19752,G__19753) : self__.afn.call(null,G__19742,G__19743,G__19744,G__19745,G__19746,G__19747,G__19748,G__19749,G__19750,G__19751,G__19752,G__19753));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__19754 = a;
var G__19755 = b;
var G__19756 = c;
var G__19757 = d;
var G__19758 = e;
var G__19759 = f;
var G__19760 = g;
var G__19761 = h;
var G__19762 = i;
var G__19763 = j;
var G__19764 = k;
var G__19765 = l;
var G__19766 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__19754,G__19755,G__19756,G__19757,G__19758,G__19759,G__19760,G__19761,G__19762,G__19763,G__19764,G__19765,G__19766) : self__.afn.call(null,G__19754,G__19755,G__19756,G__19757,G__19758,G__19759,G__19760,G__19761,G__19762,G__19763,G__19764,G__19765,G__19766));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__19767 = a;
var G__19768 = b;
var G__19769 = c;
var G__19770 = d;
var G__19771 = e;
var G__19772 = f;
var G__19773 = g;
var G__19774 = h;
var G__19775 = i;
var G__19776 = j;
var G__19777 = k;
var G__19778 = l;
var G__19779 = m;
var G__19780 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__19767,G__19768,G__19769,G__19770,G__19771,G__19772,G__19773,G__19774,G__19775,G__19776,G__19777,G__19778,G__19779,G__19780) : self__.afn.call(null,G__19767,G__19768,G__19769,G__19770,G__19771,G__19772,G__19773,G__19774,G__19775,G__19776,G__19777,G__19778,G__19779,G__19780));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__19781 = a;
var G__19782 = b;
var G__19783 = c;
var G__19784 = d;
var G__19785 = e;
var G__19786 = f;
var G__19787 = g;
var G__19788 = h;
var G__19789 = i;
var G__19790 = j;
var G__19791 = k;
var G__19792 = l;
var G__19793 = m;
var G__19794 = n;
var G__19795 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__19781,G__19782,G__19783,G__19784,G__19785,G__19786,G__19787,G__19788,G__19789,G__19790,G__19791,G__19792,G__19793,G__19794,G__19795) : self__.afn.call(null,G__19781,G__19782,G__19783,G__19784,G__19785,G__19786,G__19787,G__19788,G__19789,G__19790,G__19791,G__19792,G__19793,G__19794,G__19795));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__19796 = a;
var G__19797 = b;
var G__19798 = c;
var G__19799 = d;
var G__19800 = e;
var G__19801 = f;
var G__19802 = g;
var G__19803 = h;
var G__19804 = i;
var G__19805 = j;
var G__19806 = k;
var G__19807 = l;
var G__19808 = m;
var G__19809 = n;
var G__19810 = o;
var G__19811 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__19796,G__19797,G__19798,G__19799,G__19800,G__19801,G__19802,G__19803,G__19804,G__19805,G__19806,G__19807,G__19808,G__19809,G__19810,G__19811) : self__.afn.call(null,G__19796,G__19797,G__19798,G__19799,G__19800,G__19801,G__19802,G__19803,G__19804,G__19805,G__19806,G__19807,G__19808,G__19809,G__19810,G__19811));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__19812 = a;
var G__19813 = b;
var G__19814 = c;
var G__19815 = d;
var G__19816 = e;
var G__19817 = f;
var G__19818 = g;
var G__19819 = h;
var G__19820 = i;
var G__19821 = j;
var G__19822 = k;
var G__19823 = l;
var G__19824 = m;
var G__19825 = n;
var G__19826 = o;
var G__19827 = p;
var G__19828 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__19812,G__19813,G__19814,G__19815,G__19816,G__19817,G__19818,G__19819,G__19820,G__19821,G__19822,G__19823,G__19824,G__19825,G__19826,G__19827,G__19828) : self__.afn.call(null,G__19812,G__19813,G__19814,G__19815,G__19816,G__19817,G__19818,G__19819,G__19820,G__19821,G__19822,G__19823,G__19824,G__19825,G__19826,G__19827,G__19828));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__19829 = a;
var G__19830 = b;
var G__19831 = c;
var G__19832 = d;
var G__19833 = e;
var G__19834 = f;
var G__19835 = g;
var G__19836 = h;
var G__19837 = i;
var G__19838 = j;
var G__19839 = k;
var G__19840 = l;
var G__19841 = m;
var G__19842 = n;
var G__19843 = o;
var G__19844 = p;
var G__19845 = q;
var G__19846 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__19829,G__19830,G__19831,G__19832,G__19833,G__19834,G__19835,G__19836,G__19837,G__19838,G__19839,G__19840,G__19841,G__19842,G__19843,G__19844,G__19845,G__19846) : self__.afn.call(null,G__19829,G__19830,G__19831,G__19832,G__19833,G__19834,G__19835,G__19836,G__19837,G__19838,G__19839,G__19840,G__19841,G__19842,G__19843,G__19844,G__19845,G__19846));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__19847 = a;
var G__19848 = b;
var G__19849 = c;
var G__19850 = d;
var G__19851 = e;
var G__19852 = f;
var G__19853 = g;
var G__19854 = h;
var G__19855 = i;
var G__19856 = j;
var G__19857 = k;
var G__19858 = l;
var G__19859 = m;
var G__19860 = n;
var G__19861 = o;
var G__19862 = p;
var G__19863 = q;
var G__19864 = r;
var G__19865 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__19847,G__19848,G__19849,G__19850,G__19851,G__19852,G__19853,G__19854,G__19855,G__19856,G__19857,G__19858,G__19859,G__19860,G__19861,G__19862,G__19863,G__19864,G__19865) : self__.afn.call(null,G__19847,G__19848,G__19849,G__19850,G__19851,G__19852,G__19853,G__19854,G__19855,G__19856,G__19857,G__19858,G__19859,G__19860,G__19861,G__19862,G__19863,G__19864,G__19865));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__19866 = a;
var G__19867 = b;
var G__19868 = c;
var G__19869 = d;
var G__19870 = e;
var G__19871 = f;
var G__19872 = g;
var G__19873 = h;
var G__19874 = i;
var G__19875 = j;
var G__19876 = k;
var G__19877 = l;
var G__19878 = m;
var G__19879 = n;
var G__19880 = o;
var G__19881 = p;
var G__19882 = q;
var G__19883 = r;
var G__19884 = s;
var G__19885 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__19866,G__19867,G__19868,G__19869,G__19870,G__19871,G__19872,G__19873,G__19874,G__19875,G__19876,G__19877,G__19878,G__19879,G__19880,G__19881,G__19882,G__19883,G__19884,G__19885) : self__.afn.call(null,G__19866,G__19867,G__19868,G__19869,G__19870,G__19871,G__19872,G__19873,G__19874,G__19875,G__19876,G__19877,G__19878,G__19879,G__19880,G__19881,G__19882,G__19883,G__19884,G__19885));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__19886 = self__.afn;
var G__19887 = a;
var G__19888 = b;
var G__19889 = c;
var G__19890 = d;
var G__19891 = e;
var G__19892 = f;
var G__19893 = g;
var G__19894 = h;
var G__19895 = i;
var G__19896 = j;
var G__19897 = k;
var G__19898 = l;
var G__19899 = m;
var G__19900 = n;
var G__19901 = o;
var G__19902 = p;
var G__19903 = q;
var G__19904 = r;
var G__19905 = s;
var G__19906 = t;
var G__19907 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__19886,G__19887,G__19888,G__19889,G__19890,G__19891,G__19892,G__19893,G__19894,G__19895,G__19896,G__19897,G__19898,G__19899,G__19900,G__19901,G__19902,G__19903,G__19904,G__19905,G__19906,G__19907) : cljs.core.apply.call(null,G__19886,G__19887,G__19888,G__19889,G__19890,G__19891,G__19892,G__19893,G__19894,G__19895,G__19896,G__19897,G__19898,G__19899,G__19900,G__19901,G__19902,G__19903,G__19904,G__19905,G__19906,G__19907));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__19912 = o;
if(G__19912){
var bit__13274__auto__ = (G__19912.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__13274__auto__) || (G__19912.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__19912.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__19912);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__19912);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__12581__auto__ = !((o == null));
if(and__12581__auto__){
var G__19916 = o;
if(G__19916){
var bit__13274__auto__ = (G__19916.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__13274__auto__) || (G__19916.cljs$core$IMeta$)){
return true;
} else {
if((!G__19916.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__19916);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__19916);
}
} else {
return and__12581__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__19919__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__19920 = ret;
var G__19921 = cljs.core.first(ks);
var G__19922 = cljs.core.next(ks);
coll = G__19920;
k = G__19921;
ks = G__19922;
continue;
} else {
return ret;
}
}
break;
}
};
var G__19919 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__19923__i = 0, G__19923__a = new Array(arguments.length -  2);
while (G__19923__i < G__19923__a.length) {G__19923__a[G__19923__i] = arguments[G__19923__i + 2]; ++G__19923__i;}
  ks = new cljs.core.IndexedSeq(G__19923__a,0);
} 
return G__19919__delegate.call(this,coll,k,ks);};
G__19919.cljs$lang$maxFixedArity = 2;
G__19919.cljs$lang$applyTo = (function (arglist__19924){
var coll = cljs.core.first(arglist__19924);
arglist__19924 = cljs.core.next(arglist__19924);
var k = cljs.core.first(arglist__19924);
var ks = cljs.core.rest(arglist__19924);
return G__19919__delegate(coll,k,ks);
});
G__19919.cljs$core$IFn$_invoke$arity$variadic = G__19919__delegate;
return G__19919;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__19925 = null;
if (arguments.length > 2) {
var G__19926__i = 0, G__19926__a = new Array(arguments.length -  2);
while (G__19926__i < G__19926__a.length) {G__19926__a[G__19926__i] = arguments[G__19926__i + 2]; ++G__19926__i;}
G__19925 = new cljs.core.IndexedSeq(G__19926__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__19925);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__19928 = x;
if(G__19928){
var bit__13274__auto__ = (G__19928.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__13274__auto__) || (G__19928.cljs$core$ICollection$)){
return true;
} else {
if((!G__19928.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__19928);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__19928);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__19930 = x;
if(G__19930){
var bit__13274__auto__ = (G__19930.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__13274__auto__) || (G__19930.cljs$core$ISet$)){
return true;
} else {
if((!G__19930.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__19930);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__19930);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__19932 = x;
if(G__19932){
var bit__13274__auto__ = (G__19932.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__13274__auto__) || (G__19932.cljs$core$IAssociative$)){
return true;
} else {
if((!G__19932.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__19932);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__19932);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__19934 = x;
if(G__19934){
var bit__13274__auto__ = (G__19934.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__13274__auto__) || (G__19934.cljs$core$ISequential$)){
return true;
} else {
if((!G__19934.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__19934);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__19934);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__19936 = x;
if(G__19936){
var bit__13274__auto__ = (G__19936.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__13274__auto__) || (G__19936.cljs$core$ISorted$)){
return true;
} else {
if((!G__19936.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__19936);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__19936);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__19938 = x;
if(G__19938){
var bit__13274__auto__ = (G__19938.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13274__auto__) || (G__19938.cljs$core$IReduce$)){
return true;
} else {
if((!G__19938.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__19938);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__19938);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__19940 = x;
if(G__19940){
var bit__13274__auto__ = (G__19940.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__13274__auto__) || (G__19940.cljs$core$IMap$)){
return true;
} else {
if((!G__19940.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__19940);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__19940);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__19942 = x;
if(G__19942){
var bit__13274__auto__ = (G__19942.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__13274__auto__) || (G__19942.cljs$core$IVector$)){
return true;
} else {
if((!G__19942.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__19942);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__19942);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__19944 = x;
if(G__19944){
var bit__13267__auto__ = (G__19944.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__13267__auto__) || (G__19944.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj19950 = {};
return obj19950;
});
var js_obj__1 = (function() { 
var G__19953__delegate = function (keyvals){
var G__19951 = goog.object.create;
var G__19952 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__19951,G__19952) : cljs.core.apply.call(null,G__19951,G__19952));
};
var G__19953 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__19954__i = 0, G__19954__a = new Array(arguments.length -  0);
while (G__19954__i < G__19954__a.length) {G__19954__a[G__19954__i] = arguments[G__19954__i + 0]; ++G__19954__i;}
  keyvals = new cljs.core.IndexedSeq(G__19954__a,0);
} 
return G__19953__delegate.call(this,keyvals);};
G__19953.cljs$lang$maxFixedArity = 0;
G__19953.cljs$lang$applyTo = (function (arglist__19955){
var keyvals = cljs.core.seq(arglist__19955);
return G__19953__delegate(keyvals);
});
G__19953.cljs$core$IFn$_invoke$arity$variadic = G__19953__delegate;
return G__19953;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__19956 = null;
if (arguments.length > 0) {
var G__19957__i = 0, G__19957__a = new Array(arguments.length -  0);
while (G__19957__i < G__19957__a.length) {G__19957__a[G__19957__i] = arguments[G__19957__i + 0]; ++G__19957__i;}
G__19956 = new cljs.core.IndexedSeq(G__19957__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__19956);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__19960_19962 = obj;
var G__19961_19963 = ((function (G__19960_19962,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__19960_19962,keys))
;
goog.object.forEach(G__19960_19962,G__19961_19963);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__19964 = (i__$1 + (1));
var G__19965 = (j__$1 + (1));
var G__19966 = (len__$1 - (1));
i__$1 = G__19964;
j__$1 = G__19965;
len__$1 = G__19966;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__19967 = (i__$1 - (1));
var G__19968 = (j__$1 - (1));
var G__19969 = (len__$1 - (1));
i__$1 = G__19967;
j__$1 = G__19968;
len__$1 = G__19969;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj19971 = {};
return obj19971;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__19973 = s;
if(G__19973){
var bit__13274__auto__ = (G__19973.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13274__auto__) || (G__19973.cljs$core$ISeq$)){
return true;
} else {
if((!G__19973.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19973);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19973);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__19975 = s;
if(G__19975){
var bit__13274__auto__ = (G__19975.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__13274__auto__) || (G__19975.cljs$core$ISeqable$)){
return true;
} else {
if((!G__19975.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__19975);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__19975);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__12593__auto__ = cljs.core.fn_QMARK_(f);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var G__19979 = f;
if(G__19979){
var bit__13274__auto__ = (G__19979.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__13274__auto__) || (G__19979.cljs$core$IFn$)){
return true;
} else {
if((!G__19979.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__19979);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__19979);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__19992 = n;
return isNaN(G__19992);
})())) && (!((n === Infinity))) && (((function (){var G__19993 = n;
return parseFloat(G__19993);
})() === (function (){var G__19994 = n;
var G__19995 = (10);
return parseInt(G__19994,G__19995);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__19996__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__19997 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__19998 = etc;
s = G__19997;
xs = G__19998;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__19996 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19999__i = 0, G__19999__a = new Array(arguments.length -  2);
while (G__19999__i < G__19999__a.length) {G__19999__a[G__19999__i] = arguments[G__19999__i + 2]; ++G__19999__i;}
  more = new cljs.core.IndexedSeq(G__19999__a,0);
} 
return G__19996__delegate.call(this,x,y,more);};
G__19996.cljs$lang$maxFixedArity = 2;
G__19996.cljs$lang$applyTo = (function (arglist__20000){
var x = cljs.core.first(arglist__20000);
arglist__20000 = cljs.core.next(arglist__20000);
var y = cljs.core.first(arglist__20000);
var more = cljs.core.rest(arglist__20000);
return G__19996__delegate(x,y,more);
});
G__19996.cljs$core$IFn$_invoke$arity$variadic = G__19996__delegate;
return G__19996;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__20001 = null;
if (arguments.length > 2) {
var G__20002__i = 0, G__20002__a = new Array(arguments.length -  2);
while (G__20002__i < G__20002__a.length) {G__20002__a[G__20002__i] = arguments[G__20002__i + 2]; ++G__20002__i;}
G__20001 = new cljs.core.IndexedSeq(G__20002__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20001);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__20006 = x;
if(G__20006){
var bit__13267__auto__ = (G__20006.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__13267__auto__) || (G__20006.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__20007 = x;
var G__20008 = y;
return goog.array.defaultCompare(G__20007,G__20008);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__20013 = xs;
var G__20014 = ys;
var G__20015 = len;
var G__20016 = (n + (1));
xs = G__20013;
ys = G__20014;
len = G__20015;
n = G__20016;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__20021 = x;
var G__20022 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20021,G__20022) : f.call(null,G__20021,G__20022));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__20023 = y;
var G__20024 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20023,G__20024) : f.call(null,G__20023,G__20024));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__20030 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__20030) : cljs.core.to_array.call(null,G__20030));
})();
var G__20031_20033 = a;
var G__20032_20034 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__20031_20033,G__20032_20034);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__20040 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__20040) : keyfn.call(null,G__20040));
})(),(function (){var G__20041 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__20041) : keyfn.call(null,G__20041));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__20047 = f;
var G__20048 = cljs.core.first(s);
var G__20049 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__20047,G__20048,G__20049) : cljs.core.reduce.call(null,G__20047,G__20048,G__20049));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__20050 = val__$1;
var G__20051 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20050,G__20051) : f.call(null,G__20050,G__20051));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20052 = nval;
var G__20053 = cljs.core.next(coll__$1);
val__$1 = G__20052;
coll__$1 = G__20053;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__20057 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__20057) : cljs.core.to_array.call(null,G__20057));
})();
var G__20058_20060 = a;
goog.array.shuffle(G__20058_20060);

var G__20059 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__20059) : cljs.core.vec.call(null,G__20059));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__20063 = coll;
if(G__20063){
var bit__13267__auto__ = (G__20063.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13267__auto__) || (G__20063.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__20064 = coll;
if(G__20064){
var bit__13267__auto__ = (G__20064.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13267__auto__) || (G__20064.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__20073 = null;
var G__20073__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__20073__1 = (function (x){
var G__20070 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__20070) : cf.call(null,G__20070));
});
var G__20073__2 = (function (x,y){
var G__20071 = x;
var G__20072 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20071,G__20072) : f.call(null,G__20071,G__20072));
});
G__20073 = function(x,y){
switch(arguments.length){
case 0:
return G__20073__0.call(this);
case 1:
return G__20073__1.call(this,x);
case 2:
return G__20073__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20073.cljs$core$IFn$_invoke$arity$0 = G__20073__0;
G__20073.cljs$core$IFn$_invoke$arity$1 = G__20073__1;
G__20073.cljs$core$IFn$_invoke$arity$2 = G__20073__2;
return G__20073;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__20080 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__20080) : xform.call(null,G__20080));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__20081 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__20081) : f__$1.call(null,G__20081));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__20082__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__20082 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20083__i = 0, G__20083__a = new Array(arguments.length -  2);
while (G__20083__i < G__20083__a.length) {G__20083__a[G__20083__i] = arguments[G__20083__i + 2]; ++G__20083__i;}
  more = new cljs.core.IndexedSeq(G__20083__a,0);
} 
return G__20082__delegate.call(this,x,y,more);};
G__20082.cljs$lang$maxFixedArity = 2;
G__20082.cljs$lang$applyTo = (function (arglist__20084){
var x = cljs.core.first(arglist__20084);
arglist__20084 = cljs.core.next(arglist__20084);
var y = cljs.core.first(arglist__20084);
var more = cljs.core.rest(arglist__20084);
return G__20082__delegate(x,y,more);
});
G__20082.cljs$core$IFn$_invoke$arity$variadic = G__20082__delegate;
return G__20082;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__20085 = null;
if (arguments.length > 2) {
var G__20086__i = 0, G__20086__a = new Array(arguments.length -  2);
while (G__20086__i < G__20086__a.length) {G__20086__a[G__20086__i] = arguments[G__20086__i + 2]; ++G__20086__i;}
G__20085 = new cljs.core.IndexedSeq(G__20086__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20085);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__20087__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__20087 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20088__i = 0, G__20088__a = new Array(arguments.length -  2);
while (G__20088__i < G__20088__a.length) {G__20088__a[G__20088__i] = arguments[G__20088__i + 2]; ++G__20088__i;}
  more = new cljs.core.IndexedSeq(G__20088__a,0);
} 
return G__20087__delegate.call(this,x,y,more);};
G__20087.cljs$lang$maxFixedArity = 2;
G__20087.cljs$lang$applyTo = (function (arglist__20089){
var x = cljs.core.first(arglist__20089);
arglist__20089 = cljs.core.next(arglist__20089);
var y = cljs.core.first(arglist__20089);
var more = cljs.core.rest(arglist__20089);
return G__20087__delegate(x,y,more);
});
G__20087.cljs$core$IFn$_invoke$arity$variadic = G__20087__delegate;
return G__20087;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__20090 = null;
if (arguments.length > 2) {
var G__20091__i = 0, G__20091__a = new Array(arguments.length -  2);
while (G__20091__i < G__20091__a.length) {G__20091__a[G__20091__i] = arguments[G__20091__i + 2]; ++G__20091__i;}
G__20090 = new cljs.core.IndexedSeq(G__20091__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20090);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__20092__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__20092 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20093__i = 0, G__20093__a = new Array(arguments.length -  2);
while (G__20093__i < G__20093__a.length) {G__20093__a[G__20093__i] = arguments[G__20093__i + 2]; ++G__20093__i;}
  more = new cljs.core.IndexedSeq(G__20093__a,0);
} 
return G__20092__delegate.call(this,x,y,more);};
G__20092.cljs$lang$maxFixedArity = 2;
G__20092.cljs$lang$applyTo = (function (arglist__20094){
var x = cljs.core.first(arglist__20094);
arglist__20094 = cljs.core.next(arglist__20094);
var y = cljs.core.first(arglist__20094);
var more = cljs.core.rest(arglist__20094);
return G__20092__delegate(x,y,more);
});
G__20092.cljs$core$IFn$_invoke$arity$variadic = G__20092__delegate;
return G__20092;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__20095 = null;
if (arguments.length > 2) {
var G__20096__i = 0, G__20096__a = new Array(arguments.length -  2);
while (G__20096__i < G__20096__a.length) {G__20096__a[G__20096__i] = arguments[G__20096__i + 2]; ++G__20096__i;}
G__20095 = new cljs.core.IndexedSeq(G__20096__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20095);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__20101__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__20101 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20102__i = 0, G__20102__a = new Array(arguments.length -  2);
while (G__20102__i < G__20102__a.length) {G__20102__a[G__20102__i] = arguments[G__20102__i + 2]; ++G__20102__i;}
  more = new cljs.core.IndexedSeq(G__20102__a,0);
} 
return G__20101__delegate.call(this,x,y,more);};
G__20101.cljs$lang$maxFixedArity = 2;
G__20101.cljs$lang$applyTo = (function (arglist__20103){
var x = cljs.core.first(arglist__20103);
arglist__20103 = cljs.core.next(arglist__20103);
var y = cljs.core.first(arglist__20103);
var more = cljs.core.rest(arglist__20103);
return G__20101__delegate(x,y,more);
});
G__20101.cljs$core$IFn$_invoke$arity$variadic = G__20101__delegate;
return G__20101;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__20104 = null;
if (arguments.length > 2) {
var G__20105__i = 0, G__20105__a = new Array(arguments.length -  2);
while (G__20105__i < G__20105__a.length) {G__20105__a[G__20105__i] = arguments[G__20105__i + 2]; ++G__20105__i;}
G__20104 = new cljs.core.IndexedSeq(G__20105__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20104);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__20106__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__20107 = y;
var G__20108 = cljs.core.first(more);
var G__20109 = cljs.core.next(more);
x = G__20107;
y = G__20108;
more = G__20109;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20106 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20110__i = 0, G__20110__a = new Array(arguments.length -  2);
while (G__20110__i < G__20110__a.length) {G__20110__a[G__20110__i] = arguments[G__20110__i + 2]; ++G__20110__i;}
  more = new cljs.core.IndexedSeq(G__20110__a,0);
} 
return G__20106__delegate.call(this,x,y,more);};
G__20106.cljs$lang$maxFixedArity = 2;
G__20106.cljs$lang$applyTo = (function (arglist__20111){
var x = cljs.core.first(arglist__20111);
arglist__20111 = cljs.core.next(arglist__20111);
var y = cljs.core.first(arglist__20111);
var more = cljs.core.rest(arglist__20111);
return G__20106__delegate(x,y,more);
});
G__20106.cljs$core$IFn$_invoke$arity$variadic = G__20106__delegate;
return G__20106;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__20112 = null;
if (arguments.length > 2) {
var G__20113__i = 0, G__20113__a = new Array(arguments.length -  2);
while (G__20113__i < G__20113__a.length) {G__20113__a[G__20113__i] = arguments[G__20113__i + 2]; ++G__20113__i;}
G__20112 = new cljs.core.IndexedSeq(G__20113__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20112);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__20114__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__20115 = y;
var G__20116 = cljs.core.first(more);
var G__20117 = cljs.core.next(more);
x = G__20115;
y = G__20116;
more = G__20117;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20114 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20118__i = 0, G__20118__a = new Array(arguments.length -  2);
while (G__20118__i < G__20118__a.length) {G__20118__a[G__20118__i] = arguments[G__20118__i + 2]; ++G__20118__i;}
  more = new cljs.core.IndexedSeq(G__20118__a,0);
} 
return G__20114__delegate.call(this,x,y,more);};
G__20114.cljs$lang$maxFixedArity = 2;
G__20114.cljs$lang$applyTo = (function (arglist__20119){
var x = cljs.core.first(arglist__20119);
arglist__20119 = cljs.core.next(arglist__20119);
var y = cljs.core.first(arglist__20119);
var more = cljs.core.rest(arglist__20119);
return G__20114__delegate(x,y,more);
});
G__20114.cljs$core$IFn$_invoke$arity$variadic = G__20114__delegate;
return G__20114;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__20120 = null;
if (arguments.length > 2) {
var G__20121__i = 0, G__20121__a = new Array(arguments.length -  2);
while (G__20121__i < G__20121__a.length) {G__20121__a[G__20121__i] = arguments[G__20121__i + 2]; ++G__20121__i;}
G__20120 = new cljs.core.IndexedSeq(G__20121__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20120);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__20122__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__20123 = y;
var G__20124 = cljs.core.first(more);
var G__20125 = cljs.core.next(more);
x = G__20123;
y = G__20124;
more = G__20125;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20122 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20126__i = 0, G__20126__a = new Array(arguments.length -  2);
while (G__20126__i < G__20126__a.length) {G__20126__a[G__20126__i] = arguments[G__20126__i + 2]; ++G__20126__i;}
  more = new cljs.core.IndexedSeq(G__20126__a,0);
} 
return G__20122__delegate.call(this,x,y,more);};
G__20122.cljs$lang$maxFixedArity = 2;
G__20122.cljs$lang$applyTo = (function (arglist__20127){
var x = cljs.core.first(arglist__20127);
arglist__20127 = cljs.core.next(arglist__20127);
var y = cljs.core.first(arglist__20127);
var more = cljs.core.rest(arglist__20127);
return G__20122__delegate(x,y,more);
});
G__20122.cljs$core$IFn$_invoke$arity$variadic = G__20122__delegate;
return G__20122;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__20128 = null;
if (arguments.length > 2) {
var G__20129__i = 0, G__20129__a = new Array(arguments.length -  2);
while (G__20129__i < G__20129__a.length) {G__20129__a[G__20129__i] = arguments[G__20129__i + 2]; ++G__20129__i;}
G__20128 = new cljs.core.IndexedSeq(G__20129__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20128);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__20130__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__20131 = y;
var G__20132 = cljs.core.first(more);
var G__20133 = cljs.core.next(more);
x = G__20131;
y = G__20132;
more = G__20133;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20130 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20134__i = 0, G__20134__a = new Array(arguments.length -  2);
while (G__20134__i < G__20134__a.length) {G__20134__a[G__20134__i] = arguments[G__20134__i + 2]; ++G__20134__i;}
  more = new cljs.core.IndexedSeq(G__20134__a,0);
} 
return G__20130__delegate.call(this,x,y,more);};
G__20130.cljs$lang$maxFixedArity = 2;
G__20130.cljs$lang$applyTo = (function (arglist__20135){
var x = cljs.core.first(arglist__20135);
arglist__20135 = cljs.core.next(arglist__20135);
var y = cljs.core.first(arglist__20135);
var more = cljs.core.rest(arglist__20135);
return G__20130__delegate(x,y,more);
});
G__20130.cljs$core$IFn$_invoke$arity$variadic = G__20130__delegate;
return G__20130;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__20136 = null;
if (arguments.length > 2) {
var G__20137__i = 0, G__20137__a = new Array(arguments.length -  2);
while (G__20137__i < G__20137__a.length) {G__20137__a[G__20137__i] = arguments[G__20137__i + 2]; ++G__20137__i;}
G__20136 = new cljs.core.IndexedSeq(G__20137__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20136);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__12910__auto__ = x;
var y__12911__auto__ = y;
return ((x__12910__auto__ > y__12911__auto__) ? x__12910__auto__ : y__12911__auto__);
});
var max__3 = (function() { 
var G__20138__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__12910__auto__ = x;
var y__12911__auto__ = y;
return ((x__12910__auto__ > y__12911__auto__) ? x__12910__auto__ : y__12911__auto__);
})(),more);
};
var G__20138 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20139__i = 0, G__20139__a = new Array(arguments.length -  2);
while (G__20139__i < G__20139__a.length) {G__20139__a[G__20139__i] = arguments[G__20139__i + 2]; ++G__20139__i;}
  more = new cljs.core.IndexedSeq(G__20139__a,0);
} 
return G__20138__delegate.call(this,x,y,more);};
G__20138.cljs$lang$maxFixedArity = 2;
G__20138.cljs$lang$applyTo = (function (arglist__20140){
var x = cljs.core.first(arglist__20140);
arglist__20140 = cljs.core.next(arglist__20140);
var y = cljs.core.first(arglist__20140);
var more = cljs.core.rest(arglist__20140);
return G__20138__delegate(x,y,more);
});
G__20138.cljs$core$IFn$_invoke$arity$variadic = G__20138__delegate;
return G__20138;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__20141 = null;
if (arguments.length > 2) {
var G__20142__i = 0, G__20142__a = new Array(arguments.length -  2);
while (G__20142__i < G__20142__a.length) {G__20142__a[G__20142__i] = arguments[G__20142__i + 2]; ++G__20142__i;}
G__20141 = new cljs.core.IndexedSeq(G__20142__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20141);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__12917__auto__ = x;
var y__12918__auto__ = y;
return ((x__12917__auto__ < y__12918__auto__) ? x__12917__auto__ : y__12918__auto__);
});
var min__3 = (function() { 
var G__20143__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__12917__auto__ = x;
var y__12918__auto__ = y;
return ((x__12917__auto__ < y__12918__auto__) ? x__12917__auto__ : y__12918__auto__);
})(),more);
};
var G__20143 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20144__i = 0, G__20144__a = new Array(arguments.length -  2);
while (G__20144__i < G__20144__a.length) {G__20144__a[G__20144__i] = arguments[G__20144__i + 2]; ++G__20144__i;}
  more = new cljs.core.IndexedSeq(G__20144__a,0);
} 
return G__20143__delegate.call(this,x,y,more);};
G__20143.cljs$lang$maxFixedArity = 2;
G__20143.cljs$lang$applyTo = (function (arglist__20145){
var x = cljs.core.first(arglist__20145);
arglist__20145 = cljs.core.next(arglist__20145);
var y = cljs.core.first(arglist__20145);
var more = cljs.core.rest(arglist__20145);
return G__20143__delegate(x,y,more);
});
G__20143.cljs$core$IFn$_invoke$arity$variadic = G__20143__delegate;
return G__20143;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__20146 = null;
if (arguments.length > 2) {
var G__20147__i = 0, G__20147__a = new Array(arguments.length -  2);
while (G__20147__i < G__20147__a.length) {G__20147__a[G__20147__i] = arguments[G__20147__i + 2]; ++G__20147__i;}
G__20146 = new cljs.core.IndexedSeq(G__20147__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20146);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__20148__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__20148 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20149__i = 0, G__20149__a = new Array(arguments.length -  2);
while (G__20149__i < G__20149__a.length) {G__20149__a[G__20149__i] = arguments[G__20149__i + 2]; ++G__20149__i;}
  more = new cljs.core.IndexedSeq(G__20149__a,0);
} 
return G__20148__delegate.call(this,x,y,more);};
G__20148.cljs$lang$maxFixedArity = 2;
G__20148.cljs$lang$applyTo = (function (arglist__20150){
var x = cljs.core.first(arglist__20150);
arglist__20150 = cljs.core.next(arglist__20150);
var y = cljs.core.first(arglist__20150);
var more = cljs.core.rest(arglist__20150);
return G__20148__delegate(x,y,more);
});
G__20148.cljs$core$IFn$_invoke$arity$variadic = G__20148__delegate;
return G__20148;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__20151 = null;
if (arguments.length > 2) {
var G__20152__i = 0, G__20152__a = new Array(arguments.length -  2);
while (G__20152__i < G__20152__a.length) {G__20152__a[G__20152__i] = arguments[G__20152__i + 2]; ++G__20152__i;}
G__20151 = new cljs.core.IndexedSeq(G__20152__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20151);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__20153__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__20153 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20154__i = 0, G__20154__a = new Array(arguments.length -  2);
while (G__20154__i < G__20154__a.length) {G__20154__a[G__20154__i] = arguments[G__20154__i + 2]; ++G__20154__i;}
  more = new cljs.core.IndexedSeq(G__20154__a,0);
} 
return G__20153__delegate.call(this,x,y,more);};
G__20153.cljs$lang$maxFixedArity = 2;
G__20153.cljs$lang$applyTo = (function (arglist__20155){
var x = cljs.core.first(arglist__20155);
arglist__20155 = cljs.core.next(arglist__20155);
var y = cljs.core.first(arglist__20155);
var more = cljs.core.rest(arglist__20155);
return G__20153__delegate(x,y,more);
});
G__20153.cljs$core$IFn$_invoke$arity$variadic = G__20153__delegate;
return G__20153;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__20156 = null;
if (arguments.length > 2) {
var G__20157__i = 0, G__20157__a = new Array(arguments.length -  2);
while (G__20157__i < G__20157__a.length) {G__20157__a[G__20157__i] = arguments[G__20157__i + 2]; ++G__20157__i;}
G__20156 = new cljs.core.IndexedSeq(G__20157__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20156);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__20162__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__20162 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20163__i = 0, G__20163__a = new Array(arguments.length -  2);
while (G__20163__i < G__20163__a.length) {G__20163__a[G__20163__i] = arguments[G__20163__i + 2]; ++G__20163__i;}
  more = new cljs.core.IndexedSeq(G__20163__a,0);
} 
return G__20162__delegate.call(this,x,y,more);};
G__20162.cljs$lang$maxFixedArity = 2;
G__20162.cljs$lang$applyTo = (function (arglist__20164){
var x = cljs.core.first(arglist__20164);
arglist__20164 = cljs.core.next(arglist__20164);
var y = cljs.core.first(arglist__20164);
var more = cljs.core.rest(arglist__20164);
return G__20162__delegate(x,y,more);
});
G__20162.cljs$core$IFn$_invoke$arity$variadic = G__20162__delegate;
return G__20162;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__20165 = null;
if (arguments.length > 2) {
var G__20166__i = 0, G__20166__a = new Array(arguments.length -  2);
while (G__20166__i < G__20166__a.length) {G__20166__a[G__20166__i] = arguments[G__20166__i + 2]; ++G__20166__i;}
G__20165 = new cljs.core.IndexedSeq(G__20166__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20165);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__20167__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__20167 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20168__i = 0, G__20168__a = new Array(arguments.length -  2);
while (G__20168__i < G__20168__a.length) {G__20168__a[G__20168__i] = arguments[G__20168__i + 2]; ++G__20168__i;}
  more = new cljs.core.IndexedSeq(G__20168__a,0);
} 
return G__20167__delegate.call(this,x,y,more);};
G__20167.cljs$lang$maxFixedArity = 2;
G__20167.cljs$lang$applyTo = (function (arglist__20169){
var x = cljs.core.first(arglist__20169);
arglist__20169 = cljs.core.next(arglist__20169);
var y = cljs.core.first(arglist__20169);
var more = cljs.core.rest(arglist__20169);
return G__20167__delegate(x,y,more);
});
G__20167.cljs$core$IFn$_invoke$arity$variadic = G__20167__delegate;
return G__20167;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__20170 = null;
if (arguments.length > 2) {
var G__20171__i = 0, G__20171__a = new Array(arguments.length -  2);
while (G__20171__i < G__20171__a.length) {G__20171__a[G__20171__i] = arguments[G__20171__i + 2]; ++G__20171__i;}
G__20170 = new cljs.core.IndexedSeq(G__20171__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20170);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__20172__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__20172 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20173__i = 0, G__20173__a = new Array(arguments.length -  2);
while (G__20173__i < G__20173__a.length) {G__20173__a[G__20173__i] = arguments[G__20173__i + 2]; ++G__20173__i;}
  more = new cljs.core.IndexedSeq(G__20173__a,0);
} 
return G__20172__delegate.call(this,x,y,more);};
G__20172.cljs$lang$maxFixedArity = 2;
G__20172.cljs$lang$applyTo = (function (arglist__20174){
var x = cljs.core.first(arglist__20174);
arglist__20174 = cljs.core.next(arglist__20174);
var y = cljs.core.first(arglist__20174);
var more = cljs.core.rest(arglist__20174);
return G__20172__delegate(x,y,more);
});
G__20172.cljs$core$IFn$_invoke$arity$variadic = G__20172__delegate;
return G__20172;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__20175 = null;
if (arguments.length > 2) {
var G__20176__i = 0, G__20176__a = new Array(arguments.length -  2);
while (G__20176__i < G__20176__a.length) {G__20176__a[G__20176__i] = arguments[G__20176__i + 2]; ++G__20176__i;}
G__20175 = new cljs.core.IndexedSeq(G__20176__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20175);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__20179 = x;
var G__20180 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__20179,G__20180) : cljs.core.mod.call(null,G__20179,G__20180));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__20181__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__20181 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20182__i = 0, G__20182__a = new Array(arguments.length -  2);
while (G__20182__i < G__20182__a.length) {G__20182__a[G__20182__i] = arguments[G__20182__i + 2]; ++G__20182__i;}
  more = new cljs.core.IndexedSeq(G__20182__a,0);
} 
return G__20181__delegate.call(this,x,y,more);};
G__20181.cljs$lang$maxFixedArity = 2;
G__20181.cljs$lang$applyTo = (function (arglist__20183){
var x = cljs.core.first(arglist__20183);
arglist__20183 = cljs.core.next(arglist__20183);
var y = cljs.core.first(arglist__20183);
var more = cljs.core.rest(arglist__20183);
return G__20181__delegate(x,y,more);
});
G__20181.cljs$core$IFn$_invoke$arity$variadic = G__20181__delegate;
return G__20181;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__20184 = null;
if (arguments.length > 2) {
var G__20185__i = 0, G__20185__a = new Array(arguments.length -  2);
while (G__20185__i < G__20185__a.length) {G__20185__a[G__20185__i] = arguments[G__20185__i + 2]; ++G__20185__i;}
G__20184 = new cljs.core.IndexedSeq(G__20185__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20184);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__20186__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__20186 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20187__i = 0, G__20187__a = new Array(arguments.length -  2);
while (G__20187__i < G__20187__a.length) {G__20187__a[G__20187__i] = arguments[G__20187__i + 2]; ++G__20187__i;}
  more = new cljs.core.IndexedSeq(G__20187__a,0);
} 
return G__20186__delegate.call(this,x,y,more);};
G__20186.cljs$lang$maxFixedArity = 2;
G__20186.cljs$lang$applyTo = (function (arglist__20188){
var x = cljs.core.first(arglist__20188);
arglist__20188 = cljs.core.next(arglist__20188);
var y = cljs.core.first(arglist__20188);
var more = cljs.core.rest(arglist__20188);
return G__20186__delegate(x,y,more);
});
G__20186.cljs$core$IFn$_invoke$arity$variadic = G__20186__delegate;
return G__20186;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__20189 = null;
if (arguments.length > 2) {
var G__20190__i = 0, G__20190__a = new Array(arguments.length -  2);
while (G__20190__i < G__20190__a.length) {G__20190__a[G__20190__i] = arguments[G__20190__i + 2]; ++G__20190__i;}
G__20189 = new cljs.core.IndexedSeq(G__20190__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20189);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__20193 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__20193) : Math.floor.call(null,G__20193));
} else {
var G__20194 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__20194) : Math.ceil.call(null,G__20194));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
*/
cljs.core.bit_xor = (function bit_xor(x,y){
return (x ^ y);
});
/**
* Bitwise and
*/
cljs.core.bit_and = (function bit_and(x,y){
return (x & y);
});
/**
* Bitwise or
*/
cljs.core.bit_or = (function bit_or(x,y){
return (x | y);
});
/**
* Bitwise and
*/
cljs.core.bit_and_not = (function bit_and_not(x,y){
return (x & ~y);
});
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__20199__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__20200 = y;
var G__20201 = cljs.core.first(more);
var G__20202 = cljs.core.next(more);
x = G__20200;
y = G__20201;
more = G__20202;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20199 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20203__i = 0, G__20203__a = new Array(arguments.length -  2);
while (G__20203__i < G__20203__a.length) {G__20203__a[G__20203__i] = arguments[G__20203__i + 2]; ++G__20203__i;}
  more = new cljs.core.IndexedSeq(G__20203__a,0);
} 
return G__20199__delegate.call(this,x,y,more);};
G__20199.cljs$lang$maxFixedArity = 2;
G__20199.cljs$lang$applyTo = (function (arglist__20204){
var x = cljs.core.first(arglist__20204);
arglist__20204 = cljs.core.next(arglist__20204);
var y = cljs.core.first(arglist__20204);
var more = cljs.core.rest(arglist__20204);
return G__20199__delegate(x,y,more);
});
G__20199.cljs$core$IFn$_invoke$arity$variadic = G__20199__delegate;
return G__20199;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__20205 = null;
if (arguments.length > 2) {
var G__20206__i = 0, G__20206__a = new Array(arguments.length -  2);
while (G__20206__i < G__20206__a.length) {G__20206__a[G__20206__i] = arguments[G__20206__i + 2]; ++G__20206__i;}
G__20205 = new cljs.core.IndexedSeq(G__20206__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20205);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__20207 = (n__$1 - (1));
var G__20208 = cljs.core.next(xs);
n__$1 = G__20207;
xs = G__20208;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__20212 = x;
return goog.string.buildString(G__20212);
}
});
var str__2 = (function() { 
var G__20213__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__20214 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__20215 = cljs.core.next(more);
sb = G__20214;
more = G__20215;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__20213 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__20216__i = 0, G__20216__a = new Array(arguments.length -  1);
while (G__20216__i < G__20216__a.length) {G__20216__a[G__20216__i] = arguments[G__20216__i + 1]; ++G__20216__i;}
  ys = new cljs.core.IndexedSeq(G__20216__a,0);
} 
return G__20213__delegate.call(this,x,ys);};
G__20213.cljs$lang$maxFixedArity = 1;
G__20213.cljs$lang$applyTo = (function (arglist__20217){
var x = cljs.core.first(arglist__20217);
var ys = cljs.core.rest(arglist__20217);
return G__20213__delegate(x,ys);
});
G__20213.cljs$core$IFn$_invoke$arity$variadic = G__20213__delegate;
return G__20213;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__20218 = null;
if (arguments.length > 1) {
var G__20219__i = 0, G__20219__a = new Array(arguments.length -  1);
while (G__20219__i < G__20219__a.length) {G__20219__a[G__20219__i] = arguments[G__20219__i + 1]; ++G__20219__i;}
G__20218 = new cljs.core.IndexedSeq(G__20219__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__20218);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__20220 = cljs.core.next(xs);
var G__20221 = cljs.core.next(ys);
xs = G__20220;
ys = G__20221;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__20222 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__20223 = cljs.core.next(s);
res = G__20222;
s = G__20223;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__20228 = ((h + (cljs.core.hash((function (){var G__20226 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20226) : cljs.core.key.call(null,G__20226));
})()) ^ cljs.core.hash((function (){var G__20227 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__20227) : cljs.core.val.call(null,G__20227));
})()))) % (4503599627370496));
var G__20229 = cljs.core.next(s);
h = G__20228;
s = G__20229;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__20230 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__20231 = cljs.core.next(s__$1);
h = G__20230;
s__$1 = G__20231;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__20242_20252 = cljs.core.seq(fn_map);
var chunk__20243_20253 = null;
var count__20244_20254 = (0);
var i__20245_20255 = (0);
while(true){
if((i__20245_20255 < count__20244_20254)){
var vec__20246_20256 = chunk__20243_20253.cljs$core$IIndexed$_nth$arity$2(null,i__20245_20255);
var key_name_20257 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20246_20256,(0),null);
var f_20258 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20246_20256,(1),null);
var str_name_20259 = (function (){var G__20247 = key_name_20257;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__20247) : cljs.core.name.call(null,G__20247));
})();
(obj[str_name_20259] = f_20258);

var G__20260 = seq__20242_20252;
var G__20261 = chunk__20243_20253;
var G__20262 = count__20244_20254;
var G__20263 = (i__20245_20255 + (1));
seq__20242_20252 = G__20260;
chunk__20243_20253 = G__20261;
count__20244_20254 = G__20262;
i__20245_20255 = G__20263;
continue;
} else {
var temp__4126__auto___20264 = cljs.core.seq(seq__20242_20252);
if(temp__4126__auto___20264){
var seq__20242_20265__$1 = temp__4126__auto___20264;
if(cljs.core.chunked_seq_QMARK_(seq__20242_20265__$1)){
var c__13380__auto___20266 = (function (){var G__20248 = seq__20242_20265__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__20248) : cljs.core.chunk_first.call(null,G__20248));
})();
var G__20267 = (function (){var G__20249 = seq__20242_20265__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__20249) : cljs.core.chunk_rest.call(null,G__20249));
})();
var G__20268 = c__13380__auto___20266;
var G__20269 = cljs.core.count(c__13380__auto___20266);
var G__20270 = (0);
seq__20242_20252 = G__20267;
chunk__20243_20253 = G__20268;
count__20244_20254 = G__20269;
i__20245_20255 = G__20270;
continue;
} else {
var vec__20250_20271 = cljs.core.first(seq__20242_20265__$1);
var key_name_20272 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20250_20271,(0),null);
var f_20273 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20250_20271,(1),null);
var str_name_20274 = (function (){var G__20251 = key_name_20272;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__20251) : cljs.core.name.call(null,G__20251));
})();
(obj[str_name_20274] = f_20273);

var G__20275 = cljs.core.next(seq__20242_20265__$1);
var G__20276 = null;
var G__20277 = (0);
var G__20278 = (0);
seq__20242_20252 = G__20275;
chunk__20243_20253 = G__20276;
count__20244_20254 = G__20277;
i__20245_20255 = G__20278;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__20280 = coll;
if(G__20280){
var bit__13274__auto__ = (G__20280.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__13274__auto__) || (G__20280.cljs$core$IReversible$)){
return true;
} else {
if((!G__20280.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__20280);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__20280);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__20281 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__20281;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__20282 = (i - (1));
var G__20283 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__20282;
r = G__20283;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__20284__i = 0, G__20284__a = new Array(arguments.length -  0);
while (G__20284__i < G__20284__a.length) {G__20284__a[G__20284__i] = arguments[G__20284__i + 0]; ++G__20284__i;}
  xs = new cljs.core.IndexedSeq(G__20284__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__20285){
var xs = cljs.core.seq(arglist__20285);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__12593__auto__ = (coll == null);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var G__20289 = coll;
if(G__20289){
var bit__13267__auto__ = (G__20289.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13267__auto__) || (G__20289.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__20291 = x;
if(G__20291){
var bit__13274__auto__ = (G__20291.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__13274__auto__) || (G__20291.cljs$core$IList$)){
return true;
} else {
if((!G__20291.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__20291);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__20291);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__12581__auto__ = cljs.core.not(a.ns);
if(and__12581__auto__){
return b.ns;
} else {
return and__12581__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__20298 = a.ns;
var G__20299 = b.ns;
return goog.array.defaultCompare(G__20298,G__20299);
})();
if(((0) === nsc)){
var G__20300 = a.name;
var G__20301 = b.name;
return goog.array.defaultCompare(G__20300,G__20301);
} else {
return nsc;
}
}
} else {
var G__20302 = a.name;
var G__20303 = b.name;
return goog.array.defaultCompare(G__20302,G__20303);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__13014__auto__ = self__._hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__20305 = null;
var G__20305__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__20305__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__20305 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__20305__2.call(this,self__,coll);
case 3:
return G__20305__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20305.cljs$core$IFn$_invoke$arity$2 = G__20305__2;
G__20305.cljs$core$IFn$_invoke$arity$3 = G__20305__3;
return G__20305;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args20304){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args20304)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__20307 = x;
if(G__20307){
var bit__13267__auto__ = (G__20307.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__13267__auto__) || (G__20307.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__20309 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__20309) : cljs.core.name.call(null,G__20309));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__20310 = ls.sval();
ls = G__20310;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__20312 = s;
if(G__20312){
var bit__13267__auto__ = (G__20312.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__13267__auto__) || (G__20312.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__20313 = cljs.core.next(s__$1);
s__$1 = G__20313;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_20314 = (0);
var xs_20315 = cljs.core.seq(coll);
while(true){
if(xs_20315){
(ret[i_20314] = cljs.core.to_array(cljs.core.first(xs_20315)));

var G__20316 = (i_20314 + (1));
var G__20317 = cljs.core.next(xs_20315);
i_20314 = G__20316;
xs_20315 = G__20317;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__20320 = (i + (1));
var G__20321 = cljs.core.next(s__$1);
i = G__20320;
s__$1 = G__20321;
continue;
} else {
return a;
}
break;
}
} else {
var n__13480__auto___20322 = size;
var i_20323 = (0);
while(true){
if((i_20323 < n__13480__auto___20322)){
(a[i_20323] = init_val_or_seq);

var G__20324 = (i_20323 + (1));
i_20323 = G__20324;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__20327 = (i + (1));
var G__20328 = cljs.core.next(s__$1);
i = G__20327;
s__$1 = G__20328;
continue;
} else {
return a;
}
break;
}
} else {
var n__13480__auto___20329 = size;
var i_20330 = (0);
while(true){
if((i_20330 < n__13480__auto___20329)){
(a[i_20330] = init_val_or_seq);

var G__20331 = (i_20330 + (1));
i_20330 = G__20331;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__20334 = (i + (1));
var G__20335 = cljs.core.next(s__$1);
i = G__20334;
s__$1 = G__20335;
continue;
} else {
return a;
}
break;
}
} else {
var n__13480__auto___20336 = size;
var i_20337 = (0);
while(true){
if((i_20337 < n__13480__auto___20336)){
(a[i_20337] = init_val_or_seq);

var G__20338 = (i_20337 + (1));
i_20337 = G__20338;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__20341 = (i + (1));
var G__20342 = cljs.core.next(s__$1);
i = G__20341;
s__$1 = G__20342;
continue;
} else {
return a;
}
break;
}
} else {
var n__13480__auto___20343 = size;
var i_20344 = (0);
while(true){
if((i_20344 < n__13480__auto___20343)){
(a[i_20344] = init_val_or_seq);

var G__20345 = (i_20344 + (1));
i_20344 = G__20345;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__20346 = cljs.core.next(s__$1);
var G__20347 = (i - (1));
var G__20348 = (sum + (1));
s__$1 = G__20346;
i = G__20347;
sum = G__20348;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__20368__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__20368 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__20369__i = 0, G__20369__a = new Array(arguments.length -  2);
while (G__20369__i < G__20369__a.length) {G__20369__a[G__20369__i] = arguments[G__20369__i + 2]; ++G__20369__i;}
  zs = new cljs.core.IndexedSeq(G__20369__a,0);
} 
return G__20368__delegate.call(this,x,y,zs);};
G__20368.cljs$lang$maxFixedArity = 2;
G__20368.cljs$lang$applyTo = (function (arglist__20370){
var x = cljs.core.first(arglist__20370);
arglist__20370 = cljs.core.next(arglist__20370);
var y = cljs.core.first(arglist__20370);
var zs = cljs.core.rest(arglist__20370);
return G__20368__delegate(x,y,zs);
});
G__20368.cljs$core$IFn$_invoke$arity$variadic = G__20368__delegate;
return G__20368;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__20371 = null;
if (arguments.length > 2) {
var G__20372__i = 0, G__20372__a = new Array(arguments.length -  2);
while (G__20372__i < G__20372__a.length) {G__20372__a[G__20372__i] = arguments[G__20372__i + 2]; ++G__20372__i;}
G__20371 = new cljs.core.IndexedSeq(G__20372__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20371);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__20373__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__20373 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__20374__i = 0, G__20374__a = new Array(arguments.length -  4);
while (G__20374__i < G__20374__a.length) {G__20374__a[G__20374__i] = arguments[G__20374__i + 4]; ++G__20374__i;}
  more = new cljs.core.IndexedSeq(G__20374__a,0);
} 
return G__20373__delegate.call(this,a,b,c,d,more);};
G__20373.cljs$lang$maxFixedArity = 4;
G__20373.cljs$lang$applyTo = (function (arglist__20375){
var a = cljs.core.first(arglist__20375);
arglist__20375 = cljs.core.next(arglist__20375);
var b = cljs.core.first(arglist__20375);
arglist__20375 = cljs.core.next(arglist__20375);
var c = cljs.core.first(arglist__20375);
arglist__20375 = cljs.core.next(arglist__20375);
var d = cljs.core.first(arglist__20375);
var more = cljs.core.rest(arglist__20375);
return G__20373__delegate(a,b,c,d,more);
});
G__20373.cljs$core$IFn$_invoke$arity$variadic = G__20373__delegate;
return G__20373;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__20376 = null;
if (arguments.length > 4) {
var G__20377__i = 0, G__20377__a = new Array(arguments.length -  4);
while (G__20377__i < G__20377__a.length) {G__20377__a[G__20377__i] = arguments[G__20377__i + 4]; ++G__20377__i;}
G__20376 = new cljs.core.IndexedSeq(G__20377__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__20376);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__20378__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__20379 = ntcoll;
var G__20380 = cljs.core.first(vals);
var G__20381 = cljs.core.next(vals);
tcoll = G__20379;
val = G__20380;
vals = G__20381;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__20378 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__20382__i = 0, G__20382__a = new Array(arguments.length -  2);
while (G__20382__i < G__20382__a.length) {G__20382__a[G__20382__i] = arguments[G__20382__i + 2]; ++G__20382__i;}
  vals = new cljs.core.IndexedSeq(G__20382__a,0);
} 
return G__20378__delegate.call(this,tcoll,val,vals);};
G__20378.cljs$lang$maxFixedArity = 2;
G__20378.cljs$lang$applyTo = (function (arglist__20383){
var tcoll = cljs.core.first(arglist__20383);
arglist__20383 = cljs.core.next(arglist__20383);
var val = cljs.core.first(arglist__20383);
var vals = cljs.core.rest(arglist__20383);
return G__20378__delegate(tcoll,val,vals);
});
G__20378.cljs$core$IFn$_invoke$arity$variadic = G__20378__delegate;
return G__20378;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__20384 = null;
if (arguments.length > 2) {
var G__20385__i = 0, G__20385__a = new Array(arguments.length -  2);
while (G__20385__i < G__20385__a.length) {G__20385__a[G__20385__i] = arguments[G__20385__i + 2]; ++G__20385__i;}
G__20384 = new cljs.core.IndexedSeq(G__20385__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__20384);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__20386__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__20387 = ntcoll;
var G__20388 = cljs.core.first(kvs);
var G__20389 = cljs.core.second(kvs);
var G__20390 = cljs.core.nnext(kvs);
tcoll = G__20387;
key = G__20388;
val = G__20389;
kvs = G__20390;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__20386 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__20391__i = 0, G__20391__a = new Array(arguments.length -  3);
while (G__20391__i < G__20391__a.length) {G__20391__a[G__20391__i] = arguments[G__20391__i + 3]; ++G__20391__i;}
  kvs = new cljs.core.IndexedSeq(G__20391__a,0);
} 
return G__20386__delegate.call(this,tcoll,key,val,kvs);};
G__20386.cljs$lang$maxFixedArity = 3;
G__20386.cljs$lang$applyTo = (function (arglist__20392){
var tcoll = cljs.core.first(arglist__20392);
arglist__20392 = cljs.core.next(arglist__20392);
var key = cljs.core.first(arglist__20392);
arglist__20392 = cljs.core.next(arglist__20392);
var val = cljs.core.first(arglist__20392);
var kvs = cljs.core.rest(arglist__20392);
return G__20386__delegate(tcoll,key,val,kvs);
});
G__20386.cljs$core$IFn$_invoke$arity$variadic = G__20386__delegate;
return G__20386;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__20393 = null;
if (arguments.length > 3) {
var G__20394__i = 0, G__20394__a = new Array(arguments.length -  3);
while (G__20394__i < G__20394__a.length) {G__20394__a[G__20394__i] = arguments[G__20394__i + 3]; ++G__20394__i;}
G__20393 = new cljs.core.IndexedSeq(G__20394__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__20393);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__20395__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__20396 = ntcoll;
var G__20397 = cljs.core.first(ks);
var G__20398 = cljs.core.next(ks);
tcoll = G__20396;
key = G__20397;
ks = G__20398;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__20395 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__20399__i = 0, G__20399__a = new Array(arguments.length -  2);
while (G__20399__i < G__20399__a.length) {G__20399__a[G__20399__i] = arguments[G__20399__i + 2]; ++G__20399__i;}
  ks = new cljs.core.IndexedSeq(G__20399__a,0);
} 
return G__20395__delegate.call(this,tcoll,key,ks);};
G__20395.cljs$lang$maxFixedArity = 2;
G__20395.cljs$lang$applyTo = (function (arglist__20400){
var tcoll = cljs.core.first(arglist__20400);
arglist__20400 = cljs.core.next(arglist__20400);
var key = cljs.core.first(arglist__20400);
var ks = cljs.core.rest(arglist__20400);
return G__20395__delegate(tcoll,key,ks);
});
G__20395.cljs$core$IFn$_invoke$arity$variadic = G__20395__delegate;
return G__20395;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__20401 = null;
if (arguments.length > 2) {
var G__20402__i = 0, G__20402__a = new Array(arguments.length -  2);
while (G__20402__i < G__20402__a.length) {G__20402__a[G__20402__i] = arguments[G__20402__i + 2]; ++G__20402__i;}
G__20401 = new cljs.core.IndexedSeq(G__20402__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__20401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__20403__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__20404 = ntcoll;
var G__20405 = cljs.core.first(vals);
var G__20406 = cljs.core.next(vals);
tcoll = G__20404;
val = G__20405;
vals = G__20406;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__20403 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__20407__i = 0, G__20407__a = new Array(arguments.length -  2);
while (G__20407__i < G__20407__a.length) {G__20407__a[G__20407__i] = arguments[G__20407__i + 2]; ++G__20407__i;}
  vals = new cljs.core.IndexedSeq(G__20407__a,0);
} 
return G__20403__delegate.call(this,tcoll,val,vals);};
G__20403.cljs$lang$maxFixedArity = 2;
G__20403.cljs$lang$applyTo = (function (arglist__20408){
var tcoll = cljs.core.first(arglist__20408);
arglist__20408 = cljs.core.next(arglist__20408);
var val = cljs.core.first(arglist__20408);
var vals = cljs.core.rest(arglist__20408);
return G__20403__delegate(tcoll,val,vals);
});
G__20403.cljs$core$IFn$_invoke$arity$variadic = G__20403__delegate;
return G__20403;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__20409 = null;
if (arguments.length > 2) {
var G__20410__i = 0, G__20410__a = new Array(arguments.length -  2);
while (G__20410__i < G__20410__a.length) {G__20410__a[G__20410__i] = arguments[G__20410__i + 2]; ++G__20410__i;}
G__20409 = new cljs.core.IndexedSeq(G__20410__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__20409);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a13524 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a13524);
} else {
var G__20621 = a13524;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20621) : f.call(null,G__20621));
}
} else {
var b13525 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a13524,b13525);
} else {
var G__20622 = a13524;
var G__20623 = b13525;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20622,G__20623) : f.call(null,G__20622,G__20623));
}
} else {
var c13526 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a13524,b13525,c13526);
} else {
var G__20624 = a13524;
var G__20625 = b13525;
var G__20626 = c13526;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20624,G__20625,G__20626) : f.call(null,G__20624,G__20625,G__20626));
}
} else {
var d13527 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a13524,b13525,c13526,d13527);
} else {
var G__20627 = a13524;
var G__20628 = b13525;
var G__20629 = c13526;
var G__20630 = d13527;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20627,G__20628,G__20629,G__20630) : f.call(null,G__20627,G__20628,G__20629,G__20630));
}
} else {
var e13528 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a13524,b13525,c13526,d13527,e13528);
} else {
var G__20631 = a13524;
var G__20632 = b13525;
var G__20633 = c13526;
var G__20634 = d13527;
var G__20635 = e13528;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20631,G__20632,G__20633,G__20634,G__20635) : f.call(null,G__20631,G__20632,G__20633,G__20634,G__20635));
}
} else {
var f13529 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a13524,b13525,c13526,d13527,e13528,f13529);
} else {
var G__20636 = a13524;
var G__20637 = b13525;
var G__20638 = c13526;
var G__20639 = d13527;
var G__20640 = e13528;
var G__20641 = f13529;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__20636,G__20637,G__20638,G__20639,G__20640,G__20641) : f.call(null,G__20636,G__20637,G__20638,G__20639,G__20640,G__20641));
}
} else {
var g13530 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a13524,b13525,c13526,d13527,e13528,f13529,g13530);
} else {
var G__20642 = a13524;
var G__20643 = b13525;
var G__20644 = c13526;
var G__20645 = d13527;
var G__20646 = e13528;
var G__20647 = f13529;
var G__20648 = g13530;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__20642,G__20643,G__20644,G__20645,G__20646,G__20647,G__20648) : f.call(null,G__20642,G__20643,G__20644,G__20645,G__20646,G__20647,G__20648));
}
} else {
var h13531 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a13524,b13525,c13526,d13527,e13528,f13529,g13530,h13531);
} else {
var G__20649 = a13524;
var G__20650 = b13525;
var G__20651 = c13526;
var G__20652 = d13527;
var G__20653 = e13528;
var G__20654 = f13529;
var G__20655 = g13530;
var G__20656 = h13531;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__20649,G__20650,G__20651,G__20652,G__20653,G__20654,G__20655,G__20656) : f.call(null,G__20649,G__20650,G__20651,G__20652,G__20653,G__20654,G__20655,G__20656));
}
} else {
var i13532 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a13524,b13525,c13526,d13527,e13528,f13529,g13530,h13531,i13532);
} else {
var G__20657 = a13524;
var G__20658 = b13525;
var G__20659 = c13526;
var G__20660 = d13527;
var G__20661 = e13528;
var G__20662 = f13529;
var G__20663 = g13530;
var G__20664 = h13531;
var G__20665 = i13532;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__20657,G__20658,G__20659,G__20660,G__20661,G__20662,G__20663,G__20664,G__20665) : f.call(null,G__20657,G__20658,G__20659,G__20660,G__20661,G__20662,G__20663,G__20664,G__20665));
}
} else {
var j13533 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a13524,b13525,c13526,d13527,e13528,f13529,g13530,h13531,i13532,j13533);
} else {
var G__20666 = a13524;
var G__20667 = b13525;
var G__20668 = c13526;
var G__20669 = d13527;
var G__20670 = e13528;
var G__20671 = f13529;
var G__20672 = g13530;
var G__20673 = h13531;
var G__20674 = i13532;
var G__20675 = j13533;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__20666,G__20667,G__20668,G__20669,G__20670,G__20671,G__20672,G__20673,G__20674,G__20675) : f.call(null,G__20666,G__20667,G__20668,G__20669,G__20670,G__20671,G__20672,G__20673,G__20674,G__20675));
}
} else {
var k13534 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a13524,b13525,c13526,d13527,e13528,f13529,g13530,h13531,i13532,j13533,k13534);
} else {
var G__20676 = a13524;
var G__20677 = b13525;
var G__20678 = c13526;
var G__20679 = d13527;
var G__20680 = e13528;
var G__20681 = f13529;
var G__20682 = g13530;
var G__20683 = h13531;
var G__20684 = i13532;
var G__20685 = j13533;
var G__20686 = k13534;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__20676,G__20677,G__20678,G__20679,G__20680,G__20681,G__20682,G__20683,G__20684,G__20685,G__20686) : f.call(null,G__20676,G__20677,G__20678,G__20679,G__20680,G__20681,G__20682,G__20683,G__20684,G__20685,G__20686));
}
} else {
var l13535 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a13524,b13525,c13526,d13527,e13528,f13529,g13530,h13531,i13532,j13533,k13534,l13535);
} else {
var G__20687 = a13524;
var G__20688 = b13525;
var G__20689 = c13526;
var G__20690 = d13527;
var G__20691 = e13528;
var G__20692 = f13529;
var G__20693 = g13530;
var G__20694 = h13531;
var G__20695 = i13532;
var G__20696 = j13533;
var G__20697 = k13534;
var G__20698 = l13535;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__20687,G__20688,G__20689,G__20690,G__20691,G__20692,G__20693,G__20694,G__20695,G__20696,G__20697,G__20698) : f.call(null,G__20687,G__20688,G__20689,G__20690,G__20691,G__20692,G__20693,G__20694,G__20695,G__20696,G__20697,G__20698));
}
} else {
var m13536 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a13524,b13525,c13526,d13527,e13528,f13529,g13530,h13531,i13532,j13533,k13534,l13535,m13536);
} else {
var G__20699 = a13524;
var G__20700 = b13525;
var G__20701 = c13526;
var G__20702 = d13527;
var G__20703 = e13528;
var G__20704 = f13529;
var G__20705 = g13530;
var G__20706 = h13531;
var G__20707 = i13532;
var G__20708 = j13533;
var G__20709 = k13534;
var G__20710 = l13535;
var G__20711 = m13536;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__20699,G__20700,G__20701,G__20702,G__20703,G__20704,G__20705,G__20706,G__20707,G__20708,G__20709,G__20710,G__20711) : f.call(null,G__20699,G__20700,G__20701,G__20702,G__20703,G__20704,G__20705,G__20706,G__20707,G__20708,G__20709,G__20710,G__20711));
}
} else {
var n13537 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a13524,b13525,c13526,d13527,e13528,f13529,g13530,h13531,i13532,j13533,k13534,l13535,m13536,n13537);
} else {
var G__20712 = a13524;
var G__20713 = b13525;
var G__20714 = c13526;
var G__20715 = d13527;
var G__20716 = e13528;
var G__20717 = f13529;
var G__20718 = g13530;
var G__20719 = h13531;
var G__20720 = i13532;
var G__20721 = j13533;
var G__20722 = k13534;
var G__20723 = l13535;
var G__20724 = m13536;
var G__20725 = n13537;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__20712,G__20713,G__20714,G__20715,G__20716,G__20717,G__20718,G__20719,G__20720,G__20721,G__20722,G__20723,G__20724,G__20725) : f.call(null,G__20712,G__20713,G__20714,G__20715,G__20716,G__20717,G__20718,G__20719,G__20720,G__20721,G__20722,G__20723,G__20724,G__20725));
}
} else {
var o13538 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a13524,b13525,c13526,d13527,e13528,f13529,g13530,h13531,i13532,j13533,k13534,l13535,m13536,n13537,o13538);
} else {
var G__20726 = a13524;
var G__20727 = b13525;
var G__20728 = c13526;
var G__20729 = d13527;
var G__20730 = e13528;
var G__20731 = f13529;
var G__20732 = g13530;
var G__20733 = h13531;
var G__20734 = i13532;
var G__20735 = j13533;
var G__20736 = k13534;
var G__20737 = l13535;
var G__20738 = m13536;
var G__20739 = n13537;
var G__20740 = o13538;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__20726,G__20727,G__20728,G__20729,G__20730,G__20731,G__20732,G__20733,G__20734,G__20735,G__20736,G__20737,G__20738,G__20739,G__20740) : f.call(null,G__20726,G__20727,G__20728,G__20729,G__20730,G__20731,G__20732,G__20733,G__20734,G__20735,G__20736,G__20737,G__20738,G__20739,G__20740));
}
} else {
var p13539 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a13524,b13525,c13526,d13527,e13528,f13529,g13530,h13531,i13532,j13533,k13534,l13535,m13536,n13537,o13538,p13539);
} else {
var G__20741 = a13524;
var G__20742 = b13525;
var G__20743 = c13526;
var G__20744 = d13527;
var G__20745 = e13528;
var G__20746 = f13529;
var G__20747 = g13530;
var G__20748 = h13531;
var G__20749 = i13532;
var G__20750 = j13533;
var G__20751 = k13534;
var G__20752 = l13535;
var G__20753 = m13536;
var G__20754 = n13537;
var G__20755 = o13538;
var G__20756 = p13539;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__20741,G__20742,G__20743,G__20744,G__20745,G__20746,G__20747,G__20748,G__20749,G__20750,G__20751,G__20752,G__20753,G__20754,G__20755,G__20756) : f.call(null,G__20741,G__20742,G__20743,G__20744,G__20745,G__20746,G__20747,G__20748,G__20749,G__20750,G__20751,G__20752,G__20753,G__20754,G__20755,G__20756));
}
} else {
var q13540 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a13524,b13525,c13526,d13527,e13528,f13529,g13530,h13531,i13532,j13533,k13534,l13535,m13536,n13537,o13538,p13539,q13540);
} else {
var G__20757 = a13524;
var G__20758 = b13525;
var G__20759 = c13526;
var G__20760 = d13527;
var G__20761 = e13528;
var G__20762 = f13529;
var G__20763 = g13530;
var G__20764 = h13531;
var G__20765 = i13532;
var G__20766 = j13533;
var G__20767 = k13534;
var G__20768 = l13535;
var G__20769 = m13536;
var G__20770 = n13537;
var G__20771 = o13538;
var G__20772 = p13539;
var G__20773 = q13540;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__20757,G__20758,G__20759,G__20760,G__20761,G__20762,G__20763,G__20764,G__20765,G__20766,G__20767,G__20768,G__20769,G__20770,G__20771,G__20772,G__20773) : f.call(null,G__20757,G__20758,G__20759,G__20760,G__20761,G__20762,G__20763,G__20764,G__20765,G__20766,G__20767,G__20768,G__20769,G__20770,G__20771,G__20772,G__20773));
}
} else {
var r13541 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a13524,b13525,c13526,d13527,e13528,f13529,g13530,h13531,i13532,j13533,k13534,l13535,m13536,n13537,o13538,p13539,q13540,r13541);
} else {
var G__20774 = a13524;
var G__20775 = b13525;
var G__20776 = c13526;
var G__20777 = d13527;
var G__20778 = e13528;
var G__20779 = f13529;
var G__20780 = g13530;
var G__20781 = h13531;
var G__20782 = i13532;
var G__20783 = j13533;
var G__20784 = k13534;
var G__20785 = l13535;
var G__20786 = m13536;
var G__20787 = n13537;
var G__20788 = o13538;
var G__20789 = p13539;
var G__20790 = q13540;
var G__20791 = r13541;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__20774,G__20775,G__20776,G__20777,G__20778,G__20779,G__20780,G__20781,G__20782,G__20783,G__20784,G__20785,G__20786,G__20787,G__20788,G__20789,G__20790,G__20791) : f.call(null,G__20774,G__20775,G__20776,G__20777,G__20778,G__20779,G__20780,G__20781,G__20782,G__20783,G__20784,G__20785,G__20786,G__20787,G__20788,G__20789,G__20790,G__20791));
}
} else {
var s13542 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a13524,b13525,c13526,d13527,e13528,f13529,g13530,h13531,i13532,j13533,k13534,l13535,m13536,n13537,o13538,p13539,q13540,r13541,s13542);
} else {
var G__20792 = a13524;
var G__20793 = b13525;
var G__20794 = c13526;
var G__20795 = d13527;
var G__20796 = e13528;
var G__20797 = f13529;
var G__20798 = g13530;
var G__20799 = h13531;
var G__20800 = i13532;
var G__20801 = j13533;
var G__20802 = k13534;
var G__20803 = l13535;
var G__20804 = m13536;
var G__20805 = n13537;
var G__20806 = o13538;
var G__20807 = p13539;
var G__20808 = q13540;
var G__20809 = r13541;
var G__20810 = s13542;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__20792,G__20793,G__20794,G__20795,G__20796,G__20797,G__20798,G__20799,G__20800,G__20801,G__20802,G__20803,G__20804,G__20805,G__20806,G__20807,G__20808,G__20809,G__20810) : f.call(null,G__20792,G__20793,G__20794,G__20795,G__20796,G__20797,G__20798,G__20799,G__20800,G__20801,G__20802,G__20803,G__20804,G__20805,G__20806,G__20807,G__20808,G__20809,G__20810));
}
} else {
var t13543 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a13524,b13525,c13526,d13527,e13528,f13529,g13530,h13531,i13532,j13533,k13534,l13535,m13536,n13537,o13538,p13539,q13540,r13541,s13542,t13543);
} else {
var G__20811 = a13524;
var G__20812 = b13525;
var G__20813 = c13526;
var G__20814 = d13527;
var G__20815 = e13528;
var G__20816 = f13529;
var G__20817 = g13530;
var G__20818 = h13531;
var G__20819 = i13532;
var G__20820 = j13533;
var G__20821 = k13534;
var G__20822 = l13535;
var G__20823 = m13536;
var G__20824 = n13537;
var G__20825 = o13538;
var G__20826 = p13539;
var G__20827 = q13540;
var G__20828 = r13541;
var G__20829 = s13542;
var G__20830 = t13543;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__20811,G__20812,G__20813,G__20814,G__20815,G__20816,G__20817,G__20818,G__20819,G__20820,G__20821,G__20822,G__20823,G__20824,G__20825,G__20826,G__20827,G__20828,G__20829,G__20830) : f.call(null,G__20811,G__20812,G__20813,G__20814,G__20815,G__20816,G__20817,G__20818,G__20819,G__20820,G__20821,G__20822,G__20823,G__20824,G__20825,G__20826,G__20827,G__20828,G__20829,G__20830));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__20831__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__20831 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__20832__i = 0, G__20832__a = new Array(arguments.length -  5);
while (G__20832__i < G__20832__a.length) {G__20832__a[G__20832__i] = arguments[G__20832__i + 5]; ++G__20832__i;}
  args = new cljs.core.IndexedSeq(G__20832__a,0);
} 
return G__20831__delegate.call(this,f,a,b,c,d,args);};
G__20831.cljs$lang$maxFixedArity = 5;
G__20831.cljs$lang$applyTo = (function (arglist__20833){
var f = cljs.core.first(arglist__20833);
arglist__20833 = cljs.core.next(arglist__20833);
var a = cljs.core.first(arglist__20833);
arglist__20833 = cljs.core.next(arglist__20833);
var b = cljs.core.first(arglist__20833);
arglist__20833 = cljs.core.next(arglist__20833);
var c = cljs.core.first(arglist__20833);
arglist__20833 = cljs.core.next(arglist__20833);
var d = cljs.core.first(arglist__20833);
var args = cljs.core.rest(arglist__20833);
return G__20831__delegate(f,a,b,c,d,args);
});
G__20831.cljs$core$IFn$_invoke$arity$variadic = G__20831__delegate;
return G__20831;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__20834 = null;
if (arguments.length > 5) {
var G__20835__i = 0, G__20835__a = new Array(arguments.length -  5);
while (G__20835__i < G__20835__a.length) {G__20835__a[G__20835__i] = arguments[G__20835__i + 5]; ++G__20835__i;}
G__20834 = new cljs.core.IndexedSeq(G__20835__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__20834);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__20851 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20851) : f.call(null,G__20851));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__20852 = cljs.core.meta(obj);
var G__20853 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20852,G__20853) : f.call(null,G__20852,G__20853));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__20854 = cljs.core.meta(obj);
var G__20855 = a;
var G__20856 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20854,G__20855,G__20856) : f.call(null,G__20854,G__20855,G__20856));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__20857 = cljs.core.meta(obj);
var G__20858 = a;
var G__20859 = b;
var G__20860 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20857,G__20858,G__20859,G__20860) : f.call(null,G__20857,G__20858,G__20859,G__20860));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__20861 = cljs.core.meta(obj);
var G__20862 = a;
var G__20863 = b;
var G__20864 = c;
var G__20865 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20861,G__20862,G__20863,G__20864,G__20865) : f.call(null,G__20861,G__20862,G__20863,G__20864,G__20865));
})());
});
var vary_meta__7 = (function() { 
var G__20866__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__20866 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__20867__i = 0, G__20867__a = new Array(arguments.length -  6);
while (G__20867__i < G__20867__a.length) {G__20867__a[G__20867__i] = arguments[G__20867__i + 6]; ++G__20867__i;}
  args = new cljs.core.IndexedSeq(G__20867__a,0);
} 
return G__20866__delegate.call(this,obj,f,a,b,c,d,args);};
G__20866.cljs$lang$maxFixedArity = 6;
G__20866.cljs$lang$applyTo = (function (arglist__20868){
var obj = cljs.core.first(arglist__20868);
arglist__20868 = cljs.core.next(arglist__20868);
var f = cljs.core.first(arglist__20868);
arglist__20868 = cljs.core.next(arglist__20868);
var a = cljs.core.first(arglist__20868);
arglist__20868 = cljs.core.next(arglist__20868);
var b = cljs.core.first(arglist__20868);
arglist__20868 = cljs.core.next(arglist__20868);
var c = cljs.core.first(arglist__20868);
arglist__20868 = cljs.core.next(arglist__20868);
var d = cljs.core.first(arglist__20868);
var args = cljs.core.rest(arglist__20868);
return G__20866__delegate(obj,f,a,b,c,d,args);
});
G__20866.cljs$core$IFn$_invoke$arity$variadic = G__20866__delegate;
return G__20866;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__20869 = null;
if (arguments.length > 6) {
var G__20870__i = 0, G__20870__a = new Array(arguments.length -  6);
while (G__20870__i < G__20870__a.length) {G__20870__a[G__20870__i] = arguments[G__20870__i + 6]; ++G__20870__i;}
G__20869 = new cljs.core.IndexedSeq(G__20870__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__20869);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__20871__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__20871 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20872__i = 0, G__20872__a = new Array(arguments.length -  2);
while (G__20872__i < G__20872__a.length) {G__20872__a[G__20872__i] = arguments[G__20872__i + 2]; ++G__20872__i;}
  more = new cljs.core.IndexedSeq(G__20872__a,0);
} 
return G__20871__delegate.call(this,x,y,more);};
G__20871.cljs$lang$maxFixedArity = 2;
G__20871.cljs$lang$applyTo = (function (arglist__20873){
var x = cljs.core.first(arglist__20873);
arglist__20873 = cljs.core.next(arglist__20873);
var y = cljs.core.first(arglist__20873);
var more = cljs.core.rest(arglist__20873);
return G__20871__delegate(x,y,more);
});
G__20871.cljs$core$IFn$_invoke$arity$variadic = G__20871__delegate;
return G__20871;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__20874 = null;
if (arguments.length > 2) {
var G__20875__i = 0, G__20875__a = new Array(arguments.length -  2);
while (G__20875__i < G__20875__a.length) {G__20875__a[G__20875__i] = arguments[G__20875__i + 2]; ++G__20875__i;}
G__20874 = new cljs.core.IndexedSeq(G__20875__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20874);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t20879 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t20879 = (function (nil_iter,meta20880){
this.nil_iter = nil_iter;
this.meta20880 = meta20880;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t20879.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t20879.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t20879.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t20879.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_20881){
var self__ = this;
var _20881__$1 = this;
return self__.meta20880;
});

cljs.core.t20879.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_20881,meta20880__$1){
var self__ = this;
var _20881__$1 = this;
return (new cljs.core.t20879(self__.nil_iter,meta20880__$1));
});

cljs.core.t20879.cljs$lang$type = true;

cljs.core.t20879.cljs$lang$ctorStr = "cljs.core/t20879";

cljs.core.t20879.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/t20879");
});

cljs.core.__GT_t20879 = (function __GT_t20879(nil_iter__$1,meta20880){
return (new cljs.core.t20879(nil_iter__$1,meta20880));
});

}

return (new cljs.core.t20879(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),2998,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),2994,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/carlos/OpenSource/mies-wheel-test/resources/public/js/compiled/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__12581__auto__ = !((lt.stepper == null));
if(and__12581__auto__){
return self__.iter.hasNext();
} else {
return and__12581__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__20882 = lt;
var G__20883 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__20882,G__20883) : self__.xform.call(null,G__20882,G__20883));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__20884 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__20884) : self__.xform.call(null,G__20884));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__20886 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__20886) : xform.call(null,G__20886));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__20888 = cljs.core.next(iters__$1);
iters__$1 = G__20888;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__13480__auto___20889 = self__.iters.length;
var i_20890 = (0);
while(true){
if((i_20890 < n__13480__auto___20889)){
(self__.nexts[i_20890] = (self__.iters[i_20890]).next());

var G__20891 = (i_20890 + (1));
i_20890 = G__20891;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__12581__auto__ = !((lt.stepper == null));
if(and__12581__auto__){
return this$.hasNext();
} else {
return and__12581__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__20887 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__20887) : self__.xform.call(null,G__20887));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__20896 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__20896) : xform.call(null,G__20896));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__20897_20901 = cljs.core.seq(colls);
var chunk__20898_20902 = null;
var count__20899_20903 = (0);
var i__20900_20904 = (0);
while(true){
if((i__20900_20904 < count__20899_20903)){
var coll_20905 = chunk__20898_20902.cljs$core$IIndexed$_nth$arity$2(null,i__20900_20904);
iters.push(cljs.core.iter(coll_20905));

var G__20906 = seq__20897_20901;
var G__20907 = chunk__20898_20902;
var G__20908 = count__20899_20903;
var G__20909 = (i__20900_20904 + (1));
seq__20897_20901 = G__20906;
chunk__20898_20902 = G__20907;
count__20899_20903 = G__20908;
i__20900_20904 = G__20909;
continue;
} else {
var temp__4126__auto___20910 = cljs.core.seq(seq__20897_20901);
if(temp__4126__auto___20910){
var seq__20897_20911__$1 = temp__4126__auto___20910;
if(cljs.core.chunked_seq_QMARK_(seq__20897_20911__$1)){
var c__13380__auto___20912 = cljs.core.chunk_first(seq__20897_20911__$1);
var G__20913 = cljs.core.chunk_rest(seq__20897_20911__$1);
var G__20914 = c__13380__auto___20912;
var G__20915 = cljs.core.count(c__13380__auto___20912);
var G__20916 = (0);
seq__20897_20901 = G__20913;
chunk__20898_20902 = G__20914;
count__20899_20903 = G__20915;
i__20900_20904 = G__20916;
continue;
} else {
var coll_20917 = cljs.core.first(seq__20897_20911__$1);
iters.push(cljs.core.iter(coll_20917));

var G__20918 = cljs.core.next(seq__20897_20911__$1);
var G__20919 = null;
var G__20920 = (0);
var G__20921 = (0);
seq__20897_20901 = G__20918;
chunk__20898_20902 = G__20919;
count__20899_20903 = G__20920;
i__20900_20904 = G__20921;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__12593__auto__ = cljs.core.seq(coll);
if(or__12593__auto__){
return or__12593__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__20922__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__20922 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__20923__i = 0, G__20923__a = new Array(arguments.length -  2);
while (G__20923__i < G__20923__a.length) {G__20923__a[G__20923__i] = arguments[G__20923__i + 2]; ++G__20923__i;}
  colls = new cljs.core.IndexedSeq(G__20923__a,0);
} 
return G__20922__delegate.call(this,xform,coll,colls);};
G__20922.cljs$lang$maxFixedArity = 2;
G__20922.cljs$lang$applyTo = (function (arglist__20924){
var xform = cljs.core.first(arglist__20924);
arglist__20924 = cljs.core.next(arglist__20924);
var coll = cljs.core.first(arglist__20924);
var colls = cljs.core.rest(arglist__20924);
return G__20922__delegate(xform,coll,colls);
});
G__20922.cljs$core$IFn$_invoke$arity$variadic = G__20922__delegate;
return G__20922;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__20925 = null;
if (arguments.length > 2) {
var G__20926__i = 0, G__20926__a = new Array(arguments.length -  2);
while (G__20926__i < G__20926__a.length) {G__20926__a[G__20926__i] = arguments[G__20926__i + 2]; ++G__20926__i;}
G__20925 = new cljs.core.IndexedSeq(G__20926__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__20925);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__20928 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20928) : pred.call(null,G__20928));
})())){
var G__20929 = pred;
var G__20930 = cljs.core.next(coll);
pred = G__20929;
coll = G__20930;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__12593__auto__ = (function (){var G__20934 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20934) : pred.call(null,G__20934));
})();
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
var G__20935 = pred;
var G__20936 = cljs.core.next(coll);
pred = G__20935;
coll = G__20936;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__20943 = null;
var G__20943__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__20943__1 = (function (x){
return cljs.core.not((function (){var G__20940 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20940) : f.call(null,G__20940));
})());
});
var G__20943__2 = (function (x,y){
return cljs.core.not((function (){var G__20941 = x;
var G__20942 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20941,G__20942) : f.call(null,G__20941,G__20942));
})());
});
var G__20943__3 = (function() { 
var G__20944__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__20944 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__20945__i = 0, G__20945__a = new Array(arguments.length -  2);
while (G__20945__i < G__20945__a.length) {G__20945__a[G__20945__i] = arguments[G__20945__i + 2]; ++G__20945__i;}
  zs = new cljs.core.IndexedSeq(G__20945__a,0);
} 
return G__20944__delegate.call(this,x,y,zs);};
G__20944.cljs$lang$maxFixedArity = 2;
G__20944.cljs$lang$applyTo = (function (arglist__20946){
var x = cljs.core.first(arglist__20946);
arglist__20946 = cljs.core.next(arglist__20946);
var y = cljs.core.first(arglist__20946);
var zs = cljs.core.rest(arglist__20946);
return G__20944__delegate(x,y,zs);
});
G__20944.cljs$core$IFn$_invoke$arity$variadic = G__20944__delegate;
return G__20944;
})()
;
G__20943 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__20943__0.call(this);
case 1:
return G__20943__1.call(this,x);
case 2:
return G__20943__2.call(this,x,y);
default:
var G__20947 = null;
if (arguments.length > 2) {
var G__20948__i = 0, G__20948__a = new Array(arguments.length -  2);
while (G__20948__i < G__20948__a.length) {G__20948__a[G__20948__i] = arguments[G__20948__i + 2]; ++G__20948__i;}
G__20947 = new cljs.core.IndexedSeq(G__20948__a,0);
}
return G__20943__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20947);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20943.cljs$lang$maxFixedArity = 2;
G__20943.cljs$lang$applyTo = G__20943__3.cljs$lang$applyTo;
G__20943.cljs$core$IFn$_invoke$arity$0 = G__20943__0;
G__20943.cljs$core$IFn$_invoke$arity$1 = G__20943__1;
G__20943.cljs$core$IFn$_invoke$arity$2 = G__20943__2;
G__20943.cljs$core$IFn$_invoke$arity$variadic = G__20943__3.cljs$core$IFn$_invoke$arity$variadic;
return G__20943;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__20949__delegate = function (args){
return x;
};
var G__20949 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20950__i = 0, G__20950__a = new Array(arguments.length -  0);
while (G__20950__i < G__20950__a.length) {G__20950__a[G__20950__i] = arguments[G__20950__i + 0]; ++G__20950__i;}
  args = new cljs.core.IndexedSeq(G__20950__a,0);
} 
return G__20949__delegate.call(this,args);};
G__20949.cljs$lang$maxFixedArity = 0;
G__20949.cljs$lang$applyTo = (function (arglist__20951){
var args = cljs.core.seq(arglist__20951);
return G__20949__delegate(args);
});
G__20949.cljs$core$IFn$_invoke$arity$variadic = G__20949__delegate;
return G__20949;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__21006 = null;
var G__21006__0 = (function (){
var G__20979 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20979) : f.call(null,G__20979));
});
var G__21006__1 = (function (x){
var G__20980 = (function (){var G__20981 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20981) : g.call(null,G__20981));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20980) : f.call(null,G__20980));
});
var G__21006__2 = (function (x,y){
var G__20982 = (function (){var G__20983 = x;
var G__20984 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__20983,G__20984) : g.call(null,G__20983,G__20984));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20982) : f.call(null,G__20982));
});
var G__21006__3 = (function (x,y,z){
var G__20985 = (function (){var G__20986 = x;
var G__20987 = y;
var G__20988 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__20986,G__20987,G__20988) : g.call(null,G__20986,G__20987,G__20988));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20985) : f.call(null,G__20985));
});
var G__21006__4 = (function() { 
var G__21007__delegate = function (x,y,z,args){
var G__20989 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20989) : f.call(null,G__20989));
};
var G__21007 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21008__i = 0, G__21008__a = new Array(arguments.length -  3);
while (G__21008__i < G__21008__a.length) {G__21008__a[G__21008__i] = arguments[G__21008__i + 3]; ++G__21008__i;}
  args = new cljs.core.IndexedSeq(G__21008__a,0);
} 
return G__21007__delegate.call(this,x,y,z,args);};
G__21007.cljs$lang$maxFixedArity = 3;
G__21007.cljs$lang$applyTo = (function (arglist__21009){
var x = cljs.core.first(arglist__21009);
arglist__21009 = cljs.core.next(arglist__21009);
var y = cljs.core.first(arglist__21009);
arglist__21009 = cljs.core.next(arglist__21009);
var z = cljs.core.first(arglist__21009);
var args = cljs.core.rest(arglist__21009);
return G__21007__delegate(x,y,z,args);
});
G__21007.cljs$core$IFn$_invoke$arity$variadic = G__21007__delegate;
return G__21007;
})()
;
G__21006 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21006__0.call(this);
case 1:
return G__21006__1.call(this,x);
case 2:
return G__21006__2.call(this,x,y);
case 3:
return G__21006__3.call(this,x,y,z);
default:
var G__21010 = null;
if (arguments.length > 3) {
var G__21011__i = 0, G__21011__a = new Array(arguments.length -  3);
while (G__21011__i < G__21011__a.length) {G__21011__a[G__21011__i] = arguments[G__21011__i + 3]; ++G__21011__i;}
G__21010 = new cljs.core.IndexedSeq(G__21011__a,0);
}
return G__21006__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21010);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21006.cljs$lang$maxFixedArity = 3;
G__21006.cljs$lang$applyTo = G__21006__4.cljs$lang$applyTo;
G__21006.cljs$core$IFn$_invoke$arity$0 = G__21006__0;
G__21006.cljs$core$IFn$_invoke$arity$1 = G__21006__1;
G__21006.cljs$core$IFn$_invoke$arity$2 = G__21006__2;
G__21006.cljs$core$IFn$_invoke$arity$3 = G__21006__3;
G__21006.cljs$core$IFn$_invoke$arity$variadic = G__21006__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21006;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__21012 = null;
var G__21012__0 = (function (){
var G__20990 = (function (){var G__20991 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20991) : g.call(null,G__20991));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20990) : f.call(null,G__20990));
});
var G__21012__1 = (function (x){
var G__20992 = (function (){var G__20993 = (function (){var G__20994 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__20994) : h.call(null,G__20994));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20993) : g.call(null,G__20993));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20992) : f.call(null,G__20992));
});
var G__21012__2 = (function (x,y){
var G__20995 = (function (){var G__20996 = (function (){var G__20997 = x;
var G__20998 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__20997,G__20998) : h.call(null,G__20997,G__20998));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20996) : g.call(null,G__20996));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20995) : f.call(null,G__20995));
});
var G__21012__3 = (function (x,y,z){
var G__20999 = (function (){var G__21000 = (function (){var G__21001 = x;
var G__21002 = y;
var G__21003 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__21001,G__21002,G__21003) : h.call(null,G__21001,G__21002,G__21003));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21000) : g.call(null,G__21000));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20999) : f.call(null,G__20999));
});
var G__21012__4 = (function() { 
var G__21013__delegate = function (x,y,z,args){
var G__21004 = (function (){var G__21005 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__21005) : g.call(null,G__21005));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21004) : f.call(null,G__21004));
};
var G__21013 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21014__i = 0, G__21014__a = new Array(arguments.length -  3);
while (G__21014__i < G__21014__a.length) {G__21014__a[G__21014__i] = arguments[G__21014__i + 3]; ++G__21014__i;}
  args = new cljs.core.IndexedSeq(G__21014__a,0);
} 
return G__21013__delegate.call(this,x,y,z,args);};
G__21013.cljs$lang$maxFixedArity = 3;
G__21013.cljs$lang$applyTo = (function (arglist__21015){
var x = cljs.core.first(arglist__21015);
arglist__21015 = cljs.core.next(arglist__21015);
var y = cljs.core.first(arglist__21015);
arglist__21015 = cljs.core.next(arglist__21015);
var z = cljs.core.first(arglist__21015);
var args = cljs.core.rest(arglist__21015);
return G__21013__delegate(x,y,z,args);
});
G__21013.cljs$core$IFn$_invoke$arity$variadic = G__21013__delegate;
return G__21013;
})()
;
G__21012 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21012__0.call(this);
case 1:
return G__21012__1.call(this,x);
case 2:
return G__21012__2.call(this,x,y);
case 3:
return G__21012__3.call(this,x,y,z);
default:
var G__21016 = null;
if (arguments.length > 3) {
var G__21017__i = 0, G__21017__a = new Array(arguments.length -  3);
while (G__21017__i < G__21017__a.length) {G__21017__a[G__21017__i] = arguments[G__21017__i + 3]; ++G__21017__i;}
G__21016 = new cljs.core.IndexedSeq(G__21017__a,0);
}
return G__21012__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21016);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21012.cljs$lang$maxFixedArity = 3;
G__21012.cljs$lang$applyTo = G__21012__4.cljs$lang$applyTo;
G__21012.cljs$core$IFn$_invoke$arity$0 = G__21012__0;
G__21012.cljs$core$IFn$_invoke$arity$1 = G__21012__1;
G__21012.cljs$core$IFn$_invoke$arity$2 = G__21012__2;
G__21012.cljs$core$IFn$_invoke$arity$3 = G__21012__3;
G__21012.cljs$core$IFn$_invoke$arity$variadic = G__21012__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21012;
})()
});
var comp__4 = (function() { 
var G__21018__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__21019__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__21020 = cljs.core.first(fs__$2).call(null,ret);
var G__21021 = cljs.core.next(fs__$2);
ret = G__21020;
fs__$2 = G__21021;
continue;
} else {
return ret;
}
break;
}
};
var G__21019 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__21022__i = 0, G__21022__a = new Array(arguments.length -  0);
while (G__21022__i < G__21022__a.length) {G__21022__a[G__21022__i] = arguments[G__21022__i + 0]; ++G__21022__i;}
  args = new cljs.core.IndexedSeq(G__21022__a,0);
} 
return G__21019__delegate.call(this,args);};
G__21019.cljs$lang$maxFixedArity = 0;
G__21019.cljs$lang$applyTo = (function (arglist__21023){
var args = cljs.core.seq(arglist__21023);
return G__21019__delegate(args);
});
G__21019.cljs$core$IFn$_invoke$arity$variadic = G__21019__delegate;
return G__21019;
})()
;
;})(fs__$1))
};
var G__21018 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__21024__i = 0, G__21024__a = new Array(arguments.length -  3);
while (G__21024__i < G__21024__a.length) {G__21024__a[G__21024__i] = arguments[G__21024__i + 3]; ++G__21024__i;}
  fs = new cljs.core.IndexedSeq(G__21024__a,0);
} 
return G__21018__delegate.call(this,f1,f2,f3,fs);};
G__21018.cljs$lang$maxFixedArity = 3;
G__21018.cljs$lang$applyTo = (function (arglist__21025){
var f1 = cljs.core.first(arglist__21025);
arglist__21025 = cljs.core.next(arglist__21025);
var f2 = cljs.core.first(arglist__21025);
arglist__21025 = cljs.core.next(arglist__21025);
var f3 = cljs.core.first(arglist__21025);
var fs = cljs.core.rest(arglist__21025);
return G__21018__delegate(f1,f2,f3,fs);
});
G__21018.cljs$core$IFn$_invoke$arity$variadic = G__21018__delegate;
return G__21018;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__21026 = null;
if (arguments.length > 3) {
var G__21027__i = 0, G__21027__a = new Array(arguments.length -  3);
while (G__21027__i < G__21027__a.length) {G__21027__a[G__21027__i] = arguments[G__21027__i + 3]; ++G__21027__i;}
G__21026 = new cljs.core.IndexedSeq(G__21027__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__21026);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__21112 = null;
var G__21112__0 = (function (){
var G__21070 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21070) : f.call(null,G__21070));
});
var G__21112__1 = (function (x){
var G__21071 = arg1;
var G__21072 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21071,G__21072) : f.call(null,G__21071,G__21072));
});
var G__21112__2 = (function (x,y){
var G__21073 = arg1;
var G__21074 = x;
var G__21075 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21073,G__21074,G__21075) : f.call(null,G__21073,G__21074,G__21075));
});
var G__21112__3 = (function (x,y,z){
var G__21076 = arg1;
var G__21077 = x;
var G__21078 = y;
var G__21079 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21076,G__21077,G__21078,G__21079) : f.call(null,G__21076,G__21077,G__21078,G__21079));
});
var G__21112__4 = (function() { 
var G__21113__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__21113 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21114__i = 0, G__21114__a = new Array(arguments.length -  3);
while (G__21114__i < G__21114__a.length) {G__21114__a[G__21114__i] = arguments[G__21114__i + 3]; ++G__21114__i;}
  args = new cljs.core.IndexedSeq(G__21114__a,0);
} 
return G__21113__delegate.call(this,x,y,z,args);};
G__21113.cljs$lang$maxFixedArity = 3;
G__21113.cljs$lang$applyTo = (function (arglist__21115){
var x = cljs.core.first(arglist__21115);
arglist__21115 = cljs.core.next(arglist__21115);
var y = cljs.core.first(arglist__21115);
arglist__21115 = cljs.core.next(arglist__21115);
var z = cljs.core.first(arglist__21115);
var args = cljs.core.rest(arglist__21115);
return G__21113__delegate(x,y,z,args);
});
G__21113.cljs$core$IFn$_invoke$arity$variadic = G__21113__delegate;
return G__21113;
})()
;
G__21112 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21112__0.call(this);
case 1:
return G__21112__1.call(this,x);
case 2:
return G__21112__2.call(this,x,y);
case 3:
return G__21112__3.call(this,x,y,z);
default:
var G__21116 = null;
if (arguments.length > 3) {
var G__21117__i = 0, G__21117__a = new Array(arguments.length -  3);
while (G__21117__i < G__21117__a.length) {G__21117__a[G__21117__i] = arguments[G__21117__i + 3]; ++G__21117__i;}
G__21116 = new cljs.core.IndexedSeq(G__21117__a,0);
}
return G__21112__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21116);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21112.cljs$lang$maxFixedArity = 3;
G__21112.cljs$lang$applyTo = G__21112__4.cljs$lang$applyTo;
G__21112.cljs$core$IFn$_invoke$arity$0 = G__21112__0;
G__21112.cljs$core$IFn$_invoke$arity$1 = G__21112__1;
G__21112.cljs$core$IFn$_invoke$arity$2 = G__21112__2;
G__21112.cljs$core$IFn$_invoke$arity$3 = G__21112__3;
G__21112.cljs$core$IFn$_invoke$arity$variadic = G__21112__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21112;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__21118 = null;
var G__21118__0 = (function (){
var G__21080 = arg1;
var G__21081 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21080,G__21081) : f.call(null,G__21080,G__21081));
});
var G__21118__1 = (function (x){
var G__21082 = arg1;
var G__21083 = arg2;
var G__21084 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21082,G__21083,G__21084) : f.call(null,G__21082,G__21083,G__21084));
});
var G__21118__2 = (function (x,y){
var G__21085 = arg1;
var G__21086 = arg2;
var G__21087 = x;
var G__21088 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21085,G__21086,G__21087,G__21088) : f.call(null,G__21085,G__21086,G__21087,G__21088));
});
var G__21118__3 = (function (x,y,z){
var G__21089 = arg1;
var G__21090 = arg2;
var G__21091 = x;
var G__21092 = y;
var G__21093 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__21089,G__21090,G__21091,G__21092,G__21093) : f.call(null,G__21089,G__21090,G__21091,G__21092,G__21093));
});
var G__21118__4 = (function() { 
var G__21119__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__21119 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21120__i = 0, G__21120__a = new Array(arguments.length -  3);
while (G__21120__i < G__21120__a.length) {G__21120__a[G__21120__i] = arguments[G__21120__i + 3]; ++G__21120__i;}
  args = new cljs.core.IndexedSeq(G__21120__a,0);
} 
return G__21119__delegate.call(this,x,y,z,args);};
G__21119.cljs$lang$maxFixedArity = 3;
G__21119.cljs$lang$applyTo = (function (arglist__21121){
var x = cljs.core.first(arglist__21121);
arglist__21121 = cljs.core.next(arglist__21121);
var y = cljs.core.first(arglist__21121);
arglist__21121 = cljs.core.next(arglist__21121);
var z = cljs.core.first(arglist__21121);
var args = cljs.core.rest(arglist__21121);
return G__21119__delegate(x,y,z,args);
});
G__21119.cljs$core$IFn$_invoke$arity$variadic = G__21119__delegate;
return G__21119;
})()
;
G__21118 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21118__0.call(this);
case 1:
return G__21118__1.call(this,x);
case 2:
return G__21118__2.call(this,x,y);
case 3:
return G__21118__3.call(this,x,y,z);
default:
var G__21122 = null;
if (arguments.length > 3) {
var G__21123__i = 0, G__21123__a = new Array(arguments.length -  3);
while (G__21123__i < G__21123__a.length) {G__21123__a[G__21123__i] = arguments[G__21123__i + 3]; ++G__21123__i;}
G__21122 = new cljs.core.IndexedSeq(G__21123__a,0);
}
return G__21118__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21122);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21118.cljs$lang$maxFixedArity = 3;
G__21118.cljs$lang$applyTo = G__21118__4.cljs$lang$applyTo;
G__21118.cljs$core$IFn$_invoke$arity$0 = G__21118__0;
G__21118.cljs$core$IFn$_invoke$arity$1 = G__21118__1;
G__21118.cljs$core$IFn$_invoke$arity$2 = G__21118__2;
G__21118.cljs$core$IFn$_invoke$arity$3 = G__21118__3;
G__21118.cljs$core$IFn$_invoke$arity$variadic = G__21118__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21118;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__21124 = null;
var G__21124__0 = (function (){
var G__21094 = arg1;
var G__21095 = arg2;
var G__21096 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21094,G__21095,G__21096) : f.call(null,G__21094,G__21095,G__21096));
});
var G__21124__1 = (function (x){
var G__21097 = arg1;
var G__21098 = arg2;
var G__21099 = arg3;
var G__21100 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21097,G__21098,G__21099,G__21100) : f.call(null,G__21097,G__21098,G__21099,G__21100));
});
var G__21124__2 = (function (x,y){
var G__21101 = arg1;
var G__21102 = arg2;
var G__21103 = arg3;
var G__21104 = x;
var G__21105 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__21101,G__21102,G__21103,G__21104,G__21105) : f.call(null,G__21101,G__21102,G__21103,G__21104,G__21105));
});
var G__21124__3 = (function (x,y,z){
var G__21106 = arg1;
var G__21107 = arg2;
var G__21108 = arg3;
var G__21109 = x;
var G__21110 = y;
var G__21111 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__21106,G__21107,G__21108,G__21109,G__21110,G__21111) : f.call(null,G__21106,G__21107,G__21108,G__21109,G__21110,G__21111));
});
var G__21124__4 = (function() { 
var G__21125__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__21125 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21126__i = 0, G__21126__a = new Array(arguments.length -  3);
while (G__21126__i < G__21126__a.length) {G__21126__a[G__21126__i] = arguments[G__21126__i + 3]; ++G__21126__i;}
  args = new cljs.core.IndexedSeq(G__21126__a,0);
} 
return G__21125__delegate.call(this,x,y,z,args);};
G__21125.cljs$lang$maxFixedArity = 3;
G__21125.cljs$lang$applyTo = (function (arglist__21127){
var x = cljs.core.first(arglist__21127);
arglist__21127 = cljs.core.next(arglist__21127);
var y = cljs.core.first(arglist__21127);
arglist__21127 = cljs.core.next(arglist__21127);
var z = cljs.core.first(arglist__21127);
var args = cljs.core.rest(arglist__21127);
return G__21125__delegate(x,y,z,args);
});
G__21125.cljs$core$IFn$_invoke$arity$variadic = G__21125__delegate;
return G__21125;
})()
;
G__21124 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__21124__0.call(this);
case 1:
return G__21124__1.call(this,x);
case 2:
return G__21124__2.call(this,x,y);
case 3:
return G__21124__3.call(this,x,y,z);
default:
var G__21128 = null;
if (arguments.length > 3) {
var G__21129__i = 0, G__21129__a = new Array(arguments.length -  3);
while (G__21129__i < G__21129__a.length) {G__21129__a[G__21129__i] = arguments[G__21129__i + 3]; ++G__21129__i;}
G__21128 = new cljs.core.IndexedSeq(G__21129__a,0);
}
return G__21124__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21128);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21124.cljs$lang$maxFixedArity = 3;
G__21124.cljs$lang$applyTo = G__21124__4.cljs$lang$applyTo;
G__21124.cljs$core$IFn$_invoke$arity$0 = G__21124__0;
G__21124.cljs$core$IFn$_invoke$arity$1 = G__21124__1;
G__21124.cljs$core$IFn$_invoke$arity$2 = G__21124__2;
G__21124.cljs$core$IFn$_invoke$arity$3 = G__21124__3;
G__21124.cljs$core$IFn$_invoke$arity$variadic = G__21124__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21124;
})()
});
var partial__5 = (function() { 
var G__21130__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__21131__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__21131 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__21132__i = 0, G__21132__a = new Array(arguments.length -  0);
while (G__21132__i < G__21132__a.length) {G__21132__a[G__21132__i] = arguments[G__21132__i + 0]; ++G__21132__i;}
  args = new cljs.core.IndexedSeq(G__21132__a,0);
} 
return G__21131__delegate.call(this,args);};
G__21131.cljs$lang$maxFixedArity = 0;
G__21131.cljs$lang$applyTo = (function (arglist__21133){
var args = cljs.core.seq(arglist__21133);
return G__21131__delegate(args);
});
G__21131.cljs$core$IFn$_invoke$arity$variadic = G__21131__delegate;
return G__21131;
})()
;
};
var G__21130 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__21134__i = 0, G__21134__a = new Array(arguments.length -  4);
while (G__21134__i < G__21134__a.length) {G__21134__a[G__21134__i] = arguments[G__21134__i + 4]; ++G__21134__i;}
  more = new cljs.core.IndexedSeq(G__21134__a,0);
} 
return G__21130__delegate.call(this,f,arg1,arg2,arg3,more);};
G__21130.cljs$lang$maxFixedArity = 4;
G__21130.cljs$lang$applyTo = (function (arglist__21135){
var f = cljs.core.first(arglist__21135);
arglist__21135 = cljs.core.next(arglist__21135);
var arg1 = cljs.core.first(arglist__21135);
arglist__21135 = cljs.core.next(arglist__21135);
var arg2 = cljs.core.first(arglist__21135);
arglist__21135 = cljs.core.next(arglist__21135);
var arg3 = cljs.core.first(arglist__21135);
var more = cljs.core.rest(arglist__21135);
return G__21130__delegate(f,arg1,arg2,arg3,more);
});
G__21130.cljs$core$IFn$_invoke$arity$variadic = G__21130__delegate;
return G__21130;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__21136 = null;
if (arguments.length > 4) {
var G__21137__i = 0, G__21137__a = new Array(arguments.length -  4);
while (G__21137__i < G__21137__a.length) {G__21137__a[G__21137__i] = arguments[G__21137__i + 4]; ++G__21137__i;}
G__21136 = new cljs.core.IndexedSeq(G__21137__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__21136);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__21170 = null;
var G__21170__1 = (function (a){
var G__21154 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21154) : f.call(null,G__21154));
});
var G__21170__2 = (function (a,b){
var G__21155 = (((a == null))?x:a);
var G__21156 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21155,G__21156) : f.call(null,G__21155,G__21156));
});
var G__21170__3 = (function (a,b,c){
var G__21157 = (((a == null))?x:a);
var G__21158 = b;
var G__21159 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21157,G__21158,G__21159) : f.call(null,G__21157,G__21158,G__21159));
});
var G__21170__4 = (function() { 
var G__21171__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__21171 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__21172__i = 0, G__21172__a = new Array(arguments.length -  3);
while (G__21172__i < G__21172__a.length) {G__21172__a[G__21172__i] = arguments[G__21172__i + 3]; ++G__21172__i;}
  ds = new cljs.core.IndexedSeq(G__21172__a,0);
} 
return G__21171__delegate.call(this,a,b,c,ds);};
G__21171.cljs$lang$maxFixedArity = 3;
G__21171.cljs$lang$applyTo = (function (arglist__21173){
var a = cljs.core.first(arglist__21173);
arglist__21173 = cljs.core.next(arglist__21173);
var b = cljs.core.first(arglist__21173);
arglist__21173 = cljs.core.next(arglist__21173);
var c = cljs.core.first(arglist__21173);
var ds = cljs.core.rest(arglist__21173);
return G__21171__delegate(a,b,c,ds);
});
G__21171.cljs$core$IFn$_invoke$arity$variadic = G__21171__delegate;
return G__21171;
})()
;
G__21170 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__21170__1.call(this,a);
case 2:
return G__21170__2.call(this,a,b);
case 3:
return G__21170__3.call(this,a,b,c);
default:
var G__21174 = null;
if (arguments.length > 3) {
var G__21175__i = 0, G__21175__a = new Array(arguments.length -  3);
while (G__21175__i < G__21175__a.length) {G__21175__a[G__21175__i] = arguments[G__21175__i + 3]; ++G__21175__i;}
G__21174 = new cljs.core.IndexedSeq(G__21175__a,0);
}
return G__21170__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__21174);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21170.cljs$lang$maxFixedArity = 3;
G__21170.cljs$lang$applyTo = G__21170__4.cljs$lang$applyTo;
G__21170.cljs$core$IFn$_invoke$arity$1 = G__21170__1;
G__21170.cljs$core$IFn$_invoke$arity$2 = G__21170__2;
G__21170.cljs$core$IFn$_invoke$arity$3 = G__21170__3;
G__21170.cljs$core$IFn$_invoke$arity$variadic = G__21170__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21170;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__21176 = null;
var G__21176__2 = (function (a,b){
var G__21160 = (((a == null))?x:a);
var G__21161 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21160,G__21161) : f.call(null,G__21160,G__21161));
});
var G__21176__3 = (function (a,b,c){
var G__21162 = (((a == null))?x:a);
var G__21163 = (((b == null))?y:b);
var G__21164 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21162,G__21163,G__21164) : f.call(null,G__21162,G__21163,G__21164));
});
var G__21176__4 = (function() { 
var G__21177__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__21177 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__21178__i = 0, G__21178__a = new Array(arguments.length -  3);
while (G__21178__i < G__21178__a.length) {G__21178__a[G__21178__i] = arguments[G__21178__i + 3]; ++G__21178__i;}
  ds = new cljs.core.IndexedSeq(G__21178__a,0);
} 
return G__21177__delegate.call(this,a,b,c,ds);};
G__21177.cljs$lang$maxFixedArity = 3;
G__21177.cljs$lang$applyTo = (function (arglist__21179){
var a = cljs.core.first(arglist__21179);
arglist__21179 = cljs.core.next(arglist__21179);
var b = cljs.core.first(arglist__21179);
arglist__21179 = cljs.core.next(arglist__21179);
var c = cljs.core.first(arglist__21179);
var ds = cljs.core.rest(arglist__21179);
return G__21177__delegate(a,b,c,ds);
});
G__21177.cljs$core$IFn$_invoke$arity$variadic = G__21177__delegate;
return G__21177;
})()
;
G__21176 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__21176__2.call(this,a,b);
case 3:
return G__21176__3.call(this,a,b,c);
default:
var G__21180 = null;
if (arguments.length > 3) {
var G__21181__i = 0, G__21181__a = new Array(arguments.length -  3);
while (G__21181__i < G__21181__a.length) {G__21181__a[G__21181__i] = arguments[G__21181__i + 3]; ++G__21181__i;}
G__21180 = new cljs.core.IndexedSeq(G__21181__a,0);
}
return G__21176__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__21180);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21176.cljs$lang$maxFixedArity = 3;
G__21176.cljs$lang$applyTo = G__21176__4.cljs$lang$applyTo;
G__21176.cljs$core$IFn$_invoke$arity$2 = G__21176__2;
G__21176.cljs$core$IFn$_invoke$arity$3 = G__21176__3;
G__21176.cljs$core$IFn$_invoke$arity$variadic = G__21176__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21176;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__21182 = null;
var G__21182__2 = (function (a,b){
var G__21165 = (((a == null))?x:a);
var G__21166 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21165,G__21166) : f.call(null,G__21165,G__21166));
});
var G__21182__3 = (function (a,b,c){
var G__21167 = (((a == null))?x:a);
var G__21168 = (((b == null))?y:b);
var G__21169 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21167,G__21168,G__21169) : f.call(null,G__21167,G__21168,G__21169));
});
var G__21182__4 = (function() { 
var G__21183__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__21183 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__21184__i = 0, G__21184__a = new Array(arguments.length -  3);
while (G__21184__i < G__21184__a.length) {G__21184__a[G__21184__i] = arguments[G__21184__i + 3]; ++G__21184__i;}
  ds = new cljs.core.IndexedSeq(G__21184__a,0);
} 
return G__21183__delegate.call(this,a,b,c,ds);};
G__21183.cljs$lang$maxFixedArity = 3;
G__21183.cljs$lang$applyTo = (function (arglist__21185){
var a = cljs.core.first(arglist__21185);
arglist__21185 = cljs.core.next(arglist__21185);
var b = cljs.core.first(arglist__21185);
arglist__21185 = cljs.core.next(arglist__21185);
var c = cljs.core.first(arglist__21185);
var ds = cljs.core.rest(arglist__21185);
return G__21183__delegate(a,b,c,ds);
});
G__21183.cljs$core$IFn$_invoke$arity$variadic = G__21183__delegate;
return G__21183;
})()
;
G__21182 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__21182__2.call(this,a,b);
case 3:
return G__21182__3.call(this,a,b,c);
default:
var G__21186 = null;
if (arguments.length > 3) {
var G__21187__i = 0, G__21187__a = new Array(arguments.length -  3);
while (G__21187__i < G__21187__a.length) {G__21187__a[G__21187__i] = arguments[G__21187__i + 3]; ++G__21187__i;}
G__21186 = new cljs.core.IndexedSeq(G__21187__a,0);
}
return G__21182__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__21186);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21182.cljs$lang$maxFixedArity = 3;
G__21182.cljs$lang$applyTo = G__21182__4.cljs$lang$applyTo;
G__21182.cljs$core$IFn$_invoke$arity$2 = G__21182__2;
G__21182.cljs$core$IFn$_invoke$arity$3 = G__21182__3;
G__21182.cljs$core$IFn$_invoke$arity$variadic = G__21182__4.cljs$core$IFn$_invoke$arity$variadic;
return G__21182;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function map_indexed(f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13480__auto___21236 = size;
var i_21237 = (0);
while(true){
if((i_21237 < n__13480__auto___21236)){
cljs.core.chunk_append(b,(function (){var G__21232 = (idx + i_21237);
var G__21233 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21237);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21232,G__21233) : f.call(null,G__21232,G__21233));
})());

var G__21238 = (i_21237 + (1));
i_21237 = G__21238;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__21234 = idx;
var G__21235 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21234,G__21235) : f.call(null,G__21234,G__21235));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__21257 = null;
var G__21257__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21257__1 = (function (result){
var G__21251 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21251) : rf.call(null,G__21251));
});
var G__21257__2 = (function (result,input){
var v = (function (){var G__21252 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21252) : f.call(null,G__21252));
})();
if((v == null)){
return result;
} else {
var G__21253 = result;
var G__21254 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21253,G__21254) : rf.call(null,G__21253,G__21254));
}
});
G__21257 = function(result,input){
switch(arguments.length){
case 0:
return G__21257__0.call(this);
case 1:
return G__21257__1.call(this,result);
case 2:
return G__21257__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21257.cljs$core$IFn$_invoke$arity$0 = G__21257__0;
G__21257.cljs$core$IFn$_invoke$arity$1 = G__21257__1;
G__21257.cljs$core$IFn$_invoke$arity$2 = G__21257__2;
return G__21257;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13480__auto___21258 = size;
var i_21259 = (0);
while(true){
if((i_21259 < n__13480__auto___21258)){
var x_21260 = (function (){var G__21255 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21259);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21255) : f.call(null,G__21255));
})();
if((x_21260 == null)){
} else {
cljs.core.chunk_append(b,x_21260);
}

var G__21261 = (i_21259 + (1));
i_21259 = G__21261;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__21256 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21256) : f.call(null,G__21256));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__21262 = this$__$1;
return goog.getUid(G__21262);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__21263 = cljs.core.seq(self__.watches);
var chunk__21264 = null;
var count__21265 = (0);
var i__21266 = (0);
while(true){
if((i__21266 < count__21265)){
var vec__21267 = chunk__21264.cljs$core$IIndexed$_nth$arity$2(null,i__21266);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21267,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21267,(1),null);
var G__21268_21277 = key;
var G__21269_21278 = this$__$1;
var G__21270_21279 = oldval;
var G__21271_21280 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21268_21277,G__21269_21278,G__21270_21279,G__21271_21280) : f.call(null,G__21268_21277,G__21269_21278,G__21270_21279,G__21271_21280));

var G__21281 = seq__21263;
var G__21282 = chunk__21264;
var G__21283 = count__21265;
var G__21284 = (i__21266 + (1));
seq__21263 = G__21281;
chunk__21264 = G__21282;
count__21265 = G__21283;
i__21266 = G__21284;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21263);
if(temp__4126__auto__){
var seq__21263__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21263__$1)){
var c__13380__auto__ = cljs.core.chunk_first(seq__21263__$1);
var G__21285 = cljs.core.chunk_rest(seq__21263__$1);
var G__21286 = c__13380__auto__;
var G__21287 = cljs.core.count(c__13380__auto__);
var G__21288 = (0);
seq__21263 = G__21285;
chunk__21264 = G__21286;
count__21265 = G__21287;
i__21266 = G__21288;
continue;
} else {
var vec__21272 = cljs.core.first(seq__21263__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21272,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21272,(1),null);
var G__21273_21289 = key;
var G__21274_21290 = this$__$1;
var G__21275_21291 = oldval;
var G__21276_21292 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21273_21289,G__21274_21290,G__21275_21291,G__21276_21292) : f.call(null,G__21273_21289,G__21274_21290,G__21275_21291,G__21276_21292));

var G__21293 = cljs.core.next(seq__21263__$1);
var G__21294 = null;
var G__21295 = (0);
var G__21296 = (0);
seq__21263 = G__21293;
chunk__21264 = G__21294;
count__21265 = G__21295;
i__21266 = G__21296;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__21300__delegate = function (x,p__21297){
var map__21299 = p__21297;
var map__21299__$1 = ((cljs.core.seq_QMARK_(map__21299))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__21299):map__21299);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21299__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21299__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__21300 = function (x,var_args){
var p__21297 = null;
if (arguments.length > 1) {
var G__21301__i = 0, G__21301__a = new Array(arguments.length -  1);
while (G__21301__i < G__21301__a.length) {G__21301__a[G__21301__i] = arguments[G__21301__i + 1]; ++G__21301__i;}
  p__21297 = new cljs.core.IndexedSeq(G__21301__a,0);
} 
return G__21300__delegate.call(this,x,p__21297);};
G__21300.cljs$lang$maxFixedArity = 1;
G__21300.cljs$lang$applyTo = (function (arglist__21302){
var x = cljs.core.first(arglist__21302);
var p__21297 = cljs.core.rest(arglist__21302);
return G__21300__delegate(x,p__21297);
});
G__21300.cljs$core$IFn$_invoke$arity$variadic = G__21300__delegate;
return G__21300;
})()
;
atom = function(x,var_args){
var p__21297 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__21303 = null;
if (arguments.length > 1) {
var G__21304__i = 0, G__21304__a = new Array(arguments.length -  1);
while (G__21304__i < G__21304__a.length) {G__21304__a[G__21304__i] = arguments[G__21304__i + 1]; ++G__21304__i;}
G__21303 = new cljs.core.IndexedSeq(G__21304__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__21303);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__21307 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__21307) : validate.call(null,G__21307));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__21308 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__21308) : cljs.core.pr_str.call(null,G__21308));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__21315 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21315) : f.call(null,G__21315));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__21316 = a.state;
var G__21317 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21316,G__21317) : f.call(null,G__21316,G__21317));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__21318 = a.state;
var G__21319 = x;
var G__21320 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21318,G__21319,G__21320) : f.call(null,G__21318,G__21319,G__21320));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__21321__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__21321 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__21322__i = 0, G__21322__a = new Array(arguments.length -  4);
while (G__21322__i < G__21322__a.length) {G__21322__a[G__21322__i] = arguments[G__21322__i + 4]; ++G__21322__i;}
  more = new cljs.core.IndexedSeq(G__21322__a,0);
} 
return G__21321__delegate.call(this,a,f,x,y,more);};
G__21321.cljs$lang$maxFixedArity = 4;
G__21321.cljs$lang$applyTo = (function (arglist__21323){
var a = cljs.core.first(arglist__21323);
arglist__21323 = cljs.core.next(arglist__21323);
var f = cljs.core.first(arglist__21323);
arglist__21323 = cljs.core.next(arglist__21323);
var x = cljs.core.first(arglist__21323);
arglist__21323 = cljs.core.next(arglist__21323);
var y = cljs.core.first(arglist__21323);
var more = cljs.core.rest(arglist__21323);
return G__21321__delegate(a,f,x,y,more);
});
G__21321.cljs$core$IFn$_invoke$arity$variadic = G__21321__delegate;
return G__21321;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__21324 = null;
if (arguments.length > 4) {
var G__21325__i = 0, G__21325__a = new Array(arguments.length -  4);
while (G__21325__i < G__21325__a.length) {G__21325__a[G__21325__i] = arguments[G__21325__i + 4]; ++G__21325__i;}
G__21324 = new cljs.core.IndexedSeq(G__21325__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__21324);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__21392 = null;
var G__21392__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21392__1 = (function (result){
var G__21359 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21359) : rf.call(null,G__21359));
});
var G__21392__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__21360 = i;
var G__21361 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21360,G__21361) : f.call(null,G__21360,G__21361));
})();
if((v == null)){
return result;
} else {
var G__21362 = result;
var G__21363 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21362,G__21363) : rf.call(null,G__21362,G__21363));
}
});
G__21392 = function(result,input){
switch(arguments.length){
case 0:
return G__21392__0.call(this);
case 1:
return G__21392__1.call(this,result);
case 2:
return G__21392__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21392.cljs$core$IFn$_invoke$arity$0 = G__21392__0;
G__21392.cljs$core$IFn$_invoke$arity$1 = G__21392__1;
G__21392.cljs$core$IFn$_invoke$arity$2 = G__21392__2;
return G__21392;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13480__auto___21393 = size;
var i_21394 = (0);
while(true){
if((i_21394 < n__13480__auto___21393)){
var x_21395 = (function (){var G__21388 = (idx + i_21394);
var G__21389 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21394);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21388,G__21389) : f.call(null,G__21388,G__21389));
})();
if((x_21395 == null)){
} else {
cljs.core.chunk_append(b,x_21395);
}

var G__21396 = (i_21394 + (1));
i_21394 = G__21396;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__21390 = idx;
var G__21391 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21390,G__21391) : f.call(null,G__21390,G__21391));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__21610 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21610) : p.call(null,G__21610));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12581__auto__ = (function (){var G__21612 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21612) : p.call(null,G__21612));
})();
if(cljs.core.truth_(and__12581__auto__)){
var G__21613 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21613) : p.call(null,G__21613));
} else {
return and__12581__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12581__auto__ = (function (){var G__21615 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21615) : p.call(null,G__21615));
})();
if(cljs.core.truth_(and__12581__auto__)){
var and__12581__auto____$1 = (function (){var G__21617 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21617) : p.call(null,G__21617));
})();
if(cljs.core.truth_(and__12581__auto____$1)){
var G__21618 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21618) : p.call(null,G__21618));
} else {
return and__12581__auto____$1;
}
} else {
return and__12581__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__21787__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__21787 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21788__i = 0, G__21788__a = new Array(arguments.length -  3);
while (G__21788__i < G__21788__a.length) {G__21788__a[G__21788__i] = arguments[G__21788__i + 3]; ++G__21788__i;}
  args = new cljs.core.IndexedSeq(G__21788__a,0);
} 
return G__21787__delegate.call(this,x,y,z,args);};
G__21787.cljs$lang$maxFixedArity = 3;
G__21787.cljs$lang$applyTo = (function (arglist__21789){
var x = cljs.core.first(arglist__21789);
arglist__21789 = cljs.core.next(arglist__21789);
var y = cljs.core.first(arglist__21789);
arglist__21789 = cljs.core.next(arglist__21789);
var z = cljs.core.first(arglist__21789);
var args = cljs.core.rest(arglist__21789);
return G__21787__delegate(x,y,z,args);
});
G__21787.cljs$core$IFn$_invoke$arity$variadic = G__21787__delegate;
return G__21787;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__21790 = null;
if (arguments.length > 3) {
var G__21791__i = 0, G__21791__a = new Array(arguments.length -  3);
while (G__21791__i < G__21791__a.length) {G__21791__a[G__21791__i] = arguments[G__21791__i + 3]; ++G__21791__i;}
G__21790 = new cljs.core.IndexedSeq(G__21791__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21790);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__12581__auto__ = (function (){var G__21650 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21650) : p1.call(null,G__21650));
})();
if(cljs.core.truth_(and__12581__auto__)){
var G__21651 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21651) : p2.call(null,G__21651));
} else {
return and__12581__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12581__auto__ = (function (){var G__21653 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21653) : p1.call(null,G__21653));
})();
if(cljs.core.truth_(and__12581__auto__)){
var and__12581__auto____$1 = (function (){var G__21655 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21655) : p1.call(null,G__21655));
})();
if(cljs.core.truth_(and__12581__auto____$1)){
var and__12581__auto____$2 = (function (){var G__21657 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21657) : p2.call(null,G__21657));
})();
if(cljs.core.truth_(and__12581__auto____$2)){
var G__21658 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21658) : p2.call(null,G__21658));
} else {
return and__12581__auto____$2;
}
} else {
return and__12581__auto____$1;
}
} else {
return and__12581__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12581__auto__ = (function (){var G__21660 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21660) : p1.call(null,G__21660));
})();
if(cljs.core.truth_(and__12581__auto__)){
var and__12581__auto____$1 = (function (){var G__21662 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21662) : p1.call(null,G__21662));
})();
if(cljs.core.truth_(and__12581__auto____$1)){
var and__12581__auto____$2 = (function (){var G__21664 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21664) : p1.call(null,G__21664));
})();
if(cljs.core.truth_(and__12581__auto____$2)){
var and__12581__auto____$3 = (function (){var G__21666 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21666) : p2.call(null,G__21666));
})();
if(cljs.core.truth_(and__12581__auto____$3)){
var and__12581__auto____$4 = (function (){var G__21668 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21668) : p2.call(null,G__21668));
})();
if(cljs.core.truth_(and__12581__auto____$4)){
var G__21669 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21669) : p2.call(null,G__21669));
} else {
return and__12581__auto____$4;
}
} else {
return and__12581__auto____$3;
}
} else {
return and__12581__auto____$2;
}
} else {
return and__12581__auto____$1;
}
} else {
return and__12581__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__21792__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__21397_SHARP_){
var and__12581__auto__ = (function (){var G__21674 = p1__21397_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21674) : p1.call(null,G__21674));
})();
if(cljs.core.truth_(and__12581__auto__)){
var G__21675 = p1__21397_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21675) : p2.call(null,G__21675));
} else {
return and__12581__auto__;
}
}),args)));
};
var G__21792 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21793__i = 0, G__21793__a = new Array(arguments.length -  3);
while (G__21793__i < G__21793__a.length) {G__21793__a[G__21793__i] = arguments[G__21793__i + 3]; ++G__21793__i;}
  args = new cljs.core.IndexedSeq(G__21793__a,0);
} 
return G__21792__delegate.call(this,x,y,z,args);};
G__21792.cljs$lang$maxFixedArity = 3;
G__21792.cljs$lang$applyTo = (function (arglist__21794){
var x = cljs.core.first(arglist__21794);
arglist__21794 = cljs.core.next(arglist__21794);
var y = cljs.core.first(arglist__21794);
arglist__21794 = cljs.core.next(arglist__21794);
var z = cljs.core.first(arglist__21794);
var args = cljs.core.rest(arglist__21794);
return G__21792__delegate(x,y,z,args);
});
G__21792.cljs$core$IFn$_invoke$arity$variadic = G__21792__delegate;
return G__21792;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__21795 = null;
if (arguments.length > 3) {
var G__21796__i = 0, G__21796__a = new Array(arguments.length -  3);
while (G__21796__i < G__21796__a.length) {G__21796__a[G__21796__i] = arguments[G__21796__i + 3]; ++G__21796__i;}
G__21795 = new cljs.core.IndexedSeq(G__21796__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21795);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__12581__auto__ = (function (){var G__21721 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21721) : p1.call(null,G__21721));
})();
if(cljs.core.truth_(and__12581__auto__)){
var and__12581__auto____$1 = (function (){var G__21723 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21723) : p2.call(null,G__21723));
})();
if(cljs.core.truth_(and__12581__auto____$1)){
var G__21724 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21724) : p3.call(null,G__21724));
} else {
return and__12581__auto____$1;
}
} else {
return and__12581__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12581__auto__ = (function (){var G__21726 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21726) : p1.call(null,G__21726));
})();
if(cljs.core.truth_(and__12581__auto__)){
var and__12581__auto____$1 = (function (){var G__21728 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21728) : p2.call(null,G__21728));
})();
if(cljs.core.truth_(and__12581__auto____$1)){
var and__12581__auto____$2 = (function (){var G__21730 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21730) : p3.call(null,G__21730));
})();
if(cljs.core.truth_(and__12581__auto____$2)){
var and__12581__auto____$3 = (function (){var G__21732 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21732) : p1.call(null,G__21732));
})();
if(cljs.core.truth_(and__12581__auto____$3)){
var and__12581__auto____$4 = (function (){var G__21734 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21734) : p2.call(null,G__21734));
})();
if(cljs.core.truth_(and__12581__auto____$4)){
var G__21735 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21735) : p3.call(null,G__21735));
} else {
return and__12581__auto____$4;
}
} else {
return and__12581__auto____$3;
}
} else {
return and__12581__auto____$2;
}
} else {
return and__12581__auto____$1;
}
} else {
return and__12581__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12581__auto__ = (function (){var G__21737 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21737) : p1.call(null,G__21737));
})();
if(cljs.core.truth_(and__12581__auto__)){
var and__12581__auto____$1 = (function (){var G__21739 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21739) : p2.call(null,G__21739));
})();
if(cljs.core.truth_(and__12581__auto____$1)){
var and__12581__auto____$2 = (function (){var G__21741 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21741) : p3.call(null,G__21741));
})();
if(cljs.core.truth_(and__12581__auto____$2)){
var and__12581__auto____$3 = (function (){var G__21743 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21743) : p1.call(null,G__21743));
})();
if(cljs.core.truth_(and__12581__auto____$3)){
var and__12581__auto____$4 = (function (){var G__21745 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21745) : p2.call(null,G__21745));
})();
if(cljs.core.truth_(and__12581__auto____$4)){
var and__12581__auto____$5 = (function (){var G__21747 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21747) : p3.call(null,G__21747));
})();
if(cljs.core.truth_(and__12581__auto____$5)){
var and__12581__auto____$6 = (function (){var G__21749 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21749) : p1.call(null,G__21749));
})();
if(cljs.core.truth_(and__12581__auto____$6)){
var and__12581__auto____$7 = (function (){var G__21751 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21751) : p2.call(null,G__21751));
})();
if(cljs.core.truth_(and__12581__auto____$7)){
var G__21752 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21752) : p3.call(null,G__21752));
} else {
return and__12581__auto____$7;
}
} else {
return and__12581__auto____$6;
}
} else {
return and__12581__auto____$5;
}
} else {
return and__12581__auto____$4;
}
} else {
return and__12581__auto____$3;
}
} else {
return and__12581__auto____$2;
}
} else {
return and__12581__auto____$1;
}
} else {
return and__12581__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__21797__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__21398_SHARP_){
var and__12581__auto__ = (function (){var G__21759 = p1__21398_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21759) : p1.call(null,G__21759));
})();
if(cljs.core.truth_(and__12581__auto__)){
var and__12581__auto____$1 = (function (){var G__21761 = p1__21398_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21761) : p2.call(null,G__21761));
})();
if(cljs.core.truth_(and__12581__auto____$1)){
var G__21762 = p1__21398_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21762) : p3.call(null,G__21762));
} else {
return and__12581__auto____$1;
}
} else {
return and__12581__auto__;
}
}),args)));
};
var G__21797 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21798__i = 0, G__21798__a = new Array(arguments.length -  3);
while (G__21798__i < G__21798__a.length) {G__21798__a[G__21798__i] = arguments[G__21798__i + 3]; ++G__21798__i;}
  args = new cljs.core.IndexedSeq(G__21798__a,0);
} 
return G__21797__delegate.call(this,x,y,z,args);};
G__21797.cljs$lang$maxFixedArity = 3;
G__21797.cljs$lang$applyTo = (function (arglist__21799){
var x = cljs.core.first(arglist__21799);
arglist__21799 = cljs.core.next(arglist__21799);
var y = cljs.core.first(arglist__21799);
arglist__21799 = cljs.core.next(arglist__21799);
var z = cljs.core.first(arglist__21799);
var args = cljs.core.rest(arglist__21799);
return G__21797__delegate(x,y,z,args);
});
G__21797.cljs$core$IFn$_invoke$arity$variadic = G__21797__delegate;
return G__21797;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__21800 = null;
if (arguments.length > 3) {
var G__21801__i = 0, G__21801__a = new Array(arguments.length -  3);
while (G__21801__i < G__21801__a.length) {G__21801__a[G__21801__i] = arguments[G__21801__i + 3]; ++G__21801__i;}
G__21800 = new cljs.core.IndexedSeq(G__21801__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21800);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__21802__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21399_SHARP_){
var G__21778 = x;
return (p1__21399_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21399_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21778) : p1__21399_SHARP_.call(null,G__21778));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21400_SHARP_){
var and__12581__auto__ = (function (){var G__21780 = x;
return (p1__21400_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21400_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21780) : p1__21400_SHARP_.call(null,G__21780));
})();
if(cljs.core.truth_(and__12581__auto__)){
var G__21781 = y;
return (p1__21400_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21400_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21781) : p1__21400_SHARP_.call(null,G__21781));
} else {
return and__12581__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21401_SHARP_){
var and__12581__auto__ = (function (){var G__21783 = x;
return (p1__21401_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21401_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21783) : p1__21401_SHARP_.call(null,G__21783));
})();
if(cljs.core.truth_(and__12581__auto__)){
var and__12581__auto____$1 = (function (){var G__21785 = y;
return (p1__21401_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21401_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21785) : p1__21401_SHARP_.call(null,G__21785));
})();
if(cljs.core.truth_(and__12581__auto____$1)){
var G__21786 = z;
return (p1__21401_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21401_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21786) : p1__21401_SHARP_.call(null,G__21786));
} else {
return and__12581__auto____$1;
}
} else {
return and__12581__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__21803__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21402_SHARP_){
return cljs.core.every_QMARK_(p1__21402_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__21803 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21804__i = 0, G__21804__a = new Array(arguments.length -  3);
while (G__21804__i < G__21804__a.length) {G__21804__a[G__21804__i] = arguments[G__21804__i + 3]; ++G__21804__i;}
  args = new cljs.core.IndexedSeq(G__21804__a,0);
} 
return G__21803__delegate.call(this,x,y,z,args);};
G__21803.cljs$lang$maxFixedArity = 3;
G__21803.cljs$lang$applyTo = (function (arglist__21805){
var x = cljs.core.first(arglist__21805);
arglist__21805 = cljs.core.next(arglist__21805);
var y = cljs.core.first(arglist__21805);
arglist__21805 = cljs.core.next(arglist__21805);
var z = cljs.core.first(arglist__21805);
var args = cljs.core.rest(arglist__21805);
return G__21803__delegate(x,y,z,args);
});
G__21803.cljs$core$IFn$_invoke$arity$variadic = G__21803__delegate;
return G__21803;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__21806 = null;
if (arguments.length > 3) {
var G__21807__i = 0, G__21807__a = new Array(arguments.length -  3);
while (G__21807__i < G__21807__a.length) {G__21807__a[G__21807__i] = arguments[G__21807__i + 3]; ++G__21807__i;}
G__21806 = new cljs.core.IndexedSeq(G__21807__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21806);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__21802 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__21808__i = 0, G__21808__a = new Array(arguments.length -  3);
while (G__21808__i < G__21808__a.length) {G__21808__a[G__21808__i] = arguments[G__21808__i + 3]; ++G__21808__i;}
  ps = new cljs.core.IndexedSeq(G__21808__a,0);
} 
return G__21802__delegate.call(this,p1,p2,p3,ps);};
G__21802.cljs$lang$maxFixedArity = 3;
G__21802.cljs$lang$applyTo = (function (arglist__21809){
var p1 = cljs.core.first(arglist__21809);
arglist__21809 = cljs.core.next(arglist__21809);
var p2 = cljs.core.first(arglist__21809);
arglist__21809 = cljs.core.next(arglist__21809);
var p3 = cljs.core.first(arglist__21809);
var ps = cljs.core.rest(arglist__21809);
return G__21802__delegate(p1,p2,p3,ps);
});
G__21802.cljs$core$IFn$_invoke$arity$variadic = G__21802__delegate;
return G__21802;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__21810 = null;
if (arguments.length > 3) {
var G__21811__i = 0, G__21811__a = new Array(arguments.length -  3);
while (G__21811__i < G__21811__a.length) {G__21811__a[G__21811__i] = arguments[G__21811__i + 3]; ++G__21811__i;}
G__21810 = new cljs.core.IndexedSeq(G__21811__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__21810);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__22017 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22017) : p.call(null,G__22017));
});
var sp1__2 = (function (x,y){
var or__12593__auto__ = (function (){var G__22019 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22019) : p.call(null,G__22019));
})();
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
var G__22020 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22020) : p.call(null,G__22020));
}
});
var sp1__3 = (function (x,y,z){
var or__12593__auto__ = (function (){var G__22022 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22022) : p.call(null,G__22022));
})();
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (function (){var G__22024 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22024) : p.call(null,G__22024));
})();
if(cljs.core.truth_(or__12593__auto____$1)){
return or__12593__auto____$1;
} else {
var G__22025 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22025) : p.call(null,G__22025));
}
}
});
var sp1__4 = (function() { 
var G__22186__delegate = function (x,y,z,args){
var or__12593__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__22186 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22187__i = 0, G__22187__a = new Array(arguments.length -  3);
while (G__22187__i < G__22187__a.length) {G__22187__a[G__22187__i] = arguments[G__22187__i + 3]; ++G__22187__i;}
  args = new cljs.core.IndexedSeq(G__22187__a,0);
} 
return G__22186__delegate.call(this,x,y,z,args);};
G__22186.cljs$lang$maxFixedArity = 3;
G__22186.cljs$lang$applyTo = (function (arglist__22188){
var x = cljs.core.first(arglist__22188);
arglist__22188 = cljs.core.next(arglist__22188);
var y = cljs.core.first(arglist__22188);
arglist__22188 = cljs.core.next(arglist__22188);
var z = cljs.core.first(arglist__22188);
var args = cljs.core.rest(arglist__22188);
return G__22186__delegate(x,y,z,args);
});
G__22186.cljs$core$IFn$_invoke$arity$variadic = G__22186__delegate;
return G__22186;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__22189 = null;
if (arguments.length > 3) {
var G__22190__i = 0, G__22190__a = new Array(arguments.length -  3);
while (G__22190__i < G__22190__a.length) {G__22190__a[G__22190__i] = arguments[G__22190__i + 3]; ++G__22190__i;}
G__22189 = new cljs.core.IndexedSeq(G__22190__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22189);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__12593__auto__ = (function (){var G__22057 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22057) : p1.call(null,G__22057));
})();
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
var G__22058 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22058) : p2.call(null,G__22058));
}
});
var sp2__2 = (function (x,y){
var or__12593__auto__ = (function (){var G__22060 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22060) : p1.call(null,G__22060));
})();
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (function (){var G__22062 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22062) : p1.call(null,G__22062));
})();
if(cljs.core.truth_(or__12593__auto____$1)){
return or__12593__auto____$1;
} else {
var or__12593__auto____$2 = (function (){var G__22064 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22064) : p2.call(null,G__22064));
})();
if(cljs.core.truth_(or__12593__auto____$2)){
return or__12593__auto____$2;
} else {
var G__22065 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22065) : p2.call(null,G__22065));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__12593__auto__ = (function (){var G__22067 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22067) : p1.call(null,G__22067));
})();
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (function (){var G__22069 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22069) : p1.call(null,G__22069));
})();
if(cljs.core.truth_(or__12593__auto____$1)){
return or__12593__auto____$1;
} else {
var or__12593__auto____$2 = (function (){var G__22071 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22071) : p1.call(null,G__22071));
})();
if(cljs.core.truth_(or__12593__auto____$2)){
return or__12593__auto____$2;
} else {
var or__12593__auto____$3 = (function (){var G__22073 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22073) : p2.call(null,G__22073));
})();
if(cljs.core.truth_(or__12593__auto____$3)){
return or__12593__auto____$3;
} else {
var or__12593__auto____$4 = (function (){var G__22075 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22075) : p2.call(null,G__22075));
})();
if(cljs.core.truth_(or__12593__auto____$4)){
return or__12593__auto____$4;
} else {
var G__22076 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22076) : p2.call(null,G__22076));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__22191__delegate = function (x,y,z,args){
var or__12593__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
return cljs.core.some(((function (or__12593__auto__){
return (function (p1__21812_SHARP_){
var or__12593__auto____$1 = (function (){var G__22078 = p1__21812_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22078) : p1.call(null,G__22078));
})();
if(cljs.core.truth_(or__12593__auto____$1)){
return or__12593__auto____$1;
} else {
var G__22079 = p1__21812_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22079) : p2.call(null,G__22079));
}
});})(or__12593__auto__))
,args);
}
};
var G__22191 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22192__i = 0, G__22192__a = new Array(arguments.length -  3);
while (G__22192__i < G__22192__a.length) {G__22192__a[G__22192__i] = arguments[G__22192__i + 3]; ++G__22192__i;}
  args = new cljs.core.IndexedSeq(G__22192__a,0);
} 
return G__22191__delegate.call(this,x,y,z,args);};
G__22191.cljs$lang$maxFixedArity = 3;
G__22191.cljs$lang$applyTo = (function (arglist__22193){
var x = cljs.core.first(arglist__22193);
arglist__22193 = cljs.core.next(arglist__22193);
var y = cljs.core.first(arglist__22193);
arglist__22193 = cljs.core.next(arglist__22193);
var z = cljs.core.first(arglist__22193);
var args = cljs.core.rest(arglist__22193);
return G__22191__delegate(x,y,z,args);
});
G__22191.cljs$core$IFn$_invoke$arity$variadic = G__22191__delegate;
return G__22191;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__22194 = null;
if (arguments.length > 3) {
var G__22195__i = 0, G__22195__a = new Array(arguments.length -  3);
while (G__22195__i < G__22195__a.length) {G__22195__a[G__22195__i] = arguments[G__22195__i + 3]; ++G__22195__i;}
G__22194 = new cljs.core.IndexedSeq(G__22195__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22194);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__12593__auto__ = (function (){var G__22125 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22125) : p1.call(null,G__22125));
})();
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (function (){var G__22127 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22127) : p2.call(null,G__22127));
})();
if(cljs.core.truth_(or__12593__auto____$1)){
return or__12593__auto____$1;
} else {
var G__22128 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22128) : p3.call(null,G__22128));
}
}
});
var sp3__2 = (function (x,y){
var or__12593__auto__ = (function (){var G__22130 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22130) : p1.call(null,G__22130));
})();
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (function (){var G__22132 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22132) : p2.call(null,G__22132));
})();
if(cljs.core.truth_(or__12593__auto____$1)){
return or__12593__auto____$1;
} else {
var or__12593__auto____$2 = (function (){var G__22134 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22134) : p3.call(null,G__22134));
})();
if(cljs.core.truth_(or__12593__auto____$2)){
return or__12593__auto____$2;
} else {
var or__12593__auto____$3 = (function (){var G__22136 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22136) : p1.call(null,G__22136));
})();
if(cljs.core.truth_(or__12593__auto____$3)){
return or__12593__auto____$3;
} else {
var or__12593__auto____$4 = (function (){var G__22138 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22138) : p2.call(null,G__22138));
})();
if(cljs.core.truth_(or__12593__auto____$4)){
return or__12593__auto____$4;
} else {
var G__22139 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22139) : p3.call(null,G__22139));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__12593__auto__ = (function (){var G__22141 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22141) : p1.call(null,G__22141));
})();
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (function (){var G__22143 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22143) : p2.call(null,G__22143));
})();
if(cljs.core.truth_(or__12593__auto____$1)){
return or__12593__auto____$1;
} else {
var or__12593__auto____$2 = (function (){var G__22145 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22145) : p3.call(null,G__22145));
})();
if(cljs.core.truth_(or__12593__auto____$2)){
return or__12593__auto____$2;
} else {
var or__12593__auto____$3 = (function (){var G__22147 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22147) : p1.call(null,G__22147));
})();
if(cljs.core.truth_(or__12593__auto____$3)){
return or__12593__auto____$3;
} else {
var or__12593__auto____$4 = (function (){var G__22149 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22149) : p2.call(null,G__22149));
})();
if(cljs.core.truth_(or__12593__auto____$4)){
return or__12593__auto____$4;
} else {
var or__12593__auto____$5 = (function (){var G__22151 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22151) : p3.call(null,G__22151));
})();
if(cljs.core.truth_(or__12593__auto____$5)){
return or__12593__auto____$5;
} else {
var or__12593__auto____$6 = (function (){var G__22153 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22153) : p1.call(null,G__22153));
})();
if(cljs.core.truth_(or__12593__auto____$6)){
return or__12593__auto____$6;
} else {
var or__12593__auto____$7 = (function (){var G__22155 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22155) : p2.call(null,G__22155));
})();
if(cljs.core.truth_(or__12593__auto____$7)){
return or__12593__auto____$7;
} else {
var G__22156 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22156) : p3.call(null,G__22156));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__22196__delegate = function (x,y,z,args){
var or__12593__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
return cljs.core.some(((function (or__12593__auto__){
return (function (p1__21813_SHARP_){
var or__12593__auto____$1 = (function (){var G__22158 = p1__21813_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22158) : p1.call(null,G__22158));
})();
if(cljs.core.truth_(or__12593__auto____$1)){
return or__12593__auto____$1;
} else {
var or__12593__auto____$2 = (function (){var G__22160 = p1__21813_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22160) : p2.call(null,G__22160));
})();
if(cljs.core.truth_(or__12593__auto____$2)){
return or__12593__auto____$2;
} else {
var G__22161 = p1__21813_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22161) : p3.call(null,G__22161));
}
}
});})(or__12593__auto__))
,args);
}
};
var G__22196 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22197__i = 0, G__22197__a = new Array(arguments.length -  3);
while (G__22197__i < G__22197__a.length) {G__22197__a[G__22197__i] = arguments[G__22197__i + 3]; ++G__22197__i;}
  args = new cljs.core.IndexedSeq(G__22197__a,0);
} 
return G__22196__delegate.call(this,x,y,z,args);};
G__22196.cljs$lang$maxFixedArity = 3;
G__22196.cljs$lang$applyTo = (function (arglist__22198){
var x = cljs.core.first(arglist__22198);
arglist__22198 = cljs.core.next(arglist__22198);
var y = cljs.core.first(arglist__22198);
arglist__22198 = cljs.core.next(arglist__22198);
var z = cljs.core.first(arglist__22198);
var args = cljs.core.rest(arglist__22198);
return G__22196__delegate(x,y,z,args);
});
G__22196.cljs$core$IFn$_invoke$arity$variadic = G__22196__delegate;
return G__22196;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__22199 = null;
if (arguments.length > 3) {
var G__22200__i = 0, G__22200__a = new Array(arguments.length -  3);
while (G__22200__i < G__22200__a.length) {G__22200__a[G__22200__i] = arguments[G__22200__i + 3]; ++G__22200__i;}
G__22199 = new cljs.core.IndexedSeq(G__22200__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22199);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__22201__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__21814_SHARP_){
var G__22177 = x;
return (p1__21814_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21814_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22177) : p1__21814_SHARP_.call(null,G__22177));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__21815_SHARP_){
var or__12593__auto__ = (function (){var G__22179 = x;
return (p1__21815_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21815_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22179) : p1__21815_SHARP_.call(null,G__22179));
})();
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
var G__22180 = y;
return (p1__21815_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21815_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22180) : p1__21815_SHARP_.call(null,G__22180));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__21816_SHARP_){
var or__12593__auto__ = (function (){var G__22182 = x;
return (p1__21816_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21816_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22182) : p1__21816_SHARP_.call(null,G__22182));
})();
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (function (){var G__22184 = y;
return (p1__21816_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21816_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22184) : p1__21816_SHARP_.call(null,G__22184));
})();
if(cljs.core.truth_(or__12593__auto____$1)){
return or__12593__auto____$1;
} else {
var G__22185 = z;
return (p1__21816_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21816_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22185) : p1__21816_SHARP_.call(null,G__22185));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__22202__delegate = function (x,y,z,args){
var or__12593__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
return cljs.core.some(((function (or__12593__auto__,ps__$1){
return (function (p1__21817_SHARP_){
return cljs.core.some(p1__21817_SHARP_,args);
});})(or__12593__auto__,ps__$1))
,ps__$1);
}
};
var G__22202 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22203__i = 0, G__22203__a = new Array(arguments.length -  3);
while (G__22203__i < G__22203__a.length) {G__22203__a[G__22203__i] = arguments[G__22203__i + 3]; ++G__22203__i;}
  args = new cljs.core.IndexedSeq(G__22203__a,0);
} 
return G__22202__delegate.call(this,x,y,z,args);};
G__22202.cljs$lang$maxFixedArity = 3;
G__22202.cljs$lang$applyTo = (function (arglist__22204){
var x = cljs.core.first(arglist__22204);
arglist__22204 = cljs.core.next(arglist__22204);
var y = cljs.core.first(arglist__22204);
arglist__22204 = cljs.core.next(arglist__22204);
var z = cljs.core.first(arglist__22204);
var args = cljs.core.rest(arglist__22204);
return G__22202__delegate(x,y,z,args);
});
G__22202.cljs$core$IFn$_invoke$arity$variadic = G__22202__delegate;
return G__22202;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__22205 = null;
if (arguments.length > 3) {
var G__22206__i = 0, G__22206__a = new Array(arguments.length -  3);
while (G__22206__i < G__22206__a.length) {G__22206__a[G__22206__i] = arguments[G__22206__i + 3]; ++G__22206__i;}
G__22205 = new cljs.core.IndexedSeq(G__22206__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22205);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__22201 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__22207__i = 0, G__22207__a = new Array(arguments.length -  3);
while (G__22207__i < G__22207__a.length) {G__22207__a[G__22207__i] = arguments[G__22207__i + 3]; ++G__22207__i;}
  ps = new cljs.core.IndexedSeq(G__22207__a,0);
} 
return G__22201__delegate.call(this,p1,p2,p3,ps);};
G__22201.cljs$lang$maxFixedArity = 3;
G__22201.cljs$lang$applyTo = (function (arglist__22208){
var p1 = cljs.core.first(arglist__22208);
arglist__22208 = cljs.core.next(arglist__22208);
var p2 = cljs.core.first(arglist__22208);
arglist__22208 = cljs.core.next(arglist__22208);
var p3 = cljs.core.first(arglist__22208);
var ps = cljs.core.rest(arglist__22208);
return G__22201__delegate(p1,p2,p3,ps);
});
G__22201.cljs$core$IFn$_invoke$arity$variadic = G__22201__delegate;
return G__22201;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__22209 = null;
if (arguments.length > 3) {
var G__22210__i = 0, G__22210__a = new Array(arguments.length -  3);
while (G__22210__i < G__22210__a.length) {G__22210__a[G__22210__i] = arguments[G__22210__i + 3]; ++G__22210__i;}
G__22209 = new cljs.core.IndexedSeq(G__22210__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__22209);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__22265 = null;
var G__22265__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22265__1 = (function (result){
var G__22251 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22251) : rf.call(null,G__22251));
});
var G__22265__2 = (function (result,input){
var G__22252 = result;
var G__22253 = (function (){var G__22254 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22254) : f.call(null,G__22254));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22252,G__22253) : rf.call(null,G__22252,G__22253));
});
var G__22265__3 = (function() { 
var G__22266__delegate = function (result,input,inputs){
var G__22255 = result;
var G__22256 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22255,G__22256) : rf.call(null,G__22255,G__22256));
};
var G__22266 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__22267__i = 0, G__22267__a = new Array(arguments.length -  2);
while (G__22267__i < G__22267__a.length) {G__22267__a[G__22267__i] = arguments[G__22267__i + 2]; ++G__22267__i;}
  inputs = new cljs.core.IndexedSeq(G__22267__a,0);
} 
return G__22266__delegate.call(this,result,input,inputs);};
G__22266.cljs$lang$maxFixedArity = 2;
G__22266.cljs$lang$applyTo = (function (arglist__22268){
var result = cljs.core.first(arglist__22268);
arglist__22268 = cljs.core.next(arglist__22268);
var input = cljs.core.first(arglist__22268);
var inputs = cljs.core.rest(arglist__22268);
return G__22266__delegate(result,input,inputs);
});
G__22266.cljs$core$IFn$_invoke$arity$variadic = G__22266__delegate;
return G__22266;
})()
;
G__22265 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__22265__0.call(this);
case 1:
return G__22265__1.call(this,result);
case 2:
return G__22265__2.call(this,result,input);
default:
var G__22269 = null;
if (arguments.length > 2) {
var G__22270__i = 0, G__22270__a = new Array(arguments.length -  2);
while (G__22270__i < G__22270__a.length) {G__22270__a[G__22270__i] = arguments[G__22270__i + 2]; ++G__22270__i;}
G__22269 = new cljs.core.IndexedSeq(G__22270__a,0);
}
return G__22265__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__22269);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22265.cljs$lang$maxFixedArity = 2;
G__22265.cljs$lang$applyTo = G__22265__3.cljs$lang$applyTo;
G__22265.cljs$core$IFn$_invoke$arity$0 = G__22265__0;
G__22265.cljs$core$IFn$_invoke$arity$1 = G__22265__1;
G__22265.cljs$core$IFn$_invoke$arity$2 = G__22265__2;
G__22265.cljs$core$IFn$_invoke$arity$variadic = G__22265__3.cljs$core$IFn$_invoke$arity$variadic;
return G__22265;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13480__auto___22271 = size;
var i_22272 = (0);
while(true){
if((i_22272 < n__13480__auto___22271)){
cljs.core.chunk_append(b,(function (){var G__22257 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22272);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22257) : f.call(null,G__22257));
})());

var G__22273 = (i_22272 + (1));
i_22272 = G__22273;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__22258 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22258) : f.call(null,G__22258));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__22259 = cljs.core.first(s1);
var G__22260 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22259,G__22260) : f.call(null,G__22259,G__22260));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__22261 = cljs.core.first(s1);
var G__22262 = cljs.core.first(s2);
var G__22263 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22261,G__22262,G__22263) : f.call(null,G__22261,G__22262,G__22263));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__22274__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__22211_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__22211_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__22274 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__22275__i = 0, G__22275__a = new Array(arguments.length -  4);
while (G__22275__i < G__22275__a.length) {G__22275__a[G__22275__i] = arguments[G__22275__i + 4]; ++G__22275__i;}
  colls = new cljs.core.IndexedSeq(G__22275__a,0);
} 
return G__22274__delegate.call(this,f,c1,c2,c3,colls);};
G__22274.cljs$lang$maxFixedArity = 4;
G__22274.cljs$lang$applyTo = (function (arglist__22276){
var f = cljs.core.first(arglist__22276);
arglist__22276 = cljs.core.next(arglist__22276);
var c1 = cljs.core.first(arglist__22276);
arglist__22276 = cljs.core.next(arglist__22276);
var c2 = cljs.core.first(arglist__22276);
arglist__22276 = cljs.core.next(arglist__22276);
var c3 = cljs.core.first(arglist__22276);
var colls = cljs.core.rest(arglist__22276);
return G__22274__delegate(f,c1,c2,c3,colls);
});
G__22274.cljs$core$IFn$_invoke$arity$variadic = G__22274__delegate;
return G__22274;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__22277 = null;
if (arguments.length > 4) {
var G__22278__i = 0, G__22278__a = new Array(arguments.length -  4);
while (G__22278__i < G__22278__a.length) {G__22278__a[G__22278__i] = arguments[G__22278__i + 4]; ++G__22278__i;}
G__22277 = new cljs.core.IndexedSeq(G__22278__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__22277);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__22287 = null;
var G__22287__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22287__1 = (function (result){
var G__22284 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22284) : rf.call(null,G__22284));
});
var G__22287__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__22285 = result;
var G__22286 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22285,G__22286) : rf.call(null,G__22285,G__22286));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__22287 = function(result,input){
switch(arguments.length){
case 0:
return G__22287__0.call(this);
case 1:
return G__22287__1.call(this,result);
case 2:
return G__22287__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22287.cljs$core$IFn$_invoke$arity$0 = G__22287__0;
G__22287.cljs$core$IFn$_invoke$arity$1 = G__22287__1;
G__22287.cljs$core$IFn$_invoke$arity$2 = G__22287__2;
return G__22287;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__22294 = null;
var G__22294__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22294__1 = (function (result){
var G__22291 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22291) : rf.call(null,G__22291));
});
var G__22294__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__22292 = result;
var G__22293 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22292,G__22293) : rf.call(null,G__22292,G__22293));
}
});
G__22294 = function(result,input){
switch(arguments.length){
case 0:
return G__22294__0.call(this);
case 1:
return G__22294__1.call(this,result);
case 2:
return G__22294__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22294.cljs$core$IFn$_invoke$arity$0 = G__22294__0;
G__22294.cljs$core$IFn$_invoke$arity$1 = G__22294__1;
G__22294.cljs$core$IFn$_invoke$arity$2 = G__22294__2;
return G__22294;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__22295 = (n__$1 - (1));
var G__22296 = cljs.core.rest(s);
n__$1 = G__22295;
coll__$1 = G__22296;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__22299 = cljs.core.next(s);
var G__22300 = cljs.core.next(lead);
s = G__22299;
lead = G__22300;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__22313 = null;
var G__22313__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22313__1 = (function (result){
var G__22307 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22307) : rf.call(null,G__22307));
});
var G__22313__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__12581__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__12581__auto__)){
var G__22308 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22308) : pred.call(null,G__22308));
} else {
return and__12581__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__22309 = result;
var G__22310 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22309,G__22310) : rf.call(null,G__22309,G__22310));
}
});
G__22313 = function(result,input){
switch(arguments.length){
case 0:
return G__22313__0.call(this);
case 1:
return G__22313__1.call(this,result);
case 2:
return G__22313__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22313.cljs$core$IFn$_invoke$arity$0 = G__22313__0;
G__22313.cljs$core$IFn$_invoke$arity$1 = G__22313__1;
G__22313.cljs$core$IFn$_invoke$arity$2 = G__22313__2;
return G__22313;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__12581__auto__ = s;
if(and__12581__auto__){
var G__22312 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__22312) : pred__$1.call(null,G__22312));
} else {
return and__12581__auto__;
}
})())){
var G__22314 = pred__$1;
var G__22315 = cljs.core.rest(s);
pred__$1 = G__22314;
coll__$1 = G__22315;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__22324 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22324) : f.call(null,G__22324));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__22327__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__22327 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__22328__i = 0, G__22328__a = new Array(arguments.length -  2);
while (G__22328__i < G__22328__a.length) {G__22328__a[G__22328__i] = arguments[G__22328__i + 2]; ++G__22328__i;}
  colls = new cljs.core.IndexedSeq(G__22328__a,0);
} 
return G__22327__delegate.call(this,c1,c2,colls);};
G__22327.cljs$lang$maxFixedArity = 2;
G__22327.cljs$lang$applyTo = (function (arglist__22329){
var c1 = cljs.core.first(arglist__22329);
arglist__22329 = cljs.core.next(arglist__22329);
var c2 = cljs.core.first(arglist__22329);
var colls = cljs.core.rest(arglist__22329);
return G__22327__delegate(c1,c2,colls);
});
G__22327.cljs$core$IFn$_invoke$arity$variadic = G__22327__delegate;
return G__22327;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__22330 = null;
if (arguments.length > 2) {
var G__22331__i = 0, G__22331__a = new Array(arguments.length -  2);
while (G__22331__i < G__22331__a.length) {G__22331__a[G__22331__i] = arguments[G__22331__i + 2]; ++G__22331__i;}
G__22330 = new cljs.core.IndexedSeq(G__22331__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__22330);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function interpose(sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__22340__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__22340 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__22341__i = 0, G__22341__a = new Array(arguments.length -  1);
while (G__22341__i < G__22341__a.length) {G__22341__a[G__22341__i] = arguments[G__22341__i + 1]; ++G__22341__i;}
  colls = new cljs.core.IndexedSeq(G__22341__a,0);
} 
return G__22340__delegate.call(this,f,colls);};
G__22340.cljs$lang$maxFixedArity = 1;
G__22340.cljs$lang$applyTo = (function (arglist__22342){
var f = cljs.core.first(arglist__22342);
var colls = cljs.core.rest(arglist__22342);
return G__22340__delegate(f,colls);
});
G__22340.cljs$core$IFn$_invoke$arity$variadic = G__22340__delegate;
return G__22340;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__22343 = null;
if (arguments.length > 1) {
var G__22344__i = 0, G__22344__a = new Array(arguments.length -  1);
while (G__22344__i < G__22344__a.length) {G__22344__a[G__22344__i] = arguments[G__22344__i + 1]; ++G__22344__i;}
G__22343 = new cljs.core.IndexedSeq(G__22344__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__22343);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__22363 = null;
var G__22363__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22363__1 = (function (result){
var G__22357 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22357) : rf.call(null,G__22357));
});
var G__22363__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__22358 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22358) : pred.call(null,G__22358));
})())){
var G__22359 = result;
var G__22360 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22359,G__22360) : rf.call(null,G__22359,G__22360));
} else {
return result;
}
});
G__22363 = function(result,input){
switch(arguments.length){
case 0:
return G__22363__0.call(this);
case 1:
return G__22363__1.call(this,result);
case 2:
return G__22363__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22363.cljs$core$IFn$_invoke$arity$0 = G__22363__0;
G__22363.cljs$core$IFn$_invoke$arity$1 = G__22363__1;
G__22363.cljs$core$IFn$_invoke$arity$2 = G__22363__2;
return G__22363;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13480__auto___22364 = size;
var i_22365 = (0);
while(true){
if((i_22365 < n__13480__auto___22364)){
if(cljs.core.truth_((function (){var G__22361 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22365);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22361) : pred.call(null,G__22361));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22365));
} else {
}

var G__22366 = (i_22365 + (1));
i_22365 = G__22366;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__22362 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22362) : pred.call(null,G__22362));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__22373 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__22373) : branch_QMARK_.call(null,G__22373));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__22374 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__22374) : children.call(null,G__22374));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__22375_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__22375_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__22378 = to;
if(G__22378){
var bit__13267__auto__ = (G__22378.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__13267__auto__) || (G__22378.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__22379 = to;
if(G__22379){
var bit__13267__auto__ = (G__22379.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__13267__auto__) || (G__22379.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__22381 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22381) : f.call(null,G__22381));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__22382__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__22382 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__22383__i = 0, G__22383__a = new Array(arguments.length -  4);
while (G__22383__i < G__22383__a.length) {G__22383__a[G__22383__i] = arguments[G__22383__i + 4]; ++G__22383__i;}
  colls = new cljs.core.IndexedSeq(G__22383__a,0);
} 
return G__22382__delegate.call(this,f,c1,c2,c3,colls);};
G__22382.cljs$lang$maxFixedArity = 4;
G__22382.cljs$lang$applyTo = (function (arglist__22384){
var f = cljs.core.first(arglist__22384);
arglist__22384 = cljs.core.next(arglist__22384);
var c1 = cljs.core.first(arglist__22384);
arglist__22384 = cljs.core.next(arglist__22384);
var c2 = cljs.core.first(arglist__22384);
arglist__22384 = cljs.core.next(arglist__22384);
var c3 = cljs.core.first(arglist__22384);
var colls = cljs.core.rest(arglist__22384);
return G__22382__delegate(f,c1,c2,c3,colls);
});
G__22382.cljs$core$IFn$_invoke$arity$variadic = G__22382__delegate;
return G__22382;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__22385 = null;
if (arguments.length > 4) {
var G__22386__i = 0, G__22386__a = new Array(arguments.length -  4);
while (G__22386__i < G__22386__a.length) {G__22386__a[G__22386__i] = arguments[G__22386__i + 4]; ++G__22386__i;}
G__22385 = new cljs.core.IndexedSeq(G__22386__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__22385);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__22388 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22388) : pred.call(null,G__22388));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__22403 = m__$1;
if(G__22403){
var bit__13274__auto__ = (G__22403.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13274__auto__) || (G__22403.cljs$core$ILookup$)){
return true;
} else {
if((!G__22403.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__22403);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__22403);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__22404 = sentinel;
var G__22405 = m__$2;
var G__22406 = cljs.core.next(ks__$1);
sentinel = G__22404;
m__$1 = G__22405;
ks__$1 = G__22406;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__22407,v){
var vec__22412 = p__22407;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22412,(0),null);
var ks = cljs.core.nthnext(vec__22412,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__22413,f){
var vec__22451 = p__22413;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22451,(0),null);
var ks = cljs.core.nthnext(vec__22451,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22452 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22452) : f.call(null,G__22452));
})());
}
});
var update_in__4 = (function (m,p__22414,f,a){
var vec__22453 = p__22414;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22453,(0),null);
var ks = cljs.core.nthnext(vec__22453,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22454 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22455 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22454,G__22455) : f.call(null,G__22454,G__22455));
})());
}
});
var update_in__5 = (function (m,p__22415,f,a,b){
var vec__22456 = p__22415;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22456,(0),null);
var ks = cljs.core.nthnext(vec__22456,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22457 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22458 = a;
var G__22459 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22457,G__22458,G__22459) : f.call(null,G__22457,G__22458,G__22459));
})());
}
});
var update_in__6 = (function (m,p__22416,f,a,b,c){
var vec__22460 = p__22416;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22460,(0),null);
var ks = cljs.core.nthnext(vec__22460,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22461 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22462 = a;
var G__22463 = b;
var G__22464 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22461,G__22462,G__22463,G__22464) : f.call(null,G__22461,G__22462,G__22463,G__22464));
})());
}
});
var update_in__7 = (function() { 
var G__22466__delegate = function (m,p__22417,f,a,b,c,args){
var vec__22465 = p__22417;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22465,(0),null);
var ks = cljs.core.nthnext(vec__22465,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__22466 = function (m,p__22417,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__22467__i = 0, G__22467__a = new Array(arguments.length -  6);
while (G__22467__i < G__22467__a.length) {G__22467__a[G__22467__i] = arguments[G__22467__i + 6]; ++G__22467__i;}
  args = new cljs.core.IndexedSeq(G__22467__a,0);
} 
return G__22466__delegate.call(this,m,p__22417,f,a,b,c,args);};
G__22466.cljs$lang$maxFixedArity = 6;
G__22466.cljs$lang$applyTo = (function (arglist__22468){
var m = cljs.core.first(arglist__22468);
arglist__22468 = cljs.core.next(arglist__22468);
var p__22417 = cljs.core.first(arglist__22468);
arglist__22468 = cljs.core.next(arglist__22468);
var f = cljs.core.first(arglist__22468);
arglist__22468 = cljs.core.next(arglist__22468);
var a = cljs.core.first(arglist__22468);
arglist__22468 = cljs.core.next(arglist__22468);
var b = cljs.core.first(arglist__22468);
arglist__22468 = cljs.core.next(arglist__22468);
var c = cljs.core.first(arglist__22468);
var args = cljs.core.rest(arglist__22468);
return G__22466__delegate(m,p__22417,f,a,b,c,args);
});
G__22466.cljs$core$IFn$_invoke$arity$variadic = G__22466__delegate;
return G__22466;
})()
;
update_in = function(m,p__22417,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__22417,f);
case 4:
return update_in__4.call(this,m,p__22417,f,a);
case 5:
return update_in__5.call(this,m,p__22417,f,a,b);
case 6:
return update_in__6.call(this,m,p__22417,f,a,b,c);
default:
var G__22469 = null;
if (arguments.length > 6) {
var G__22470__i = 0, G__22470__a = new Array(arguments.length -  6);
while (G__22470__i < G__22470__a.length) {G__22470__a[G__22470__i] = arguments[G__22470__i + 6]; ++G__22470__i;}
G__22469 = new cljs.core.IndexedSeq(G__22470__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__22417,f,a,b,c, G__22469);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22481 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22481) : f.call(null,G__22481));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22482 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22483 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22482,G__22483) : f.call(null,G__22482,G__22483));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22484 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22485 = x;
var G__22486 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22484,G__22485,G__22486) : f.call(null,G__22484,G__22485,G__22486));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22487 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22488 = x;
var G__22489 = y;
var G__22490 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22487,G__22488,G__22489,G__22490) : f.call(null,G__22487,G__22488,G__22489,G__22490));
})());
});
var update__7 = (function() { 
var G__22491__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__22491 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__22492__i = 0, G__22492__a = new Array(arguments.length -  6);
while (G__22492__i < G__22492__a.length) {G__22492__a[G__22492__i] = arguments[G__22492__i + 6]; ++G__22492__i;}
  more = new cljs.core.IndexedSeq(G__22492__a,0);
} 
return G__22491__delegate.call(this,m,k,f,x,y,z,more);};
G__22491.cljs$lang$maxFixedArity = 6;
G__22491.cljs$lang$applyTo = (function (arglist__22493){
var m = cljs.core.first(arglist__22493);
arglist__22493 = cljs.core.next(arglist__22493);
var k = cljs.core.first(arglist__22493);
arglist__22493 = cljs.core.next(arglist__22493);
var f = cljs.core.first(arglist__22493);
arglist__22493 = cljs.core.next(arglist__22493);
var x = cljs.core.first(arglist__22493);
arglist__22493 = cljs.core.next(arglist__22493);
var y = cljs.core.first(arglist__22493);
arglist__22493 = cljs.core.next(arglist__22493);
var z = cljs.core.first(arglist__22493);
var more = cljs.core.rest(arglist__22493);
return G__22491__delegate(m,k,f,x,y,z,more);
});
G__22491.cljs$core$IFn$_invoke$arity$variadic = G__22491__delegate;
return G__22491;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__22494 = null;
if (arguments.length > 6) {
var G__22495__i = 0, G__22495__a = new Array(arguments.length -  6);
while (G__22495__i < G__22495__a.length) {G__22495__a[G__22495__i] = arguments[G__22495__i + 6]; ++G__22495__i;}
G__22494 = new cljs.core.IndexedSeq(G__22495__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__22494);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__22496 = (ll - (5));
var G__22497 = r;
ll = G__22496;
ret = G__22497;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__22502 = cljs.core.pv_aget(node,(0));
var G__22503 = (level - (5));
node = G__22502;
level = G__22503;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__22504 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__22505 = (level - (5));
node = G__22504;
level = G__22505;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__22515 = init__$2;
var G__22516 = (j + i);
var G__22517 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22515,G__22516,G__22517) : f.call(null,G__22515,G__22516,G__22517));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__22528 = (j + (1));
var G__22529 = init__$3;
j = G__22528;
init__$2 = G__22529;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22518 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22518) : cljs.core.deref.call(null,G__22518));
} else {
var G__22530 = (i + len);
var G__22531 = init__$2;
i = G__22530;
init__$1 = G__22531;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__22519 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__22519) : cljs.core.tv_editable_root.call(null,G__22519));
})(),(function (){var G__22520 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__22520) : cljs.core.tv_editable_tail.call(null,G__22520));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__22521 = init__$2;
var G__22522 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22521,G__22522) : f.call(null,G__22521,G__22522));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__22532 = (j + (1));
var G__22533 = init__$3;
j = G__22532;
init__$2 = G__22533;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22523 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22523) : cljs.core.deref.call(null,G__22523));
} else {
var G__22534 = (i + len);
var G__22535 = init__$2;
i = G__22534;
init__$1 = G__22535;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__22524 = coll__$1;
var G__22525 = cljs.core.first_array_for_longvec(coll__$1);
var G__22526 = (0);
var G__22527 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22524,G__22525,G__22526,G__22527) : cljs.core.chunked_seq.call(null,G__22524,G__22525,G__22526,G__22527));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__13480__auto___22536 = len;
var i_22537 = (0);
while(true){
if((i_22537 < n__13480__auto___22536)){
(new_tail[i_22537] = (self__.tail[i_22537]));

var G__22538 = (i_22537 + (1));
i_22537 = G__22538;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__22539 = null;
var G__22539__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__22539__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__22539 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22539__2.call(this,self__,k);
case 3:
return G__22539__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22539.cljs$core$IFn$_invoke$arity$2 = G__22539__2;
G__22539.cljs$core$IFn$_invoke$arity$3 = G__22539__3;
return G__22539;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args22514){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22514)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],(0)));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__22540 = (i + (1));
var G__22541 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__22540;
out = G__22541;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
cljs.core.vec = (function vec(coll){
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22542__i = 0, G__22542__a = new Array(arguments.length -  0);
while (G__22542__i < G__22542__a.length) {G__22542__a[G__22542__i] = arguments[G__22542__i + 0]; ++G__22542__i;}
  args = new cljs.core.IndexedSeq(G__22542__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__22543){
var args = cljs.core.seq(arglist__22543);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__22544 = self__.vec;
var G__22545 = self__.node;
var G__22546 = self__.i;
var G__22547 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22544,G__22545,G__22546,G__22547) : cljs.core.chunked_seq.call(null,G__22544,G__22545,G__22546,G__22547));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__22548 = self__.vec;
var G__22549 = (self__.i + self__.off);
var G__22550 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__22548,G__22549,G__22550) : cljs.core.subvec.call(null,G__22548,G__22549,G__22550));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__22551 = self__.vec;
var G__22552 = (self__.i + self__.off);
var G__22553 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__22551,G__22552,G__22553) : cljs.core.subvec.call(null,G__22551,G__22552,G__22553));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__22554 = self__.vec;
var G__22555 = self__.node;
var G__22556 = self__.i;
var G__22557 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22554,G__22555,G__22556,G__22557) : cljs.core.chunked_seq.call(null,G__22554,G__22555,G__22556,G__22557));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__22558 = self__.vec;
var G__22559 = cljs.core.unchecked_array_for(self__.vec,end);
var G__22560 = end;
var G__22561 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22558,G__22559,G__22560,G__22561) : cljs.core.chunked_seq.call(null,G__22558,G__22559,G__22560,G__22561));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__22562 = self__.vec;
var G__22563 = self__.node;
var G__22564 = self__.i;
var G__22565 = self__.off;
var G__22566 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__22562,G__22563,G__22564,G__22565,G__22566) : cljs.core.chunked_seq.call(null,G__22562,G__22563,G__22564,G__22565,G__22566));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__22567 = self__.vec;
var G__22568 = cljs.core.unchecked_array_for(self__.vec,end);
var G__22569 = end;
var G__22570 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22567,G__22568,G__22569,G__22570) : cljs.core.chunked_seq.call(null,G__22567,G__22568,G__22569,G__22570));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__22572 = self__.meta;
var G__22573 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__22574 = self__.start;
var G__22575 = (function (){var x__12910__auto__ = self__.end;
var y__12911__auto__ = (v_pos + (1));
return ((x__12910__auto__ > y__12911__auto__) ? x__12910__auto__ : y__12911__auto__);
})();
var G__22576 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22572,G__22573,G__22574,G__22575,G__22576) : cljs.core.build_subvec.call(null,G__22572,G__22573,G__22574,G__22575,G__22576));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__22577 = self__.meta;
var G__22578 = self__.v;
var G__22579 = self__.start;
var G__22580 = (self__.end - (1));
var G__22581 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22577,G__22578,G__22579,G__22580,G__22581) : cljs.core.build_subvec.call(null,G__22577,G__22578,G__22579,G__22580,G__22581));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__22583 = meta__$1;
var G__22584 = self__.v;
var G__22585 = self__.start;
var G__22586 = self__.end;
var G__22587 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22583,G__22584,G__22585,G__22586,G__22587) : cljs.core.build_subvec.call(null,G__22583,G__22584,G__22585,G__22586,G__22587));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__22588 = self__.meta;
var G__22589 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__22590 = self__.start;
var G__22591 = (self__.end + (1));
var G__22592 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22588,G__22589,G__22590,G__22591,G__22592) : cljs.core.build_subvec.call(null,G__22588,G__22589,G__22590,G__22591,G__22592));
});

cljs.core.Subvec.prototype.call = (function() {
var G__22593 = null;
var G__22593__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__22593__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__22593 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22593__2.call(this,self__,k);
case 3:
return G__22593__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22593.cljs$core$IFn$_invoke$arity$2 = G__22593__2;
G__22593.cljs$core$IFn$_invoke$arity$3 = G__22593__3;
return G__22593;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args22571){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22571)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__22594 = meta;
var G__22595 = v.v;
var G__22596 = (v.start + start);
var G__22597 = (v.start + end);
var G__22598 = __hash;
meta = G__22594;
v = G__22595;
start = G__22596;
end = G__22597;
__hash = G__22598;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj22605 = {};
return obj22605;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__22613 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__22614 = (level - (5));
node = G__22613;
level = G__22614;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__22618 = null;
var G__22618__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22618__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22618 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22618__2.call(this,self__,k);
case 3:
return G__22618__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22618.cljs$core$IFn$_invoke$arity$2 = G__22618__2;
G__22618.cljs$core$IFn$_invoke$arity$3 = G__22618__3;
return G__22618;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args22615){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22615)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__12593__auto__ = self__.front;
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__12593__auto__ = self__.rear;
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,(0)));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__22619 = (i + incr);
i = G__22619;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__22620 = (i + (1));
var G__22621 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__22620;
out = G__22621;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj22625 = {};
return obj22625;
})();
var l = ks.length;
var i_22626 = (0);
while(true){
if((i_22626 < l)){
var k_22627 = (ks[i_22626]);
(new_obj[k_22627] = (obj[k_22627]));

var G__22628 = (i_22626 + (1));
i_22626 = G__22628;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12581__auto__ = (function (){var G__22632 = k;
return goog.isString(G__22632);
})();
if(cljs.core.truth_(and__12581__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12581__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__22633 = init__$1;
var G__22634 = k;
var G__22635 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22633,G__22634,G__22635) : f.call(null,G__22633,G__22634,G__22635));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22636 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22636) : cljs.core.deref.call(null,G__22636));
} else {
var G__22642 = cljs.core.rest(keys__$1);
var G__22643 = init__$2;
keys__$1 = G__22642;
init__$1 = G__22643;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12581__auto__ = (function (){var G__22638 = k;
return goog.isString(G__22638);
})();
if(cljs.core.truth_(and__12581__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12581__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__22639 = k;
return goog.isString(G__22639);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12581__auto__ = (function (){var G__22641 = k;
return goog.isString(G__22641);
})();
if(cljs.core.truth_(and__12581__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12581__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__22629_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__22629_SHARP_,(self__.strobj[p1__22629_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__22644 = null;
var G__22644__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22644__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22644 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22644__2.call(this,self__,k);
case 3:
return G__22644__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22644.cljs$core$IFn$_invoke$arity$2 = G__22644__2;
G__22644.cljs$core$IFn$_invoke$arity$3 = G__22644__3;
return G__22644;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args22630){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22630)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj22646 = {};
return obj22646;
})(),(0),(0)));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__22647 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22647,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22647,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__22648 = (i + (2));
i = G__22648;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__22649 = (i + (2));
i = G__22649;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__22650 = (i + (2));
i = G__22650;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__22651 = (i + (2));
i = G__22651;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__22652 = (i + (2));
i = G__22652;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__12593__auto__ = (function (){var G__22656 = k;
return goog.isString(G__22656);
})();
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_22657 = (0);
while(true){
if((i_22657 < l)){
(narr[i_22657] = (arr[i_22657]));

var G__22658 = (i_22657 + (1));
i_22657 = G__22658;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22660 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__22660) : cljs.core.keys.call(null,G__22660));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22661 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__22661) : cljs.core.vals.call(null,G__22661));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22662 = cljs.core.seq(coll);
var chunk__22663 = null;
var count__22664 = (0);
var i__22665 = (0);
while(true){
if((i__22665 < count__22664)){
var vec__22666 = chunk__22663.cljs$core$IIndexed$_nth$arity$2(null,i__22665);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22666,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22666,(1),null);
var G__22667_22680 = v;
var G__22668_22681 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22667_22680,G__22668_22681) : f.call(null,G__22667_22680,G__22668_22681));

var G__22682 = seq__22662;
var G__22683 = chunk__22663;
var G__22684 = count__22664;
var G__22685 = (i__22665 + (1));
seq__22662 = G__22682;
chunk__22663 = G__22683;
count__22664 = G__22684;
i__22665 = G__22685;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22662);
if(temp__4126__auto__){
var seq__22662__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22662__$1)){
var c__13380__auto__ = cljs.core.chunk_first(seq__22662__$1);
var G__22686 = cljs.core.chunk_rest(seq__22662__$1);
var G__22687 = c__13380__auto__;
var G__22688 = cljs.core.count(c__13380__auto__);
var G__22689 = (0);
seq__22662 = G__22686;
chunk__22663 = G__22687;
count__22664 = G__22688;
i__22665 = G__22689;
continue;
} else {
var vec__22669 = cljs.core.first(seq__22662__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22669,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22669,(1),null);
var G__22670_22690 = v;
var G__22671_22691 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22670_22690,G__22671_22691) : f.call(null,G__22670_22690,G__22671_22691));

var G__22692 = cljs.core.next(seq__22662__$1);
var G__22693 = null;
var G__22694 = (0);
var G__22695 = (0);
seq__22662 = G__22692;
chunk__22663 = G__22693;
count__22664 = G__22694;
i__22665 = G__22695;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__22672 = init__$1;
var G__22673 = (self__.arr[i]);
var G__22674 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22672,G__22673,G__22674) : f.call(null,G__22672,G__22673,G__22674));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22675 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22675) : cljs.core.deref.call(null,G__22675));
} else {
var G__22696 = (i + (2));
var G__22697 = init__$2;
i = G__22696;
init__$1 = G__22697;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__22676 = other;
if(G__22676){
var bit__13267__auto__ = (G__22676.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__13267__auto__) || (G__22676.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__22698 = (i + (2));
i = G__22698;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj22678 = {};
return obj22678;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__22699 = (s + (2));
var G__22700 = d;
s = G__22699;
d = G__22700;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__22701 = (s + (2));
var G__22702 = (d + (2));
s = G__22701;
d = G__22702;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__22679 = cljs.core.aclone(self__.arr);
(G__22679[(idx + (1))] = v);

return G__22679;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__22703 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__22704 = cljs.core.next(es);
ret = G__22703;
es = G__22704;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__22705 = null;
var G__22705__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22705__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22705 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22705__2.call(this,self__,k);
case 3:
return G__22705__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22705.cljs$core$IFn$_invoke$arity$2 = G__22705__2;
G__22705.cljs$core$IFn$_invoke$arity$3 = G__22705__3;
return G__22705;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args22659){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22659)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],null));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__22706 = (i + (2));
var G__22707 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__22706;
ret = G__22707;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__22708_22716 = self__.arr;
G__22708_22716.pop();

G__22708_22716.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__22709 = self__.len;
var G__22710 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__22709,G__22710) : cljs.core.array__GT_transient_hash_map.call(null,G__22709,G__22710));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__22711 = o;
if(G__22711){
var bit__13274__auto__ = (G__22711.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__13274__auto__) || (G__22711.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__22711.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__22711);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__22711);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__22712 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22712) : cljs.core.key.call(null,G__22712));
})(),(function (){var G__22713 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22713) : cljs.core.val.call(null,G__22713));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__22717 = cljs.core.next(es);
var G__22718 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__22714 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22714) : cljs.core.key.call(null,G__22714));
})(),(function (){var G__22715 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22715) : cljs.core.val.call(null,G__22715));
})());
es = G__22717;
tcoll__$2 = G__22718;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__22719 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__22720 = (i + (2));
out = G__22719;
i = G__22720;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__22723 = cljs.core.aclone(arr);
(G__22723[i] = a);

return G__22723;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__22724 = cljs.core.aclone(arr);
(G__22724[i] = a);

(G__22724[j] = b);

return G__22724;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__22729 = init__$1;
var G__22730 = k;
var G__22731 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22729,G__22730,G__22731) : f.call(null,G__22729,G__22730,G__22731));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22732 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22732) : cljs.core.deref.call(null,G__22732));
} else {
var G__22733 = (i + (2));
var G__22734 = init__$2;
i = G__22733;
init__$1 = G__22734;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__22735 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__22735) : cljs.core.create_inode_seq.call(null,G__22735));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_22749 = (0);
var j_22750 = (0);
while(true){
if((i_22749 < (32))){
if((((self__.bitmap >>> i_22749) & (1)) === (0))){
var G__22751 = (i_22749 + (1));
var G__22752 = j_22750;
i_22749 = G__22751;
j_22750 = G__22752;
continue;
} else {
(nodes[i_22749] = ((!(((self__.arr[j_22750]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_22750])),(self__.arr[j_22750]),(self__.arr[(j_22750 + (1))]),added_leaf_QMARK_):(self__.arr[(j_22750 + (1))])));

var G__22753 = (i_22749 + (1));
var G__22754 = (j_22750 + (2));
i_22749 = G__22753;
j_22750 = G__22754;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__22736 = edit__$1;
var G__22737 = (shift + (5));
var G__22738 = key_or_nil;
var G__22739 = val_or_node;
var G__22740 = hash;
var G__22741 = key;
var G__22742 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__22736,G__22737,G__22738,G__22739,G__22740,G__22741,G__22742) : cljs.core.create_node.call(null,G__22736,G__22737,G__22738,G__22739,G__22740,G__22741,G__22742));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_22755 = (0);
var j_22756 = (0);
while(true){
if((i_22755 < (32))){
if((((self__.bitmap >>> i_22755) & (1)) === (0))){
var G__22757 = (i_22755 + (1));
var G__22758 = j_22756;
i_22755 = G__22757;
j_22756 = G__22758;
continue;
} else {
(nodes[i_22755] = ((!(((self__.arr[j_22756]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_22756])),(self__.arr[j_22756]),(self__.arr[(j_22756 + (1))]),added_leaf_QMARK_):(self__.arr[(j_22756 + (1))])));

var G__22759 = (i_22755 + (1));
var G__22760 = (j_22756 + (2));
i_22755 = G__22759;
j_22756 = G__22760;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__22743 = (shift + (5));
var G__22744 = key_or_nil;
var G__22745 = val_or_node;
var G__22746 = hash;
var G__22747 = key;
var G__22748 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__22743,G__22744,G__22745,G__22746,G__22747,G__22748) : cljs.core.create_node.call(null,G__22743,G__22744,G__22745,G__22746,G__22747,G__22748));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__22761 = (i + (1));
var G__22762 = (j + (2));
var G__22763 = (bitmap | ((1) << i));
i = G__22761;
j = G__22762;
bitmap = G__22763;
continue;
} else {
var G__22764 = (i + (1));
var G__22765 = j;
var G__22766 = bitmap;
i = G__22764;
j = G__22765;
bitmap = G__22766;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__22767 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__22767) : cljs.core.create_array_node_seq.call(null,G__22767));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22768 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22768) : cljs.core.deref.call(null,G__22768));
} else {
var G__22769 = (i + (1));
var G__22770 = init__$2;
i = G__22769;
init__$1 = G__22770;
continue;
}
} else {
var G__22771 = (i + (1));
var G__22772 = init__$1;
i = G__22771;
init__$1 = G__22772;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__22773 = (i + (2));
i = G__22773;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__22774 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__22774) : cljs.core.create_inode_seq.call(null,G__22774));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__22775 = self__.nodes;
var G__22776 = (self__.i + (2));
var G__22777 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__22775,G__22776,G__22777) : cljs.core.create_inode_seq.call(null,G__22775,G__22776,G__22777));
} else {
var G__22778 = self__.nodes;
var G__22779 = self__.i;
var G__22780 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__22778,G__22779,G__22780) : cljs.core.create_inode_seq.call(null,G__22778,G__22779,G__22780));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__22784 = (j + (2));
j = G__22784;
continue;
}
} else {
var G__22785 = (j + (2));
j = G__22785;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__22786 = null;
var G__22787 = self__.nodes;
var G__22788 = self__.i;
var G__22789 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__22786,G__22787,G__22788,G__22789) : cljs.core.create_array_node_seq.call(null,G__22786,G__22787,G__22788,G__22789));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__22794 = (j + (1));
j = G__22794;
continue;
}
} else {
var G__22795 = (j + (1));
j = G__22795;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22797 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__22797) : cljs.core.keys.call(null,G__22797));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22798 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__22798) : cljs.core.vals.call(null,G__22798));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22799 = cljs.core.seq(coll);
var chunk__22800 = null;
var count__22801 = (0);
var i__22802 = (0);
while(true){
if((i__22802 < count__22801)){
var vec__22803 = chunk__22800.cljs$core$IIndexed$_nth$arity$2(null,i__22802);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22803,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22803,(1),null);
var G__22804_22815 = v;
var G__22805_22816 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22804_22815,G__22805_22816) : f.call(null,G__22804_22815,G__22805_22816));

var G__22817 = seq__22799;
var G__22818 = chunk__22800;
var G__22819 = count__22801;
var G__22820 = (i__22802 + (1));
seq__22799 = G__22817;
chunk__22800 = G__22818;
count__22801 = G__22819;
i__22802 = G__22820;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22799);
if(temp__4126__auto__){
var seq__22799__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22799__$1)){
var c__13380__auto__ = cljs.core.chunk_first(seq__22799__$1);
var G__22821 = cljs.core.chunk_rest(seq__22799__$1);
var G__22822 = c__13380__auto__;
var G__22823 = cljs.core.count(c__13380__auto__);
var G__22824 = (0);
seq__22799 = G__22821;
chunk__22800 = G__22822;
count__22801 = G__22823;
i__22802 = G__22824;
continue;
} else {
var vec__22806 = cljs.core.first(seq__22799__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22806,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22806,(1),null);
var G__22807_22825 = v;
var G__22808_22826 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22807_22825,G__22808_22826) : f.call(null,G__22807_22825,G__22808_22826));

var G__22827 = cljs.core.next(seq__22799__$1);
var G__22828 = null;
var G__22829 = (0);
var G__22830 = (0);
seq__22799 = G__22827;
chunk__22800 = G__22828;
count__22801 = G__22829;
i__22802 = G__22830;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__22809 = init;
var G__22810 = null;
var G__22811 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22809,G__22810,G__22811) : f.call(null,G__22809,G__22810,G__22811));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__22812 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22812) : cljs.core.deref.call(null,G__22812));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj22814 = {};
return obj22814;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__22831 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__22832 = cljs.core.next(es);
ret = G__22831;
es = G__22832;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__22833 = null;
var G__22833__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22833__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22833 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22833__2.call(this,self__,k);
case 3:
return G__22833__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22833.cljs$core$IFn$_invoke$arity$2 = G__22833__2;
G__22833.cljs$core$IFn$_invoke$arity$3 = G__22833__3;
return G__22833;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args22796){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22796)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,(0)));
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__22834 = (i + (1));
var G__22835 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__22834;
out = G__22835;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__22836 = o;
if(G__22836){
var bit__13274__auto__ = (G__22836.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__13274__auto__) || (G__22836.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__22836.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__22836);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__22836);
}
})()){
return tcoll.assoc_BANG_((function (){var G__22837 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22837) : cljs.core.key.call(null,G__22837));
})(),(function (){var G__22838 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22838) : cljs.core.val.call(null,G__22838));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__22841 = cljs.core.next(es);
var G__22842 = tcoll__$1.assoc_BANG_((function (){var G__22839 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22839) : cljs.core.key.call(null,G__22839));
})(),(function (){var G__22840 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22840) : cljs.core.val.call(null,G__22840));
})());
es = G__22841;
tcoll__$1 = G__22842;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__22843 = ((ascending_QMARK_)?t.left:t.right);
var G__22844 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__22843;
stack__$1 = G__22844;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__22857 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22857) : cljs.core.deref.call(null,G__22857));
} else {
var init__$2 = (function (){var G__22858 = init__$1;
var G__22859 = node.key;
var G__22860 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22858,G__22859,G__22860) : f.call(null,G__22858,G__22859,G__22860));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22861 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22861) : cljs.core.deref.call(null,G__22861));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__22862 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22862) : cljs.core.deref.call(null,G__22862));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__22864 = null;
var G__22864__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22864__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22864 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22864__2.call(this,self__,k);
case 3:
return G__22864__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22864.cljs$core$IFn$_invoke$arity$2 = G__22864__2;
G__22864.cljs$core$IFn$_invoke$arity$3 = G__22864__3;
return G__22864;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args22863){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22863)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__22866 = null;
var G__22866__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22866__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22866 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22866__2.call(this,self__,k);
case 3:
return G__22866__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22866.cljs$core$IFn$_invoke$arity$2 = G__22866__2;
G__22866.cljs$core$IFn$_invoke$arity$3 = G__22866__3;
return G__22866;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args22865){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22865)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__22879 = k;
var G__22880 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22879,G__22880) : comp.call(null,G__22879,G__22880));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__22899 = k;
var G__22900 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22899,G__22900) : comp.call(null,G__22899,G__22900));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__22911 = k;
var G__22912 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22911,G__22912) : comp.call(null,G__22911,G__22912));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22914 = cljs.core.seq(coll);
var chunk__22915 = null;
var count__22916 = (0);
var i__22917 = (0);
while(true){
if((i__22917 < count__22916)){
var vec__22918 = chunk__22915.cljs$core$IIndexed$_nth$arity$2(null,i__22917);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22918,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22918,(1),null);
var G__22919_22931 = v;
var G__22920_22932 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22919_22931,G__22920_22932) : f.call(null,G__22919_22931,G__22920_22932));

var G__22933 = seq__22914;
var G__22934 = chunk__22915;
var G__22935 = count__22916;
var G__22936 = (i__22917 + (1));
seq__22914 = G__22933;
chunk__22915 = G__22934;
count__22916 = G__22935;
i__22917 = G__22936;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22914);
if(temp__4126__auto__){
var seq__22914__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22914__$1)){
var c__13380__auto__ = cljs.core.chunk_first(seq__22914__$1);
var G__22937 = cljs.core.chunk_rest(seq__22914__$1);
var G__22938 = c__13380__auto__;
var G__22939 = cljs.core.count(c__13380__auto__);
var G__22940 = (0);
seq__22914 = G__22937;
chunk__22915 = G__22938;
count__22916 = G__22939;
i__22917 = G__22940;
continue;
} else {
var vec__22921 = cljs.core.first(seq__22914__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22921,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22921,(1),null);
var G__22922_22941 = v;
var G__22923_22942 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22922_22941,G__22923_22942) : f.call(null,G__22922_22941,G__22923_22942));

var G__22943 = cljs.core.next(seq__22914__$1);
var G__22944 = null;
var G__22945 = (0);
var G__22946 = (0);
seq__22914 = G__22943;
chunk__22915 = G__22944;
count__22916 = G__22945;
i__22917 = G__22946;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22924 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__22924) : cljs.core.keys.call(null,G__22924));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22925 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__22925) : cljs.core.vals.call(null,G__22925));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__22926 = k;
var G__22927 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__22926,G__22927) : self__.comp.call(null,G__22926,G__22927));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__22947 = t.left;
t = G__22947;
continue;
} else {
var G__22948 = t.right;
t = G__22948;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__22949 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__22950 = cljs.core.next(es);
ret = G__22949;
es = G__22950;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__22951 = null;
var G__22951__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22951__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22951 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22951__2.call(this,self__,k);
case 3:
return G__22951__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22951.cljs$core$IFn$_invoke$arity$2 = G__22951__2;
G__22951.cljs$core$IFn$_invoke$arity$3 = G__22951__3;
return G__22951;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args22913){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22913)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__22928 = k;
var G__22929 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__22928,G__22929) : self__.comp.call(null,G__22928,G__22929));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__22952 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__22953 = t.left;
stack = G__22952;
t = G__22953;
continue;
} else {
var G__22954 = stack;
var G__22955 = t.right;
stack = G__22954;
t = G__22955;
continue;
}
} else {
if((c > (0))){
var G__22956 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__22957 = t.right;
stack = G__22956;
t = G__22957;
continue;
} else {
var G__22958 = stack;
var G__22959 = t.left;
stack = G__22958;
t = G__22959;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__22930 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22930) : cljs.core.key.call(null,G__22930));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,(0)));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__22960 = cljs.core.nnext(in$);
var G__22961 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__22960;
out = G__22961;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22962__i = 0, G__22962__a = new Array(arguments.length -  0);
while (G__22962__i < G__22962__a.length) {G__22962__a[G__22962__i] = arguments[G__22962__i + 0]; ++G__22962__i;}
  keyvals = new cljs.core.IndexedSeq(G__22962__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__22963){
var keyvals = cljs.core.seq(arglist__22963);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22964__i = 0, G__22964__a = new Array(arguments.length -  0);
while (G__22964__i < G__22964__a.length) {G__22964__a[G__22964__i] = arguments[G__22964__i + 0]; ++G__22964__i;}
  keyvals = new cljs.core.IndexedSeq(G__22964__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__22965){
var keyvals = cljs.core.seq(arglist__22965);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj22969 = {};
return obj22969;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__22970 = cljs.core.nnext(kvs);
kvs = G__22970;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22971__i = 0, G__22971__a = new Array(arguments.length -  0);
while (G__22971__i < G__22971__a.length) {G__22971__a[G__22971__i] = arguments[G__22971__i + 0]; ++G__22971__i;}
  keyvals = new cljs.core.IndexedSeq(G__22971__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__22972){
var keyvals = cljs.core.seq(arglist__22972);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__22973 = cljs.core.nnext(in$);
var G__22974 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__22973;
out = G__22974;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22975__i = 0, G__22975__a = new Array(arguments.length -  0);
while (G__22975__i < G__22975__a.length) {G__22975__a[G__22975__i] = arguments[G__22975__i + 0]; ++G__22975__i;}
  keyvals = new cljs.core.IndexedSeq(G__22975__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__22976){
var keyvals = cljs.core.seq(arglist__22976);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__22977 = cljs.core.nnext(in$);
var G__22978 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__22977;
out = G__22978;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__22979__i = 0, G__22979__a = new Array(arguments.length -  1);
while (G__22979__i < G__22979__a.length) {G__22979__a[G__22979__i] = arguments[G__22979__i + 1]; ++G__22979__i;}
  keyvals = new cljs.core.IndexedSeq(G__22979__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__22980){
var comparator = cljs.core.first(arglist__22980);
var keyvals = cljs.core.rest(arglist__22980);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22981 = self__.mseq;
if(G__22981){
var bit__13274__auto__ = (G__22981.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13274__auto__) || (G__22981.cljs$core$INext$)){
return true;
} else {
if((!G__22981.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22981);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22981);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22982 = self__.mseq;
if(G__22982){
var bit__13274__auto__ = (G__22982.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13274__auto__) || (G__22982.cljs$core$INext$)){
return true;
} else {
if((!G__22982.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22982);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22982);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22983 = self__.mseq;
if(G__22983){
var bit__13274__auto__ = (G__22983.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13274__auto__) || (G__22983.cljs$core$INext$)){
return true;
} else {
if((!G__22983.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22983);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22983);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22984 = self__.mseq;
if(G__22984){
var bit__13274__auto__ = (G__22984.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13274__auto__) || (G__22984.cljs$core$INext$)){
return true;
} else {
if((!G__22984.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22984);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22984);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__22985_SHARP_,p2__22986_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__12593__auto__ = p1__22985_SHARP_;
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__22986_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__22987__i = 0, G__22987__a = new Array(arguments.length -  0);
while (G__22987__i < G__22987__a.length) {G__22987__a[G__22987__i] = arguments[G__22987__i + 0]; ++G__22987__i;}
  maps = new cljs.core.IndexedSeq(G__22987__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__22988){
var maps = cljs.core.seq(arglist__22988);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22991 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22992 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22991,G__22992) : f.call(null,G__22991,G__22992));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__12593__auto__ = m1;
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__22993__i = 0, G__22993__a = new Array(arguments.length -  1);
while (G__22993__i < G__22993__a.length) {G__22993__a[G__22993__i] = arguments[G__22993__i + 1]; ++G__22993__i;}
  maps = new cljs.core.IndexedSeq(G__22993__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__22994){
var f = cljs.core.first(arglist__22994);
var maps = cljs.core.rest(arglist__22994);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__22995 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__22996 = cljs.core.next(keys);
ret = G__22995;
keys = G__22996;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22999 = cljs.core.seq(coll);
var chunk__23000 = null;
var count__23001 = (0);
var i__23002 = (0);
while(true){
if((i__23002 < count__23001)){
var vec__23003 = chunk__23000.cljs$core$IIndexed$_nth$arity$2(null,i__23002);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23003,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23003,(1),null);
var G__23004_23009 = v;
var G__23005_23010 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23004_23009,G__23005_23010) : f.call(null,G__23004_23009,G__23005_23010));

var G__23011 = seq__22999;
var G__23012 = chunk__23000;
var G__23013 = count__23001;
var G__23014 = (i__23002 + (1));
seq__22999 = G__23011;
chunk__23000 = G__23012;
count__23001 = G__23013;
i__23002 = G__23014;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22999);
if(temp__4126__auto__){
var seq__22999__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22999__$1)){
var c__13380__auto__ = cljs.core.chunk_first(seq__22999__$1);
var G__23015 = cljs.core.chunk_rest(seq__22999__$1);
var G__23016 = c__13380__auto__;
var G__23017 = cljs.core.count(c__13380__auto__);
var G__23018 = (0);
seq__22999 = G__23015;
chunk__23000 = G__23016;
count__23001 = G__23017;
i__23002 = G__23018;
continue;
} else {
var vec__23006 = cljs.core.first(seq__22999__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23006,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23006,(1),null);
var G__23007_23019 = v;
var G__23008_23020 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23007_23019,G__23008_23020) : f.call(null,G__23007_23019,G__23008_23020));

var G__23021 = cljs.core.next(seq__22999__$1);
var G__23022 = null;
var G__23023 = (0);
var G__23024 = (0);
seq__22999 = G__23021;
chunk__23000 = G__23022;
count__23001 = G__23023;
i__23002 = G__23024;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__22997_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__22997_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__23025 = null;
var G__23025__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23025__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23025 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23025__2.call(this,self__,k);
case 3:
return G__23025__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23025.cljs$core$IFn$_invoke$arity$2 = G__23025__2;
G__23025.cljs$core$IFn$_invoke$arity$3 = G__23025__3;
return G__23025;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args22998){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22998)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,(0)));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__23026 = (i + (1));
var G__23027 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__23026;
out = G__23027;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__23028 = (i + (1));
var G__23029 = cljs.core._conj_BANG_(out,(items[i]));
i = G__23028;
out = G__23029;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__23031 = null;
var G__23031__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__23031__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__23031 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23031__2.call(this,self__,k);
case 3:
return G__23031__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23031.cljs$core$IFn$_invoke$arity$2 = G__23031__2;
G__23031.cljs$core$IFn$_invoke$arity$3 = G__23031__3;
return G__23031;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args23030){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23030)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__23034 = cljs.core.seq(coll);
var chunk__23035 = null;
var count__23036 = (0);
var i__23037 = (0);
while(true){
if((i__23037 < count__23036)){
var vec__23038 = chunk__23035.cljs$core$IIndexed$_nth$arity$2(null,i__23037);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23038,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23038,(1),null);
var G__23039_23044 = v;
var G__23040_23045 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23039_23044,G__23040_23045) : f.call(null,G__23039_23044,G__23040_23045));

var G__23046 = seq__23034;
var G__23047 = chunk__23035;
var G__23048 = count__23036;
var G__23049 = (i__23037 + (1));
seq__23034 = G__23046;
chunk__23035 = G__23047;
count__23036 = G__23048;
i__23037 = G__23049;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23034);
if(temp__4126__auto__){
var seq__23034__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23034__$1)){
var c__13380__auto__ = cljs.core.chunk_first(seq__23034__$1);
var G__23050 = cljs.core.chunk_rest(seq__23034__$1);
var G__23051 = c__13380__auto__;
var G__23052 = cljs.core.count(c__13380__auto__);
var G__23053 = (0);
seq__23034 = G__23050;
chunk__23035 = G__23051;
count__23036 = G__23052;
i__23037 = G__23053;
continue;
} else {
var vec__23041 = cljs.core.first(seq__23034__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23041,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23041,(1),null);
var G__23042_23054 = v;
var G__23043_23055 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23042_23054,G__23043_23055) : f.call(null,G__23042_23054,G__23043_23055));

var G__23056 = cljs.core.next(seq__23034__$1);
var G__23057 = null;
var G__23058 = (0);
var G__23059 = (0);
seq__23034 = G__23056;
chunk__23035 = G__23057;
count__23036 = G__23058;
i__23037 = G__23059;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__23032_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__23032_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__23060 = null;
var G__23060__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23060__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23060 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23060__2.call(this,self__,k);
case 3:
return G__23060__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23060.cljs$core$IFn$_invoke$arity$2 = G__23060__2;
G__23060.cljs$core$IFn$_invoke$arity$3 = G__23060__3;
return G__23060;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args23033){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23033)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,(0)));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__13474__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__13474__auto__.length)){
var G__23061 = (i + (1));
var G__23062 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__23061;
res = G__23062;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__23063 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__23064 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__23063;
out = G__23064;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__23065__delegate = function (keys){
return cljs.core.set(keys);
};
var G__23065 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__23066__i = 0, G__23066__a = new Array(arguments.length -  0);
while (G__23066__i < G__23066__a.length) {G__23066__a[G__23066__i] = arguments[G__23066__i + 0]; ++G__23066__i;}
  keys = new cljs.core.IndexedSeq(G__23066__a,0);
} 
return G__23065__delegate.call(this,keys);};
G__23065.cljs$lang$maxFixedArity = 0;
G__23065.cljs$lang$applyTo = (function (arglist__23067){
var keys = cljs.core.seq(arglist__23067);
return G__23065__delegate(keys);
});
G__23065.cljs$core$IFn$_invoke$arity$variadic = G__23065__delegate;
return G__23065;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__23068 = null;
if (arguments.length > 0) {
var G__23069__i = 0, G__23069__a = new Array(arguments.length -  0);
while (G__23069__i < G__23069__a.length) {G__23069__a[G__23069__i] = arguments[G__23069__i + 0]; ++G__23069__i;}
G__23068 = new cljs.core.IndexedSeq(G__23069__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__23068);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__23070__i = 0, G__23070__a = new Array(arguments.length -  0);
while (G__23070__i < G__23070__a.length) {G__23070__a[G__23070__i] = arguments[G__23070__i + 0]; ++G__23070__i;}
  keys = new cljs.core.IndexedSeq(G__23070__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__23071){
var keys = cljs.core.seq(arglist__23071);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__23072__i = 0, G__23072__a = new Array(arguments.length -  1);
while (G__23072__i < G__23072__a.length) {G__23072__a[G__23072__i] = arguments[G__23072__i + 1]; ++G__23072__i;}
  keys = new cljs.core.IndexedSeq(G__23072__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__23073){
var comparator = cljs.core.first(arglist__23073);
var keys = cljs.core.rest(arglist__23073);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__23074_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__23074_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__23074_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__23075_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__23075_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__23075_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function distinct(coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__23086,seen__$1){
while(true){
var vec__23087 = p__23086;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23087,(0),null);
var xs__$1 = vec__23087;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__23088 = cljs.core.rest(s);
var G__23089 = seen__$1;
p__23086 = G__23088;
seen__$1 = G__23089;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__23090 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__23091 = cljs.core.next(s__$1);
ret = G__23090;
s__$1 = G__23091;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__23093 = x;
if(G__23093){
var bit__13267__auto__ = (G__23093.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__13267__auto__) || (G__23093.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__23094 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__23095 = cljs.core.next(ks);
var G__23096 = cljs.core.next(vs);
map = G__23094;
ks = G__23095;
vs = G__23096;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__23107 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__23107) : k.call(null,G__23107));
})() > (function (){var G__23108 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__23108) : k.call(null,G__23108));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__23109__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__23097_SHARP_,p2__23098_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__23097_SHARP_,p2__23098_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__23109 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__23110__i = 0, G__23110__a = new Array(arguments.length -  3);
while (G__23110__i < G__23110__a.length) {G__23110__a[G__23110__i] = arguments[G__23110__i + 3]; ++G__23110__i;}
  more = new cljs.core.IndexedSeq(G__23110__a,0);
} 
return G__23109__delegate.call(this,k,x,y,more);};
G__23109.cljs$lang$maxFixedArity = 3;
G__23109.cljs$lang$applyTo = (function (arglist__23111){
var k = cljs.core.first(arglist__23111);
arglist__23111 = cljs.core.next(arglist__23111);
var x = cljs.core.first(arglist__23111);
arglist__23111 = cljs.core.next(arglist__23111);
var y = cljs.core.first(arglist__23111);
var more = cljs.core.rest(arglist__23111);
return G__23109__delegate(k,x,y,more);
});
G__23109.cljs$core$IFn$_invoke$arity$variadic = G__23109__delegate;
return G__23109;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__23112 = null;
if (arguments.length > 3) {
var G__23113__i = 0, G__23113__a = new Array(arguments.length -  3);
while (G__23113__i < G__23113__a.length) {G__23113__a[G__23113__i] = arguments[G__23113__i + 3]; ++G__23113__i;}
G__23112 = new cljs.core.IndexedSeq(G__23113__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__23112);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__23124 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__23124) : k.call(null,G__23124));
})() < (function (){var G__23125 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__23125) : k.call(null,G__23125));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__23126__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__23114_SHARP_,p2__23115_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__23114_SHARP_,p2__23115_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__23126 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__23127__i = 0, G__23127__a = new Array(arguments.length -  3);
while (G__23127__i < G__23127__a.length) {G__23127__a[G__23127__i] = arguments[G__23127__i + 3]; ++G__23127__i;}
  more = new cljs.core.IndexedSeq(G__23127__a,0);
} 
return G__23126__delegate.call(this,k,x,y,more);};
G__23126.cljs$lang$maxFixedArity = 3;
G__23126.cljs$lang$applyTo = (function (arglist__23128){
var k = cljs.core.first(arglist__23128);
arglist__23128 = cljs.core.next(arglist__23128);
var x = cljs.core.first(arglist__23128);
arglist__23128 = cljs.core.next(arglist__23128);
var y = cljs.core.first(arglist__23128);
var more = cljs.core.rest(arglist__23128);
return G__23126__delegate(k,x,y,more);
});
G__23126.cljs$core$IFn$_invoke$arity$variadic = G__23126__delegate;
return G__23126;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__23129 = null;
if (arguments.length > 3) {
var G__23130__i = 0, G__23130__a = new Array(arguments.length -  3);
while (G__23130__i < G__23130__a.length) {G__23130__a[G__23130__i] = arguments[G__23130__i + 3]; ++G__23130__i;}
G__23129 = new cljs.core.IndexedSeq(G__23130__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__23129);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__23147 = null;
var G__23147__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23147__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__23142 = result;
var G__23143 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23142,G__23143) : rf.call(null,G__23142,G__23143));
})());
})());
var G__23144 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23144) : rf.call(null,G__23144));
});
var G__23147__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__23145 = result;
var G__23146 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23145,G__23146) : rf.call(null,G__23145,G__23146));
} else {
return result;
}
});
G__23147 = function(result,input){
switch(arguments.length){
case 0:
return G__23147__0.call(this);
case 1:
return G__23147__1.call(this,result);
case 2:
return G__23147__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23147.cljs$core$IFn$_invoke$arity$0 = G__23147__0;
G__23147.cljs$core$IFn$_invoke$arity$1 = G__23147__1;
G__23147.cljs$core$IFn$_invoke$arity$2 = G__23147__2;
return G__23147;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__23160 = null;
var G__23160__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23160__1 = (function (result){
var G__23155 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23155) : rf.call(null,G__23155));
});
var G__23160__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__23156 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23156) : pred.call(null,G__23156));
})())){
var G__23157 = result;
var G__23158 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23157,G__23158) : rf.call(null,G__23157,G__23158));
} else {
return cljs.core.reduced(result);
}
});
G__23160 = function(result,input){
switch(arguments.length){
case 0:
return G__23160__0.call(this);
case 1:
return G__23160__1.call(this,result);
case 2:
return G__23160__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23160.cljs$core$IFn$_invoke$arity$0 = G__23160__0;
G__23160.cljs$core$IFn$_invoke$arity$1 = G__23160__1;
G__23160.cljs$core$IFn$_invoke$arity$2 = G__23160__2;
return G__23160;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__23159 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23159) : pred.call(null,G__23159));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__23165 = (function (){var G__23167 = cljs.core._entry_key(sc,e);
var G__23168 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__23167,G__23168) : comp.call(null,G__23167,G__23168));
})();
var G__23166 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__23165,G__23166) : test.call(null,G__23165,G__23166));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__23172 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23172,(0),null);
var s = vec__23172;
if(cljs.core.truth_((function (){var G__23173 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__23173) : include.call(null,G__23173));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__23174 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23174,(0),null);
var s = vec__23174;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__23178 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23178,(0),null);
var s = vec__23178;
if(cljs.core.truth_((function (){var G__23179 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__23179) : include.call(null,G__23179));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__23180 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23180,(0),null);
var s = vec__23180;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__23181 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__23181) : Math.ceil.call(null,G__23181));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__13014__auto__ = self__.__hash;
if(!((h__13014__auto__ == null))){
return h__13014__auto__;
} else {
var h__13014__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__13014__auto____$1;

return h__13014__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__23182 = ret;
var G__23183 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23182,G__23183) : f.call(null,G__23182,G__23183));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__23184 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23184) : cljs.core.deref.call(null,G__23184));
} else {
var G__23185 = (i + self__.step);
var G__23186 = ret__$1;
i = G__23185;
ret = G__23186;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__23204 = null;
var G__23204__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23204__1 = (function (result){
var G__23201 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23201) : rf.call(null,G__23201));
});
var G__23204__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__23202 = result;
var G__23203 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23202,G__23203) : rf.call(null,G__23202,G__23203));
} else {
return result;
}
});
G__23204 = function(result,input){
switch(arguments.length){
case 0:
return G__23204__0.call(this);
case 1:
return G__23204__1.call(this,result);
case 2:
return G__23204__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23204.cljs$core$IFn$_invoke$arity$0 = G__23204__0;
G__23204.cljs$core$IFn$_invoke$arity$1 = G__23204__1;
G__23204.cljs$core$IFn$_invoke$arity$2 = G__23204__2;
return G__23204;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__23226 = null;
var G__23226__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23226__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__23217 = result;
var G__23218 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23217,G__23218) : rf.call(null,G__23217,G__23218));
})());
})());
var G__23219 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23219) : rf.call(null,G__23219));
});
var G__23226__2 = (function (result,input){
var pval = (function (){var G__23220 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23220) : cljs.core.deref.call(null,G__23220));
})();
var val = (function (){var G__23221 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23221) : f.call(null,G__23221));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__23222 = result;
var G__23223 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23222,G__23223) : rf.call(null,G__23222,G__23223));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__23226 = function(result,input){
switch(arguments.length){
case 0:
return G__23226__0.call(this);
case 1:
return G__23226__1.call(this,result);
case 2:
return G__23226__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23226.cljs$core$IFn$_invoke$arity$0 = G__23226__0;
G__23226.cljs$core$IFn$_invoke$arity$1 = G__23226__1;
G__23226.cljs$core$IFn$_invoke$arity$2 = G__23226__2;
return G__23226;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__23224 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23224) : f.call(null,G__23224));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__23205_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__23225 = p1__23205_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23225) : f.call(null,G__23225));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__23235 = init;
var G__23236 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23235,G__23236) : f.call(null,G__23235,G__23236));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__23331 = null;
var G__23331__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__23331__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23289 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23289) : f.call(null,G__23289));
})()],null));
});
var G__23331__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23290 = x;
var G__23291 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23290,G__23291) : f.call(null,G__23290,G__23291));
})()],null));
});
var G__23331__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23292 = x;
var G__23293 = y;
var G__23294 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23292,G__23293,G__23294) : f.call(null,G__23292,G__23293,G__23294));
})()],null));
});
var G__23331__4 = (function() { 
var G__23332__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__23332 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23333__i = 0, G__23333__a = new Array(arguments.length -  3);
while (G__23333__i < G__23333__a.length) {G__23333__a[G__23333__i] = arguments[G__23333__i + 3]; ++G__23333__i;}
  args = new cljs.core.IndexedSeq(G__23333__a,0);
} 
return G__23332__delegate.call(this,x,y,z,args);};
G__23332.cljs$lang$maxFixedArity = 3;
G__23332.cljs$lang$applyTo = (function (arglist__23334){
var x = cljs.core.first(arglist__23334);
arglist__23334 = cljs.core.next(arglist__23334);
var y = cljs.core.first(arglist__23334);
arglist__23334 = cljs.core.next(arglist__23334);
var z = cljs.core.first(arglist__23334);
var args = cljs.core.rest(arglist__23334);
return G__23332__delegate(x,y,z,args);
});
G__23332.cljs$core$IFn$_invoke$arity$variadic = G__23332__delegate;
return G__23332;
})()
;
G__23331 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23331__0.call(this);
case 1:
return G__23331__1.call(this,x);
case 2:
return G__23331__2.call(this,x,y);
case 3:
return G__23331__3.call(this,x,y,z);
default:
var G__23335 = null;
if (arguments.length > 3) {
var G__23336__i = 0, G__23336__a = new Array(arguments.length -  3);
while (G__23336__i < G__23336__a.length) {G__23336__a[G__23336__i] = arguments[G__23336__i + 3]; ++G__23336__i;}
G__23335 = new cljs.core.IndexedSeq(G__23336__a,0);
}
return G__23331__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23335);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23331.cljs$lang$maxFixedArity = 3;
G__23331.cljs$lang$applyTo = G__23331__4.cljs$lang$applyTo;
G__23331.cljs$core$IFn$_invoke$arity$0 = G__23331__0;
G__23331.cljs$core$IFn$_invoke$arity$1 = G__23331__1;
G__23331.cljs$core$IFn$_invoke$arity$2 = G__23331__2;
G__23331.cljs$core$IFn$_invoke$arity$3 = G__23331__3;
G__23331.cljs$core$IFn$_invoke$arity$variadic = G__23331__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23331;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__23337 = null;
var G__23337__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__23337__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23295 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23295) : f.call(null,G__23295));
})(),(function (){var G__23296 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23296) : g.call(null,G__23296));
})()],null));
});
var G__23337__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23297 = x;
var G__23298 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23297,G__23298) : f.call(null,G__23297,G__23298));
})(),(function (){var G__23299 = x;
var G__23300 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__23299,G__23300) : g.call(null,G__23299,G__23300));
})()],null));
});
var G__23337__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23301 = x;
var G__23302 = y;
var G__23303 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23301,G__23302,G__23303) : f.call(null,G__23301,G__23302,G__23303));
})(),(function (){var G__23304 = x;
var G__23305 = y;
var G__23306 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__23304,G__23305,G__23306) : g.call(null,G__23304,G__23305,G__23306));
})()],null));
});
var G__23337__4 = (function() { 
var G__23338__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__23338 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23339__i = 0, G__23339__a = new Array(arguments.length -  3);
while (G__23339__i < G__23339__a.length) {G__23339__a[G__23339__i] = arguments[G__23339__i + 3]; ++G__23339__i;}
  args = new cljs.core.IndexedSeq(G__23339__a,0);
} 
return G__23338__delegate.call(this,x,y,z,args);};
G__23338.cljs$lang$maxFixedArity = 3;
G__23338.cljs$lang$applyTo = (function (arglist__23340){
var x = cljs.core.first(arglist__23340);
arglist__23340 = cljs.core.next(arglist__23340);
var y = cljs.core.first(arglist__23340);
arglist__23340 = cljs.core.next(arglist__23340);
var z = cljs.core.first(arglist__23340);
var args = cljs.core.rest(arglist__23340);
return G__23338__delegate(x,y,z,args);
});
G__23338.cljs$core$IFn$_invoke$arity$variadic = G__23338__delegate;
return G__23338;
})()
;
G__23337 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23337__0.call(this);
case 1:
return G__23337__1.call(this,x);
case 2:
return G__23337__2.call(this,x,y);
case 3:
return G__23337__3.call(this,x,y,z);
default:
var G__23341 = null;
if (arguments.length > 3) {
var G__23342__i = 0, G__23342__a = new Array(arguments.length -  3);
while (G__23342__i < G__23342__a.length) {G__23342__a[G__23342__i] = arguments[G__23342__i + 3]; ++G__23342__i;}
G__23341 = new cljs.core.IndexedSeq(G__23342__a,0);
}
return G__23337__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23341);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23337.cljs$lang$maxFixedArity = 3;
G__23337.cljs$lang$applyTo = G__23337__4.cljs$lang$applyTo;
G__23337.cljs$core$IFn$_invoke$arity$0 = G__23337__0;
G__23337.cljs$core$IFn$_invoke$arity$1 = G__23337__1;
G__23337.cljs$core$IFn$_invoke$arity$2 = G__23337__2;
G__23337.cljs$core$IFn$_invoke$arity$3 = G__23337__3;
G__23337.cljs$core$IFn$_invoke$arity$variadic = G__23337__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23337;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__23343 = null;
var G__23343__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__23343__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23307 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23307) : f.call(null,G__23307));
})(),(function (){var G__23308 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23308) : g.call(null,G__23308));
})(),(function (){var G__23309 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__23309) : h.call(null,G__23309));
})()],null));
});
var G__23343__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23310 = x;
var G__23311 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23310,G__23311) : f.call(null,G__23310,G__23311));
})(),(function (){var G__23312 = x;
var G__23313 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__23312,G__23313) : g.call(null,G__23312,G__23313));
})(),(function (){var G__23314 = x;
var G__23315 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__23314,G__23315) : h.call(null,G__23314,G__23315));
})()],null));
});
var G__23343__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23316 = x;
var G__23317 = y;
var G__23318 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23316,G__23317,G__23318) : f.call(null,G__23316,G__23317,G__23318));
})(),(function (){var G__23319 = x;
var G__23320 = y;
var G__23321 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__23319,G__23320,G__23321) : g.call(null,G__23319,G__23320,G__23321));
})(),(function (){var G__23322 = x;
var G__23323 = y;
var G__23324 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__23322,G__23323,G__23324) : h.call(null,G__23322,G__23323,G__23324));
})()],null));
});
var G__23343__4 = (function() { 
var G__23344__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__23344 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23345__i = 0, G__23345__a = new Array(arguments.length -  3);
while (G__23345__i < G__23345__a.length) {G__23345__a[G__23345__i] = arguments[G__23345__i + 3]; ++G__23345__i;}
  args = new cljs.core.IndexedSeq(G__23345__a,0);
} 
return G__23344__delegate.call(this,x,y,z,args);};
G__23344.cljs$lang$maxFixedArity = 3;
G__23344.cljs$lang$applyTo = (function (arglist__23346){
var x = cljs.core.first(arglist__23346);
arglist__23346 = cljs.core.next(arglist__23346);
var y = cljs.core.first(arglist__23346);
arglist__23346 = cljs.core.next(arglist__23346);
var z = cljs.core.first(arglist__23346);
var args = cljs.core.rest(arglist__23346);
return G__23344__delegate(x,y,z,args);
});
G__23344.cljs$core$IFn$_invoke$arity$variadic = G__23344__delegate;
return G__23344;
})()
;
G__23343 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23343__0.call(this);
case 1:
return G__23343__1.call(this,x);
case 2:
return G__23343__2.call(this,x,y);
case 3:
return G__23343__3.call(this,x,y,z);
default:
var G__23347 = null;
if (arguments.length > 3) {
var G__23348__i = 0, G__23348__a = new Array(arguments.length -  3);
while (G__23348__i < G__23348__a.length) {G__23348__a[G__23348__i] = arguments[G__23348__i + 3]; ++G__23348__i;}
G__23347 = new cljs.core.IndexedSeq(G__23348__a,0);
}
return G__23343__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23347);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23343.cljs$lang$maxFixedArity = 3;
G__23343.cljs$lang$applyTo = G__23343__4.cljs$lang$applyTo;
G__23343.cljs$core$IFn$_invoke$arity$0 = G__23343__0;
G__23343.cljs$core$IFn$_invoke$arity$1 = G__23343__1;
G__23343.cljs$core$IFn$_invoke$arity$2 = G__23343__2;
G__23343.cljs$core$IFn$_invoke$arity$3 = G__23343__3;
G__23343.cljs$core$IFn$_invoke$arity$variadic = G__23343__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23343;
})()
});
var juxt__4 = (function() { 
var G__23349__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__23350 = null;
var G__23350__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23237_SHARP_,p2__23238_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23237_SHARP_,(function (){return (p2__23238_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__23238_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__23238_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__23350__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23239_SHARP_,p2__23240_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23239_SHARP_,(function (){var G__23325 = x;
return (p2__23240_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__23240_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23325) : p2__23240_SHARP_.call(null,G__23325));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__23350__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23241_SHARP_,p2__23242_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23241_SHARP_,(function (){var G__23326 = x;
var G__23327 = y;
return (p2__23242_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__23242_SHARP_.cljs$core$IFn$_invoke$arity$2(G__23326,G__23327) : p2__23242_SHARP_.call(null,G__23326,G__23327));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__23350__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23243_SHARP_,p2__23244_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23243_SHARP_,(function (){var G__23328 = x;
var G__23329 = y;
var G__23330 = z;
return (p2__23244_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__23244_SHARP_.cljs$core$IFn$_invoke$arity$3(G__23328,G__23329,G__23330) : p2__23244_SHARP_.call(null,G__23328,G__23329,G__23330));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__23350__4 = (function() { 
var G__23351__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23245_SHARP_,p2__23246_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23245_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__23246_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__23351 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23352__i = 0, G__23352__a = new Array(arguments.length -  3);
while (G__23352__i < G__23352__a.length) {G__23352__a[G__23352__i] = arguments[G__23352__i + 3]; ++G__23352__i;}
  args = new cljs.core.IndexedSeq(G__23352__a,0);
} 
return G__23351__delegate.call(this,x,y,z,args);};
G__23351.cljs$lang$maxFixedArity = 3;
G__23351.cljs$lang$applyTo = (function (arglist__23353){
var x = cljs.core.first(arglist__23353);
arglist__23353 = cljs.core.next(arglist__23353);
var y = cljs.core.first(arglist__23353);
arglist__23353 = cljs.core.next(arglist__23353);
var z = cljs.core.first(arglist__23353);
var args = cljs.core.rest(arglist__23353);
return G__23351__delegate(x,y,z,args);
});
G__23351.cljs$core$IFn$_invoke$arity$variadic = G__23351__delegate;
return G__23351;
})()
;
G__23350 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23350__0.call(this);
case 1:
return G__23350__1.call(this,x);
case 2:
return G__23350__2.call(this,x,y);
case 3:
return G__23350__3.call(this,x,y,z);
default:
var G__23354 = null;
if (arguments.length > 3) {
var G__23355__i = 0, G__23355__a = new Array(arguments.length -  3);
while (G__23355__i < G__23355__a.length) {G__23355__a[G__23355__i] = arguments[G__23355__i + 3]; ++G__23355__i;}
G__23354 = new cljs.core.IndexedSeq(G__23355__a,0);
}
return G__23350__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23354);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23350.cljs$lang$maxFixedArity = 3;
G__23350.cljs$lang$applyTo = G__23350__4.cljs$lang$applyTo;
G__23350.cljs$core$IFn$_invoke$arity$0 = G__23350__0;
G__23350.cljs$core$IFn$_invoke$arity$1 = G__23350__1;
G__23350.cljs$core$IFn$_invoke$arity$2 = G__23350__2;
G__23350.cljs$core$IFn$_invoke$arity$3 = G__23350__3;
G__23350.cljs$core$IFn$_invoke$arity$variadic = G__23350__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23350;
})()
;})(fs__$1))
};
var G__23349 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__23356__i = 0, G__23356__a = new Array(arguments.length -  3);
while (G__23356__i < G__23356__a.length) {G__23356__a[G__23356__i] = arguments[G__23356__i + 3]; ++G__23356__i;}
  fs = new cljs.core.IndexedSeq(G__23356__a,0);
} 
return G__23349__delegate.call(this,f,g,h,fs);};
G__23349.cljs$lang$maxFixedArity = 3;
G__23349.cljs$lang$applyTo = (function (arglist__23357){
var f = cljs.core.first(arglist__23357);
arglist__23357 = cljs.core.next(arglist__23357);
var g = cljs.core.first(arglist__23357);
arglist__23357 = cljs.core.next(arglist__23357);
var h = cljs.core.first(arglist__23357);
var fs = cljs.core.rest(arglist__23357);
return G__23349__delegate(f,g,h,fs);
});
G__23349.cljs$core$IFn$_invoke$arity$variadic = G__23349__delegate;
return G__23349;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__23358 = null;
if (arguments.length > 3) {
var G__23359__i = 0, G__23359__a = new Array(arguments.length -  3);
while (G__23359__i < G__23359__a.length) {G__23359__a[G__23359__i] = arguments[G__23359__i + 3]; ++G__23359__i;}
G__23358 = new cljs.core.IndexedSeq(G__23359__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__23358);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__23360 = cljs.core.next(coll);
coll = G__23360;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__23361 = (n - (1));
var G__23362 = cljs.core.next(coll);
n = G__23361;
coll = G__23362;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__23366 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23366,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23366,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23366,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_23374 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__23375_23381 = cljs.core.first(coll);
var G__23376_23382 = writer;
var G__23377_23383 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23375_23381,G__23376_23382,G__23377_23383) : print_one.call(null,G__23375_23381,G__23376_23382,G__23377_23383));
} else {
}

var coll_23384__$1 = cljs.core.next(coll);
var n_23385 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_23384__$1) && (((n_23385 == null)) || (!((n_23385 === (0)))))){
cljs.core._write(writer,sep);

var G__23378_23386 = cljs.core.first(coll_23384__$1);
var G__23379_23387 = writer;
var G__23380_23388 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23378_23386,G__23379_23387,G__23380_23388) : print_one.call(null,G__23378_23386,G__23379_23387,G__23380_23388));

var G__23389 = cljs.core.next(coll_23384__$1);
var G__23390 = (n_23385 - (1));
coll_23384__$1 = G__23389;
n_23385 = G__23390;
continue;
} else {
if((cljs.core.seq(coll_23384__$1)) && ((n_23385 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_23374;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__23395 = cljs.core.seq(ss);
var chunk__23396 = null;
var count__23397 = (0);
var i__23398 = (0);
while(true){
if((i__23398 < count__23397)){
var s = chunk__23396.cljs$core$IIndexed$_nth$arity$2(null,i__23398);
cljs.core._write(writer,s);

var G__23399 = seq__23395;
var G__23400 = chunk__23396;
var G__23401 = count__23397;
var G__23402 = (i__23398 + (1));
seq__23395 = G__23399;
chunk__23396 = G__23400;
count__23397 = G__23401;
i__23398 = G__23402;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23395);
if(temp__4126__auto__){
var seq__23395__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23395__$1)){
var c__13380__auto__ = cljs.core.chunk_first(seq__23395__$1);
var G__23403 = cljs.core.chunk_rest(seq__23395__$1);
var G__23404 = c__13380__auto__;
var G__23405 = cljs.core.count(c__13380__auto__);
var G__23406 = (0);
seq__23395 = G__23403;
chunk__23396 = G__23404;
count__23397 = G__23405;
i__23398 = G__23406;
continue;
} else {
var s = cljs.core.first(seq__23395__$1);
cljs.core._write(writer,s);

var G__23407 = cljs.core.next(seq__23395__$1);
var G__23408 = null;
var G__23409 = (0);
var G__23410 = (0);
seq__23395 = G__23407;
chunk__23396 = G__23408;
count__23397 = G__23409;
i__23398 = G__23410;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__23411__i = 0, G__23411__a = new Array(arguments.length -  1);
while (G__23411__i < G__23411__a.length) {G__23411__a[G__23411__i] = arguments[G__23411__i + 1]; ++G__23411__i;}
  ss = new cljs.core.IndexedSeq(G__23411__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__23412){
var writer = cljs.core.first(arglist__23412);
var ss = cljs.core.rest(arglist__23412);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj23414 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj23414;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__23417 = "[\\\\\"\b\f\n\r\t]";
var G__23418 = "g";
return RegExp(G__23417,G__23418);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__12581__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__12581__auto__)){
var and__12581__auto____$1 = (function (){var G__23432 = obj;
if(G__23432){
var bit__13274__auto__ = (G__23432.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__13274__auto__) || (G__23432.cljs$core$IMeta$)){
return true;
} else {
if((!G__23432.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__23432);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__23432);
}
})();
if(and__12581__auto____$1){
return cljs.core.meta(obj);
} else {
return and__12581__auto____$1;
}
} else {
return and__12581__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__23433 = obj;
if(G__23433){
var bit__13267__auto__ = (G__23433.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__13267__auto__) || (G__23433.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__23434 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__23435 = pr_writer;
var G__23436 = writer;
var G__23437 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__23434,G__23435,G__23436,G__23437) : cljs.core.print_map.call(null,G__23434,G__23435,G__23436,G__23437));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__23438 = obj;
return goog.isString(G__23438);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__23440 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__23440;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__23439 = obj;
if(G__23439){
var bit__13274__auto__ = (G__23439.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__13274__auto__) || (G__23439.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__23439.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__23439);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__23439);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__23445 = cljs.core.seq(cljs.core.next(objs));
var chunk__23446 = null;
var count__23447 = (0);
var i__23448 = (0);
while(true){
if((i__23448 < count__23447)){
var obj = chunk__23446.cljs$core$IIndexed$_nth$arity$2(null,i__23448);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__23449 = seq__23445;
var G__23450 = chunk__23446;
var G__23451 = count__23447;
var G__23452 = (i__23448 + (1));
seq__23445 = G__23449;
chunk__23446 = G__23450;
count__23447 = G__23451;
i__23448 = G__23452;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23445);
if(temp__4126__auto__){
var seq__23445__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23445__$1)){
var c__13380__auto__ = cljs.core.chunk_first(seq__23445__$1);
var G__23453 = cljs.core.chunk_rest(seq__23445__$1);
var G__23454 = c__13380__auto__;
var G__23455 = cljs.core.count(c__13380__auto__);
var G__23456 = (0);
seq__23445 = G__23453;
chunk__23446 = G__23454;
count__23447 = G__23455;
i__23448 = G__23456;
continue;
} else {
var obj = cljs.core.first(seq__23445__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__23457 = cljs.core.next(seq__23445__$1);
var G__23458 = null;
var G__23459 = (0);
var G__23460 = (0);
seq__23445 = G__23457;
chunk__23446 = G__23458;
count__23447 = G__23459;
i__23448 = G__23460;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23461__i = 0, G__23461__a = new Array(arguments.length -  0);
while (G__23461__i < G__23461__a.length) {G__23461__a[G__23461__i] = arguments[G__23461__i + 0]; ++G__23461__i;}
  objs = new cljs.core.IndexedSeq(G__23461__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__23462){
var objs = cljs.core.seq(arglist__23462);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23463__i = 0, G__23463__a = new Array(arguments.length -  0);
while (G__23463__i < G__23463__a.length) {G__23463__a[G__23463__i] = arguments[G__23463__i + 0]; ++G__23463__i;}
  objs = new cljs.core.IndexedSeq(G__23463__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__23464){
var objs = cljs.core.seq(arglist__23464);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23465__i = 0, G__23465__a = new Array(arguments.length -  0);
while (G__23465__i < G__23465__a.length) {G__23465__a[G__23465__i] = arguments[G__23465__i + 0]; ++G__23465__i;}
  objs = new cljs.core.IndexedSeq(G__23465__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__23466){
var objs = cljs.core.seq(arglist__23466);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23467__i = 0, G__23467__a = new Array(arguments.length -  0);
while (G__23467__i < G__23467__a.length) {G__23467__a[G__23467__i] = arguments[G__23467__i + 0]; ++G__23467__i;}
  objs = new cljs.core.IndexedSeq(G__23467__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__23468){
var objs = cljs.core.seq(arglist__23468);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23469__i = 0, G__23469__a = new Array(arguments.length -  0);
while (G__23469__i < G__23469__a.length) {G__23469__a[G__23469__i] = arguments[G__23469__i + 0]; ++G__23469__i;}
  objs = new cljs.core.IndexedSeq(G__23469__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__23470){
var objs = cljs.core.seq(arglist__23470);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23471__i = 0, G__23471__a = new Array(arguments.length -  0);
while (G__23471__i < G__23471__a.length) {G__23471__a[G__23471__i] = arguments[G__23471__i + 0]; ++G__23471__i;}
  objs = new cljs.core.IndexedSeq(G__23471__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__23472){
var objs = cljs.core.seq(arglist__23472);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23473__i = 0, G__23473__a = new Array(arguments.length -  0);
while (G__23473__i < G__23473__a.length) {G__23473__a[G__23473__i] = arguments[G__23473__i + 0]; ++G__23473__i;}
  objs = new cljs.core.IndexedSeq(G__23473__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__23474){
var objs = cljs.core.seq(arglist__23474);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23475__i = 0, G__23475__a = new Array(arguments.length -  0);
while (G__23475__i < G__23475__a.length) {G__23475__a[G__23475__i] = arguments[G__23475__i + 0]; ++G__23475__i;}
  objs = new cljs.core.IndexedSeq(G__23475__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__23476){
var objs = cljs.core.seq(arglist__23476);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__23483_23489 = cljs.core.key(e);
var G__23484_23490 = w;
var G__23485_23491 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23483_23489,G__23484_23490,G__23485_23491) : print_one.call(null,G__23483_23489,G__23484_23490,G__23485_23491));

cljs.core._write(w," ");

var G__23486 = cljs.core.val(e);
var G__23487 = w;
var G__23488 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23486,G__23487,G__23488) : print_one.call(null,G__23486,G__23487,G__23488));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__23492__i = 0, G__23492__a = new Array(arguments.length -  2);
while (G__23492__i < G__23492__a.length) {G__23492__a[G__23492__i] = arguments[G__23492__i + 2]; ++G__23492__i;}
  args = new cljs.core.IndexedSeq(G__23492__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__23493){
var iref = cljs.core.first(arglist__23493);
arglist__23493 = cljs.core.next(arglist__23493);
var f = cljs.core.first(arglist__23493);
var args = cljs.core.rest(arglist__23493);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__23496 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23496) : cljs.core.atom.call(null,G__23496));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__23498 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23498) : cljs.core.deref.call(null,G__23498));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__23499_SHARP_,p2__23500_SHARP_){
var ret = (function (){var G__23503 = p1__23499_SHARP_;
var G__23504 = p2__23500_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23503,G__23504) : rf.call(null,G__23503,G__23504));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__23507 = null;
var G__23507__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23507__1 = (function (result){
var G__23506 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23506) : rf.call(null,G__23506));
});
var G__23507__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__23507 = function(result,input){
switch(arguments.length){
case 0:
return G__23507__0.call(this);
case 1:
return G__23507__1.call(this,result);
case 2:
return G__23507__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23507.cljs$core$IFn$_invoke$arity$0 = G__23507__0;
G__23507.cljs$core$IFn$_invoke$arity$1 = G__23507__1;
G__23507.cljs$core$IFn$_invoke$arity$2 = G__23507__2;
return G__23507;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__23516 = null;
var G__23516__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23516__1 = (function (result){
var G__23512 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23512) : rf.call(null,G__23512));
});
var G__23516__2 = (function (result,input){
var prior = (function (){var G__23513 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23513) : cljs.core.deref.call(null,G__23513));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__23514 = result;
var G__23515 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23514,G__23515) : rf.call(null,G__23514,G__23515));
}
});
G__23516 = function(result,input){
switch(arguments.length){
case 0:
return G__23516__0.call(this);
case 1:
return G__23516__1.call(this,result);
case 2:
return G__23516__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23516.cljs$core$IFn$_invoke$arity$0 = G__23516__0;
G__23516.cljs$core$IFn$_invoke$arity$1 = G__23516__1;
G__23516.cljs$core$IFn$_invoke$arity$2 = G__23516__2;
return G__23516;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13571__auto__ = this;
return cljs.core.es6_iterator(this__13571__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__23518_SHARP_,p2__23517_SHARP_){
var G__23520 = p2__23517_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__23520) : proc.call(null,G__23520));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj23522 = {};
return obj23522;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__12581__auto__ = x;
if(and__12581__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__12581__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__13237__auto__ = (((x == null))?null:x);
return (function (){var or__12593__auto__ = (cljs.core._clj__GT_js[(function (){var G__23526 = x__13237__auto__;
return goog.typeOf(G__23526);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__12581__auto__ = x;
if(and__12581__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__12581__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__13237__auto__ = (((x == null))?null:x);
return (function (){var or__12593__auto__ = (cljs.core._key__GT_js[(function (){var G__23530 = x__13237__auto__;
return goog.typeOf(G__23530);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__23533 = k;
if(G__23533){
var bit__13274__auto__ = null;
if(cljs.core.truth_((function (){var or__12593__auto__ = bit__13274__auto__;
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
return G__23533.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__23533.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23533);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23533);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__23534 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__23534) : cljs.core.clj__GT_js.call(null,G__23534));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__23550 = x;
if(G__23550){
var bit__13274__auto__ = null;
if(cljs.core.truth_((function (){var or__12593__auto__ = bit__13274__auto__;
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
return G__23550.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__23550.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23550);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23550);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj23552 = {};
return obj23552;
})();
var seq__23553_23563 = cljs.core.seq(x);
var chunk__23554_23564 = null;
var count__23555_23565 = (0);
var i__23556_23566 = (0);
while(true){
if((i__23556_23566 < count__23555_23565)){
var vec__23557_23567 = chunk__23554_23564.cljs$core$IIndexed$_nth$arity$2(null,i__23556_23566);
var k_23568 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23557_23567,(0),null);
var v_23569 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23557_23567,(1),null);
(m[cljs.core.key__GT_js(k_23568)] = clj__GT_js(v_23569));

var G__23570 = seq__23553_23563;
var G__23571 = chunk__23554_23564;
var G__23572 = count__23555_23565;
var G__23573 = (i__23556_23566 + (1));
seq__23553_23563 = G__23570;
chunk__23554_23564 = G__23571;
count__23555_23565 = G__23572;
i__23556_23566 = G__23573;
continue;
} else {
var temp__4126__auto___23574 = cljs.core.seq(seq__23553_23563);
if(temp__4126__auto___23574){
var seq__23553_23575__$1 = temp__4126__auto___23574;
if(cljs.core.chunked_seq_QMARK_(seq__23553_23575__$1)){
var c__13380__auto___23576 = cljs.core.chunk_first(seq__23553_23575__$1);
var G__23577 = cljs.core.chunk_rest(seq__23553_23575__$1);
var G__23578 = c__13380__auto___23576;
var G__23579 = cljs.core.count(c__13380__auto___23576);
var G__23580 = (0);
seq__23553_23563 = G__23577;
chunk__23554_23564 = G__23578;
count__23555_23565 = G__23579;
i__23556_23566 = G__23580;
continue;
} else {
var vec__23558_23581 = cljs.core.first(seq__23553_23575__$1);
var k_23582 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23558_23581,(0),null);
var v_23583 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23558_23581,(1),null);
(m[cljs.core.key__GT_js(k_23582)] = clj__GT_js(v_23583));

var G__23584 = cljs.core.next(seq__23553_23575__$1);
var G__23585 = null;
var G__23586 = (0);
var G__23587 = (0);
seq__23553_23563 = G__23584;
chunk__23554_23564 = G__23585;
count__23555_23565 = G__23586;
i__23556_23566 = G__23587;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__23559_23588 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__23560_23589 = null;
var count__23561_23590 = (0);
var i__23562_23591 = (0);
while(true){
if((i__23562_23591 < count__23561_23590)){
var x_23592__$1 = chunk__23560_23589.cljs$core$IIndexed$_nth$arity$2(null,i__23562_23591);
arr.push(x_23592__$1);

var G__23593 = seq__23559_23588;
var G__23594 = chunk__23560_23589;
var G__23595 = count__23561_23590;
var G__23596 = (i__23562_23591 + (1));
seq__23559_23588 = G__23593;
chunk__23560_23589 = G__23594;
count__23561_23590 = G__23595;
i__23562_23591 = G__23596;
continue;
} else {
var temp__4126__auto___23597 = cljs.core.seq(seq__23559_23588);
if(temp__4126__auto___23597){
var seq__23559_23598__$1 = temp__4126__auto___23597;
if(cljs.core.chunked_seq_QMARK_(seq__23559_23598__$1)){
var c__13380__auto___23599 = cljs.core.chunk_first(seq__23559_23598__$1);
var G__23600 = cljs.core.chunk_rest(seq__23559_23598__$1);
var G__23601 = c__13380__auto___23599;
var G__23602 = cljs.core.count(c__13380__auto___23599);
var G__23603 = (0);
seq__23559_23588 = G__23600;
chunk__23560_23589 = G__23601;
count__23561_23590 = G__23602;
i__23562_23591 = G__23603;
continue;
} else {
var x_23604__$1 = cljs.core.first(seq__23559_23598__$1);
arr.push(x_23604__$1);

var G__23605 = cljs.core.next(seq__23559_23598__$1);
var G__23606 = null;
var G__23607 = (0);
var G__23608 = (0);
seq__23559_23588 = G__23605;
chunk__23560_23589 = G__23606;
count__23561_23590 = G__23607;
i__23562_23591 = G__23608;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj23610 = {};
return obj23610;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__12581__auto__ = x;
if(and__12581__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__12581__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__13237__auto__ = (((x == null))?null:x);
return (function (){var or__12593__auto__ = (cljs.core._js__GT_clj[(function (){var G__23614 = x__13237__auto__;
return goog.typeOf(G__23614);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__23671__delegate = function (x,opts){
var map__23644 = opts;
var map__23644__$1 = ((cljs.core.seq_QMARK_(map__23644))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__23644):map__23644);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23644__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__23644,map__23644__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__23660 = x__$1;
if(G__23660){
var bit__13274__auto__ = null;
if(cljs.core.truth_((function (){var or__12593__auto__ = bit__13274__auto__;
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
return G__23660.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__23660.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__23660);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__23660);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__13349__auto__ = ((function (map__23644,map__23644__$1,keywordize_keys,keyfn){
return (function iter__23661(s__23662){
return (new cljs.core.LazySeq(null,((function (map__23644,map__23644__$1,keywordize_keys,keyfn){
return (function (){
var s__23662__$1 = s__23662;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__23662__$1);
if(temp__4126__auto__){
var s__23662__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__23662__$2)){
var c__13347__auto__ = cljs.core.chunk_first(s__23662__$2);
var size__13348__auto__ = cljs.core.count(c__13347__auto__);
var b__23664 = cljs.core.chunk_buffer(size__13348__auto__);
if((function (){var i__23663 = (0);
while(true){
if((i__23663 < size__13348__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__13347__auto__,i__23663);
cljs.core.chunk_append(b__23664,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__23669 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__23669) : keyfn.call(null,G__23669));
})(),thisfn((x__$1[k]))], null));

var G__23672 = (i__23663 + (1));
i__23663 = G__23672;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__23664),iter__23661(cljs.core.chunk_rest(s__23662__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__23664),null);
}
} else {
var k = cljs.core.first(s__23662__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__23670 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__23670) : keyfn.call(null,G__23670));
})(),thisfn((x__$1[k]))], null),iter__23661(cljs.core.rest(s__23662__$2)));
}
} else {
return null;
}
break;
}
});})(map__23644,map__23644__$1,keywordize_keys,keyfn))
,null,null));
});})(map__23644,map__23644__$1,keywordize_keys,keyfn))
;
return iter__13349__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__23644,map__23644__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__23671 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__23673__i = 0, G__23673__a = new Array(arguments.length -  1);
while (G__23673__i < G__23673__a.length) {G__23673__a[G__23673__i] = arguments[G__23673__i + 1]; ++G__23673__i;}
  opts = new cljs.core.IndexedSeq(G__23673__a,0);
} 
return G__23671__delegate.call(this,x,opts);};
G__23671.cljs$lang$maxFixedArity = 1;
G__23671.cljs$lang$applyTo = (function (arglist__23674){
var x = cljs.core.first(arglist__23674);
var opts = cljs.core.rest(arglist__23674);
return G__23671__delegate(x,opts);
});
G__23671.cljs$core$IFn$_invoke$arity$variadic = G__23671__delegate;
return G__23671;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__23675 = null;
if (arguments.length > 1) {
var G__23676__i = 0, G__23676__a = new Array(arguments.length -  1);
while (G__23676__i < G__23676__a.length) {G__23676__a[G__23676__i] = arguments[G__23676__i + 1]; ++G__23676__i;}
G__23675 = new cljs.core.IndexedSeq(G__23676__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__23675);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__23679 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23679) : cljs.core.atom.call(null,G__23679));
})();
return ((function (mem){
return (function() { 
var G__23681__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__23680 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23680) : cljs.core.deref.call(null,G__23680));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__23681 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23682__i = 0, G__23682__a = new Array(arguments.length -  0);
while (G__23682__i < G__23682__a.length) {G__23682__a[G__23682__i] = arguments[G__23682__i + 0]; ++G__23682__i;}
  args = new cljs.core.IndexedSeq(G__23682__a,0);
} 
return G__23681__delegate.call(this,args);};
G__23681.cljs$lang$maxFixedArity = 0;
G__23681.cljs$lang$applyTo = (function (arglist__23683){
var args = cljs.core.seq(arglist__23683);
return G__23681__delegate(args);
});
G__23681.cljs$core$IFn$_invoke$arity$variadic = G__23681__delegate;
return G__23681;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__23685 = ret;
f = G__23685;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__23686__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__23686 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__23687__i = 0, G__23687__a = new Array(arguments.length -  1);
while (G__23687__i < G__23687__a.length) {G__23687__a[G__23687__i] = arguments[G__23687__i + 1]; ++G__23687__i;}
  args = new cljs.core.IndexedSeq(G__23687__a,0);
} 
return G__23686__delegate.call(this,f,args);};
G__23686.cljs$lang$maxFixedArity = 1;
G__23686.cljs$lang$applyTo = (function (arglist__23688){
var f = cljs.core.first(arglist__23688);
var args = cljs.core.rest(arglist__23688);
return G__23686__delegate(f,args);
});
G__23686.cljs$core$IFn$_invoke$arity$variadic = G__23686__delegate;
return G__23686;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__23689 = null;
if (arguments.length > 1) {
var G__23690__i = 0, G__23690__a = new Array(arguments.length -  1);
while (G__23690__i < G__23690__a.length) {G__23690__a[G__23690__i] = arguments[G__23690__i + 1]; ++G__23690__i;}
G__23689 = new cljs.core.IndexedSeq(G__23690__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__23689);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__23693 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__23693) : Math.floor.call(null,G__23693));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__23695 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23695) : f.call(null,G__23695));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__23697 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23697) : cljs.core.atom.call(null,G__23697));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__23698__i = 0, G__23698__a = new Array(arguments.length -  1);
while (G__23698__i < G__23698__a.length) {G__23698__a[G__23698__i] = arguments[G__23698__i + 1]; ++G__23698__i;}
  args = new cljs.core.IndexedSeq(G__23698__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__23699){
var f = cljs.core.first(arglist__23699);
var args = cljs.core.rest(arglist__23699);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__23764 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23764) : cljs.core.deref.call(null,G__23764));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__12593__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
var and__12581__auto__ = cljs.core.vector_QMARK_(parent);
if(and__12581__auto__){
var and__12581__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__12581__auto____$1){
var and__12581__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__12581__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__23789 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__23787 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__23787) : child.call(null,G__23787));
})(),(function (){var G__23788 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__23788) : parent.call(null,G__23788));
})());
var G__23790 = (i + (1));
ret = G__23789;
i = G__23790;
continue;
}
break;
}
} else {
return and__12581__auto____$2;
}
} else {
return and__12581__auto____$1;
}
} else {
return and__12581__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__23794 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23794) : cljs.core.deref.call(null,G__23794));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__23798 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23798) : cljs.core.deref.call(null,G__23798));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__23802 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23802) : cljs.core.deref.call(null,G__23802));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__23811 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__23811) : targets.call(null,G__23811));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__23812 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__23812) : sources.call(null,G__23812));
})()));
});})(tp,td,ta))
;
var or__12593__auto__ = ((cljs.core.contains_QMARK_((function (){var G__23816 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__23816) : tp.call(null,G__23816));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__23817 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__23817) : ta.call(null,G__23817));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__23818 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__23818) : ta.call(null,G__23818));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__23825 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__23825) : parentMap.call(null,G__23825));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__23826 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__23826) : parentMap.call(null,G__23826));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__23819_SHARP_){
return cljs.core.cons(cljs.core.first(p1__23819_SHARP_),cljs.core.interpose(cljs.core.first(p1__23819_SHARP_),cljs.core.second(p1__23819_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__23827 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__23827) : parentMap.call(null,G__23827));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__23820_SHARP_,p2__23821_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__23820_SHARP_,p2__23821_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__23830 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23830) : cljs.core.deref.call(null,G__23830));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__23831 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23831) : cljs.core.deref.call(null,G__23831));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__23847 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23847) : cljs.core.deref.call(null,G__23847));
})().call(null,x);
var or__12593__auto__ = (cljs.core.truth_((function (){var and__12581__auto__ = xprefs;
if(cljs.core.truth_(and__12581__auto__)){
var G__23849 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__23849) : xprefs.call(null,G__23849));
} else {
return and__12581__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__23850 = cljs.core.rest(ps);
ps = G__23850;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__12593__auto____$1)){
return or__12593__auto____$1;
} else {
var or__12593__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__23851 = cljs.core.rest(ps);
ps = G__23851;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__12593__auto____$2)){
return or__12593__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__12593__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__12593__auto__)){
return or__12593__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__23865){
var vec__23866 = p__23865;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23866,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23866,(1),null);
var e = vec__23866;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__23867 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23867) : cljs.core.deref.call(null,G__23867));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__12593__auto__ = (be == null);
if(or__12593__auto__){
return or__12593__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__23868 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23868) : cljs.core.deref.call(null,G__23868));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__23869 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23869) : cljs.core.deref.call(null,G__23869));
})(),(function (){var G__23870 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23870) : cljs.core.deref.call(null,G__23870));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj23872 = {};
return obj23872;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__12581__auto__ = mf;
if(and__12581__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__12581__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__13237__auto__ = (((mf == null))?null:mf);
return (function (){var or__12593__auto__ = (cljs.core._reset[(function (){var G__23876 = x__13237__auto__;
return goog.typeOf(G__23876);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._reset["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__12581__auto__ = mf;
if(and__12581__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__12581__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__13237__auto__ = (((mf == null))?null:mf);
return (function (){var or__12593__auto__ = (cljs.core._add_method[(function (){var G__23880 = x__13237__auto__;
return goog.typeOf(G__23880);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._add_method["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__12581__auto__ = mf;
if(and__12581__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__12581__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__13237__auto__ = (((mf == null))?null:mf);
return (function (){var or__12593__auto__ = (cljs.core._remove_method[(function (){var G__23884 = x__13237__auto__;
return goog.typeOf(G__23884);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._remove_method["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__12581__auto__ = mf;
if(and__12581__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__12581__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__13237__auto__ = (((mf == null))?null:mf);
return (function (){var or__12593__auto__ = (cljs.core._prefer_method[(function (){var G__23888 = x__13237__auto__;
return goog.typeOf(G__23888);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__12581__auto__ = mf;
if(and__12581__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__12581__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__13237__auto__ = (((mf == null))?null:mf);
return (function (){var or__12593__auto__ = (cljs.core._get_method[(function (){var G__23892 = x__13237__auto__;
return goog.typeOf(G__23892);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._get_method["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__12581__auto__ = mf;
if(and__12581__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__12581__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__13237__auto__ = (((mf == null))?null:mf);
return (function (){var or__12593__auto__ = (cljs.core._methods[(function (){var G__23896 = x__13237__auto__;
return goog.typeOf(G__23896);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._methods["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__12581__auto__ = mf;
if(and__12581__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__12581__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__13237__auto__ = (((mf == null))?null:mf);
return (function (){var or__12593__auto__ = (cljs.core._prefers[(function (){var G__23900 = x__13237__auto__;
return goog.typeOf(G__23900);
})()]);
if(or__12593__auto__){
return or__12593__auto__;
} else {
var or__12593__auto____$1 = (cljs.core._prefers["_"]);
if(or__12593__auto____$1){
return or__12593__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__23902 = this$__$1;
return goog.getUid(G__23902);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__23903 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23903) : cljs.core.deref.call(null,G__23903));
})(),(function (){var G__23904 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23904) : cljs.core.deref.call(null,G__23904));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__23905 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23905) : cljs.core.deref.call(null,G__23905));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__23906 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23906) : cljs.core.deref.call(null,G__23906));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__23907 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23907) : cljs.core.deref.call(null,G__23907));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__23908 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23908) : cljs.core.deref.call(null,G__23908));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__24749 = null;
var G__24749__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__24749__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23909 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__23909) : self__.dispatch_fn.call(null,G__23909));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23910 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__23910) : target_fn.call(null,G__23910));
});
var G__24749__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23911 = a;
var G__23912 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__23911,G__23912) : self__.dispatch_fn.call(null,G__23911,G__23912));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23913 = a;
var G__23914 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__23913,G__23914) : target_fn.call(null,G__23913,G__23914));
});
var G__24749__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23915 = a;
var G__23916 = b;
var G__23917 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__23915,G__23916,G__23917) : self__.dispatch_fn.call(null,G__23915,G__23916,G__23917));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23918 = a;
var G__23919 = b;
var G__23920 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__23918,G__23919,G__23920) : target_fn.call(null,G__23918,G__23919,G__23920));
});
var G__24749__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23921 = a;
var G__23922 = b;
var G__23923 = c;
var G__23924 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__23921,G__23922,G__23923,G__23924) : self__.dispatch_fn.call(null,G__23921,G__23922,G__23923,G__23924));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23925 = a;
var G__23926 = b;
var G__23927 = c;
var G__23928 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__23925,G__23926,G__23927,G__23928) : target_fn.call(null,G__23925,G__23926,G__23927,G__23928));
});
var G__24749__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23929 = a;
var G__23930 = b;
var G__23931 = c;
var G__23932 = d;
var G__23933 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__23929,G__23930,G__23931,G__23932,G__23933) : self__.dispatch_fn.call(null,G__23929,G__23930,G__23931,G__23932,G__23933));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23934 = a;
var G__23935 = b;
var G__23936 = c;
var G__23937 = d;
var G__23938 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__23934,G__23935,G__23936,G__23937,G__23938) : target_fn.call(null,G__23934,G__23935,G__23936,G__23937,G__23938));
});
var G__24749__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23939 = a;
var G__23940 = b;
var G__23941 = c;
var G__23942 = d;
var G__23943 = e;
var G__23944 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__23939,G__23940,G__23941,G__23942,G__23943,G__23944) : self__.dispatch_fn.call(null,G__23939,G__23940,G__23941,G__23942,G__23943,G__23944));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23945 = a;
var G__23946 = b;
var G__23947 = c;
var G__23948 = d;
var G__23949 = e;
var G__23950 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__23945,G__23946,G__23947,G__23948,G__23949,G__23950) : target_fn.call(null,G__23945,G__23946,G__23947,G__23948,G__23949,G__23950));
});
var G__24749__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23951 = a;
var G__23952 = b;
var G__23953 = c;
var G__23954 = d;
var G__23955 = e;
var G__23956 = f;
var G__23957 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__23951,G__23952,G__23953,G__23954,G__23955,G__23956,G__23957) : self__.dispatch_fn.call(null,G__23951,G__23952,G__23953,G__23954,G__23955,G__23956,G__23957));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23958 = a;
var G__23959 = b;
var G__23960 = c;
var G__23961 = d;
var G__23962 = e;
var G__23963 = f;
var G__23964 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__23958,G__23959,G__23960,G__23961,G__23962,G__23963,G__23964) : target_fn.call(null,G__23958,G__23959,G__23960,G__23961,G__23962,G__23963,G__23964));
});
var G__24749__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23965 = a;
var G__23966 = b;
var G__23967 = c;
var G__23968 = d;
var G__23969 = e;
var G__23970 = f;
var G__23971 = g;
var G__23972 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__23965,G__23966,G__23967,G__23968,G__23969,G__23970,G__23971,G__23972) : self__.dispatch_fn.call(null,G__23965,G__23966,G__23967,G__23968,G__23969,G__23970,G__23971,G__23972));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23973 = a;
var G__23974 = b;
var G__23975 = c;
var G__23976 = d;
var G__23977 = e;
var G__23978 = f;
var G__23979 = g;
var G__23980 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__23973,G__23974,G__23975,G__23976,G__23977,G__23978,G__23979,G__23980) : target_fn.call(null,G__23973,G__23974,G__23975,G__23976,G__23977,G__23978,G__23979,G__23980));
});
var G__24749__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23981 = a;
var G__23982 = b;
var G__23983 = c;
var G__23984 = d;
var G__23985 = e;
var G__23986 = f;
var G__23987 = g;
var G__23988 = h;
var G__23989 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__23981,G__23982,G__23983,G__23984,G__23985,G__23986,G__23987,G__23988,G__23989) : self__.dispatch_fn.call(null,G__23981,G__23982,G__23983,G__23984,G__23985,G__23986,G__23987,G__23988,G__23989));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23990 = a;
var G__23991 = b;
var G__23992 = c;
var G__23993 = d;
var G__23994 = e;
var G__23995 = f;
var G__23996 = g;
var G__23997 = h;
var G__23998 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__23990,G__23991,G__23992,G__23993,G__23994,G__23995,G__23996,G__23997,G__23998) : target_fn.call(null,G__23990,G__23991,G__23992,G__23993,G__23994,G__23995,G__23996,G__23997,G__23998));
});
var G__24749__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23999 = a;
var G__24000 = b;
var G__24001 = c;
var G__24002 = d;
var G__24003 = e;
var G__24004 = f;
var G__24005 = g;
var G__24006 = h;
var G__24007 = i;
var G__24008 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__23999,G__24000,G__24001,G__24002,G__24003,G__24004,G__24005,G__24006,G__24007,G__24008) : self__.dispatch_fn.call(null,G__23999,G__24000,G__24001,G__24002,G__24003,G__24004,G__24005,G__24006,G__24007,G__24008));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24009 = a;
var G__24010 = b;
var G__24011 = c;
var G__24012 = d;
var G__24013 = e;
var G__24014 = f;
var G__24015 = g;
var G__24016 = h;
var G__24017 = i;
var G__24018 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__24009,G__24010,G__24011,G__24012,G__24013,G__24014,G__24015,G__24016,G__24017,G__24018) : target_fn.call(null,G__24009,G__24010,G__24011,G__24012,G__24013,G__24014,G__24015,G__24016,G__24017,G__24018));
});
var G__24749__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24019 = a;
var G__24020 = b;
var G__24021 = c;
var G__24022 = d;
var G__24023 = e;
var G__24024 = f;
var G__24025 = g;
var G__24026 = h;
var G__24027 = i;
var G__24028 = j;
var G__24029 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__24019,G__24020,G__24021,G__24022,G__24023,G__24024,G__24025,G__24026,G__24027,G__24028,G__24029) : self__.dispatch_fn.call(null,G__24019,G__24020,G__24021,G__24022,G__24023,G__24024,G__24025,G__24026,G__24027,G__24028,G__24029));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24030 = a;
var G__24031 = b;
var G__24032 = c;
var G__24033 = d;
var G__24034 = e;
var G__24035 = f;
var G__24036 = g;
var G__24037 = h;
var G__24038 = i;
var G__24039 = j;
var G__24040 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__24030,G__24031,G__24032,G__24033,G__24034,G__24035,G__24036,G__24037,G__24038,G__24039,G__24040) : target_fn.call(null,G__24030,G__24031,G__24032,G__24033,G__24034,G__24035,G__24036,G__24037,G__24038,G__24039,G__24040));
});
var G__24749__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24041 = a;
var G__24042 = b;
var G__24043 = c;
var G__24044 = d;
var G__24045 = e;
var G__24046 = f;
var G__24047 = g;
var G__24048 = h;
var G__24049 = i;
var G__24050 = j;
var G__24051 = k;
var G__24052 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__24041,G__24042,G__24043,G__24044,G__24045,G__24046,G__24047,G__24048,G__24049,G__24050,G__24051,G__24052) : self__.dispatch_fn.call(null,G__24041,G__24042,G__24043,G__24044,G__24045,G__24046,G__24047,G__24048,G__24049,G__24050,G__24051,G__24052));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24053 = a;
var G__24054 = b;
var G__24055 = c;
var G__24056 = d;
var G__24057 = e;
var G__24058 = f;
var G__24059 = g;
var G__24060 = h;
var G__24061 = i;
var G__24062 = j;
var G__24063 = k;
var G__24064 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__24053,G__24054,G__24055,G__24056,G__24057,G__24058,G__24059,G__24060,G__24061,G__24062,G__24063,G__24064) : target_fn.call(null,G__24053,G__24054,G__24055,G__24056,G__24057,G__24058,G__24059,G__24060,G__24061,G__24062,G__24063,G__24064));
});
var G__24749__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24065 = a;
var G__24066 = b;
var G__24067 = c;
var G__24068 = d;
var G__24069 = e;
var G__24070 = f;
var G__24071 = g;
var G__24072 = h;
var G__24073 = i;
var G__24074 = j;
var G__24075 = k;
var G__24076 = l;
var G__24077 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__24065,G__24066,G__24067,G__24068,G__24069,G__24070,G__24071,G__24072,G__24073,G__24074,G__24075,G__24076,G__24077) : self__.dispatch_fn.call(null,G__24065,G__24066,G__24067,G__24068,G__24069,G__24070,G__24071,G__24072,G__24073,G__24074,G__24075,G__24076,G__24077));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24078 = a;
var G__24079 = b;
var G__24080 = c;
var G__24081 = d;
var G__24082 = e;
var G__24083 = f;
var G__24084 = g;
var G__24085 = h;
var G__24086 = i;
var G__24087 = j;
var G__24088 = k;
var G__24089 = l;
var G__24090 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__24078,G__24079,G__24080,G__24081,G__24082,G__24083,G__24084,G__24085,G__24086,G__24087,G__24088,G__24089,G__24090) : target_fn.call(null,G__24078,G__24079,G__24080,G__24081,G__24082,G__24083,G__24084,G__24085,G__24086,G__24087,G__24088,G__24089,G__24090));
});
var G__24749__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24091 = a;
var G__24092 = b;
var G__24093 = c;
var G__24094 = d;
var G__24095 = e;
var G__24096 = f;
var G__24097 = g;
var G__24098 = h;
var G__24099 = i;
var G__24100 = j;
var G__24101 = k;
var G__24102 = l;
var G__24103 = m;
var G__24104 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__24091,G__24092,G__24093,G__24094,G__24095,G__24096,G__24097,G__24098,G__24099,G__24100,G__24101,G__24102,G__24103,G__24104) : self__.dispatch_fn.call(null,G__24091,G__24092,G__24093,G__24094,G__24095,G__24096,G__24097,G__24098,G__24099,G__24100,G__24101,G__24102,G__24103,G__24104));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24105 = a;
var G__24106 = b;
var G__24107 = c;
var G__24108 = d;
var G__24109 = e;
var G__24110 = f;
var G__24111 = g;
var G__24112 = h;
var G__24113 = i;
var G__24114 = j;
var G__24115 = k;
var G__24116 = l;
var G__24117 = m;
var G__24118 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__24105,G__24106,G__24107,G__24108,G__24109,G__24110,G__24111,G__24112,G__24113,G__24114,G__24115,G__24116,G__24117,G__24118) : target_fn.call(null,G__24105,G__24106,G__24107,G__24108,G__24109,G__24110,G__24111,G__24112,G__24113,G__24114,G__24115,G__24116,G__24117,G__24118));
});
var G__24749__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24119 = a;
var G__24120 = b;
var G__24121 = c;
var G__24122 = d;
var G__24123 = e;
var G__24124 = f;
var G__24125 = g;
var G__24126 = h;
var G__24127 = i;
var G__24128 = j;
var G__24129 = k;
var G__24130 = l;
var G__24131 = m;
var G__24132 = n;
var G__24133 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__24119,G__24120,G__24121,G__24122,G__24123,G__24124,G__24125,G__24126,G__24127,G__24128,G__24129,G__24130,G__24131,G__24132,G__24133) : self__.dispatch_fn.call(null,G__24119,G__24120,G__24121,G__24122,G__24123,G__24124,G__24125,G__24126,G__24127,G__24128,G__24129,G__24130,G__24131,G__24132,G__24133));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24134 = a;
var G__24135 = b;
var G__24136 = c;
var G__24137 = d;
var G__24138 = e;
var G__24139 = f;
var G__24140 = g;
var G__24141 = h;
var G__24142 = i;
var G__24143 = j;
var G__24144 = k;
var G__24145 = l;
var G__24146 = m;
var G__24147 = n;
var G__24148 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__24134,G__24135,G__24136,G__24137,G__24138,G__24139,G__24140,G__24141,G__24142,G__24143,G__24144,G__24145,G__24146,G__24147,G__24148) : target_fn.call(null,G__24134,G__24135,G__24136,G__24137,G__24138,G__24139,G__24140,G__24141,G__24142,G__24143,G__24144,G__24145,G__24146,G__24147,G__24148));
});
var G__24749__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24149 = a;
var G__24150 = b;
var G__24151 = c;
var G__24152 = d;
var G__24153 = e;
var G__24154 = f;
var G__24155 = g;
var G__24156 = h;
var G__24157 = i;
var G__24158 = j;
var G__24159 = k;
var G__24160 = l;
var G__24161 = m;
var G__24162 = n;
var G__24163 = o;
var G__24164 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__24149,G__24150,G__24151,G__24152,G__24153,G__24154,G__24155,G__24156,G__24157,G__24158,G__24159,G__24160,G__24161,G__24162,G__24163,G__24164) : self__.dispatch_fn.call(null,G__24149,G__24150,G__24151,G__24152,G__24153,G__24154,G__24155,G__24156,G__24157,G__24158,G__24159,G__24160,G__24161,G__24162,G__24163,G__24164));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24165 = a;
var G__24166 = b;
var G__24167 = c;
var G__24168 = d;
var G__24169 = e;
var G__24170 = f;
var G__24171 = g;
var G__24172 = h;
var G__24173 = i;
var G__24174 = j;
var G__24175 = k;
var G__24176 = l;
var G__24177 = m;
var G__24178 = n;
var G__24179 = o;
var G__24180 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__24165,G__24166,G__24167,G__24168,G__24169,G__24170,G__24171,G__24172,G__24173,G__24174,G__24175,G__24176,G__24177,G__24178,G__24179,G__24180) : target_fn.call(null,G__24165,G__24166,G__24167,G__24168,G__24169,G__24170,G__24171,G__24172,G__24173,G__24174,G__24175,G__24176,G__24177,G__24178,G__24179,G__24180));
});
var G__24749__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24181 = a;
var G__24182 = b;
var G__24183 = c;
var G__24184 = d;
var G__24185 = e;
var G__24186 = f;
var G__24187 = g;
var G__24188 = h;
var G__24189 = i;
var G__24190 = j;
var G__24191 = k;
var G__24192 = l;
var G__24193 = m;
var G__24194 = n;
var G__24195 = o;
var G__24196 = p;
var G__24197 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__24181,G__24182,G__24183,G__24184,G__24185,G__24186,G__24187,G__24188,G__24189,G__24190,G__24191,G__24192,G__24193,G__24194,G__24195,G__24196,G__24197) : self__.dispatch_fn.call(null,G__24181,G__24182,G__24183,G__24184,G__24185,G__24186,G__24187,G__24188,G__24189,G__24190,G__24191,G__24192,G__24193,G__24194,G__24195,G__24196,G__24197));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24198 = a;
var G__24199 = b;
var G__24200 = c;
var G__24201 = d;
var G__24202 = e;
var G__24203 = f;
var G__24204 = g;
var G__24205 = h;
var G__24206 = i;
var G__24207 = j;
var G__24208 = k;
var G__24209 = l;
var G__24210 = m;
var G__24211 = n;
var G__24212 = o;
var G__24213 = p;
var G__24214 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__24198,G__24199,G__24200,G__24201,G__24202,G__24203,G__24204,G__24205,G__24206,G__24207,G__24208,G__24209,G__24210,G__24211,G__24212,G__24213,G__24214) : target_fn.call(null,G__24198,G__24199,G__24200,G__24201,G__24202,G__24203,G__24204,G__24205,G__24206,G__24207,G__24208,G__24209,G__24210,G__24211,G__24212,G__24213,G__24214));
});
var G__24749__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24215 = a;
var G__24216 = b;
var G__24217 = c;
var G__24218 = d;
var G__24219 = e;
var G__24220 = f;
var G__24221 = g;
var G__24222 = h;
var G__24223 = i;
var G__24224 = j;
var G__24225 = k;
var G__24226 = l;
var G__24227 = m;
var G__24228 = n;
var G__24229 = o;
var G__24230 = p;
var G__24231 = q;
var G__24232 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__24215,G__24216,G__24217,G__24218,G__24219,G__24220,G__24221,G__24222,G__24223,G__24224,G__24225,G__24226,G__24227,G__24228,G__24229,G__24230,G__24231,G__24232) : self__.dispatch_fn.call(null,G__24215,G__24216,G__24217,G__24218,G__24219,G__24220,G__24221,G__24222,G__24223,G__24224,G__24225,G__24226,G__24227,G__24228,G__24229,G__24230,G__24231,G__24232));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24233 = a;
var G__24234 = b;
var G__24235 = c;
var G__24236 = d;
var G__24237 = e;
var G__24238 = f;
var G__24239 = g;
var G__24240 = h;
var G__24241 = i;
var G__24242 = j;
var G__24243 = k;
var G__24244 = l;
var G__24245 = m;
var G__24246 = n;
var G__24247 = o;
var G__24248 = p;
var G__24249 = q;
var G__24250 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__24233,G__24234,G__24235,G__24236,G__24237,G__24238,G__24239,G__24240,G__24241,G__24242,G__24243,G__24244,G__24245,G__24246,G__24247,G__24248,G__24249,G__24250) : target_fn.call(null,G__24233,G__24234,G__24235,G__24236,G__24237,G__24238,G__24239,G__24240,G__24241,G__24242,G__24243,G__24244,G__24245,G__24246,G__24247,G__24248,G__24249,G__24250));
});
var G__24749__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24251 = a;
var G__24252 = b;
var G__24253 = c;
var G__24254 = d;
var G__24255 = e;
var G__24256 = f;
var G__24257 = g;
var G__24258 = h;
var G__24259 = i;
var G__24260 = j;
var G__24261 = k;
var G__24262 = l;
var G__24263 = m;
var G__24264 = n;
var G__24265 = o;
var G__24266 = p;
var G__24267 = q;
var G__24268 = r;
var G__24269 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__24251,G__24252,G__24253,G__24254,G__24255,G__24256,G__24257,G__24258,G__24259,G__24260,G__24261,G__24262,G__24263,G__24264,G__24265,G__24266,G__24267,G__24268,G__24269) : self__.dispatch_fn.call(null,G__24251,G__24252,G__24253,G__24254,G__24255,G__24256,G__24257,G__24258,G__24259,G__24260,G__24261,G__24262,G__24263,G__24264,G__24265,G__24266,G__24267,G__24268,G__24269));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24270 = a;
var G__24271 = b;
var G__24272 = c;
var G__24273 = d;
var G__24274 = e;
var G__24275 = f;
var G__24276 = g;
var G__24277 = h;
var G__24278 = i;
var G__24279 = j;
var G__24280 = k;
var G__24281 = l;
var G__24282 = m;
var G__24283 = n;
var G__24284 = o;
var G__24285 = p;
var G__24286 = q;
var G__24287 = r;
var G__24288 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__24270,G__24271,G__24272,G__24273,G__24274,G__24275,G__24276,G__24277,G__24278,G__24279,G__24280,G__24281,G__24282,G__24283,G__24284,G__24285,G__24286,G__24287,G__24288) : target_fn.call(null,G__24270,G__24271,G__24272,G__24273,G__24274,G__24275,G__24276,G__24277,G__24278,G__24279,G__24280,G__24281,G__24282,G__24283,G__24284,G__24285,G__24286,G__24287,G__24288));
});
var G__24749__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24289 = a;
var G__24290 = b;
var G__24291 = c;
var G__24292 = d;
var G__24293 = e;
var G__24294 = f;
var G__24295 = g;
var G__24296 = h;
var G__24297 = i;
var G__24298 = j;
var G__24299 = k;
var G__24300 = l;
var G__24301 = m;
var G__24302 = n;
var G__24303 = o;
var G__24304 = p;
var G__24305 = q;
var G__24306 = r;
var G__24307 = s;
var G__24308 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__24289,G__24290,G__24291,G__24292,G__24293,G__24294,G__24295,G__24296,G__24297,G__24298,G__24299,G__24300,G__24301,G__24302,G__24303,G__24304,G__24305,G__24306,G__24307,G__24308) : self__.dispatch_fn.call(null,G__24289,G__24290,G__24291,G__24292,G__24293,G__24294,G__24295,G__24296,G__24297,G__24298,G__24299,G__24300,G__24301,G__24302,G__24303,G__24304,G__24305,G__24306,G__24307,G__24308));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24309 = a;
var G__24310 = b;
var G__24311 = c;
var G__24312 = d;
var G__24313 = e;
var G__24314 = f;
var G__24315 = g;
var G__24316 = h;
var G__24317 = i;
var G__24318 = j;
var G__24319 = k;
var G__24320 = l;
var G__24321 = m;
var G__24322 = n;
var G__24323 = o;
var G__24324 = p;
var G__24325 = q;
var G__24326 = r;
var G__24327 = s;
var G__24328 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__24309,G__24310,G__24311,G__24312,G__24313,G__24314,G__24315,G__24316,G__24317,G__24318,G__24319,G__24320,G__24321,G__24322,G__24323,G__24324,G__24325,G__24326,G__24327,G__24328) : target_fn.call(null,G__24309,G__24310,G__24311,G__24312,G__24313,G__24314,G__24315,G__24316,G__24317,G__24318,G__24319,G__24320,G__24321,G__24322,G__24323,G__24324,G__24325,G__24326,G__24327,G__24328));
});
var G__24749__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__24749 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__24749__1.call(this,self__);
case 2:
return G__24749__2.call(this,self__,a);
case 3:
return G__24749__3.call(this,self__,a,b);
case 4:
return G__24749__4.call(this,self__,a,b,c);
case 5:
return G__24749__5.call(this,self__,a,b,c,d);
case 6:
return G__24749__6.call(this,self__,a,b,c,d,e);
case 7:
return G__24749__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__24749__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__24749__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__24749__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__24749__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__24749__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__24749__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__24749__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__24749__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__24749__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__24749__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__24749__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__24749__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__24749__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__24749__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__24749__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24749.cljs$core$IFn$_invoke$arity$1 = G__24749__1;
G__24749.cljs$core$IFn$_invoke$arity$2 = G__24749__2;
G__24749.cljs$core$IFn$_invoke$arity$3 = G__24749__3;
G__24749.cljs$core$IFn$_invoke$arity$4 = G__24749__4;
G__24749.cljs$core$IFn$_invoke$arity$5 = G__24749__5;
G__24749.cljs$core$IFn$_invoke$arity$6 = G__24749__6;
G__24749.cljs$core$IFn$_invoke$arity$7 = G__24749__7;
G__24749.cljs$core$IFn$_invoke$arity$8 = G__24749__8;
G__24749.cljs$core$IFn$_invoke$arity$9 = G__24749__9;
G__24749.cljs$core$IFn$_invoke$arity$10 = G__24749__10;
G__24749.cljs$core$IFn$_invoke$arity$11 = G__24749__11;
G__24749.cljs$core$IFn$_invoke$arity$12 = G__24749__12;
G__24749.cljs$core$IFn$_invoke$arity$13 = G__24749__13;
G__24749.cljs$core$IFn$_invoke$arity$14 = G__24749__14;
G__24749.cljs$core$IFn$_invoke$arity$15 = G__24749__15;
G__24749.cljs$core$IFn$_invoke$arity$16 = G__24749__16;
G__24749.cljs$core$IFn$_invoke$arity$17 = G__24749__17;
G__24749.cljs$core$IFn$_invoke$arity$18 = G__24749__18;
G__24749.cljs$core$IFn$_invoke$arity$19 = G__24749__19;
G__24749.cljs$core$IFn$_invoke$arity$20 = G__24749__20;
G__24749.cljs$core$IFn$_invoke$arity$21 = G__24749__21;
G__24749.cljs$core$IFn$_invoke$arity$22 = G__24749__22;
return G__24749;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args23901){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23901)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24329 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__24329) : self__.dispatch_fn.call(null,G__24329));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24330 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__24330) : target_fn.call(null,G__24330));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24331 = a;
var G__24332 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__24331,G__24332) : self__.dispatch_fn.call(null,G__24331,G__24332));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24333 = a;
var G__24334 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__24333,G__24334) : target_fn.call(null,G__24333,G__24334));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24335 = a;
var G__24336 = b;
var G__24337 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__24335,G__24336,G__24337) : self__.dispatch_fn.call(null,G__24335,G__24336,G__24337));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24338 = a;
var G__24339 = b;
var G__24340 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__24338,G__24339,G__24340) : target_fn.call(null,G__24338,G__24339,G__24340));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24341 = a;
var G__24342 = b;
var G__24343 = c;
var G__24344 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__24341,G__24342,G__24343,G__24344) : self__.dispatch_fn.call(null,G__24341,G__24342,G__24343,G__24344));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24345 = a;
var G__24346 = b;
var G__24347 = c;
var G__24348 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__24345,G__24346,G__24347,G__24348) : target_fn.call(null,G__24345,G__24346,G__24347,G__24348));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24349 = a;
var G__24350 = b;
var G__24351 = c;
var G__24352 = d;
var G__24353 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__24349,G__24350,G__24351,G__24352,G__24353) : self__.dispatch_fn.call(null,G__24349,G__24350,G__24351,G__24352,G__24353));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24354 = a;
var G__24355 = b;
var G__24356 = c;
var G__24357 = d;
var G__24358 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__24354,G__24355,G__24356,G__24357,G__24358) : target_fn.call(null,G__24354,G__24355,G__24356,G__24357,G__24358));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24359 = a;
var G__24360 = b;
var G__24361 = c;
var G__24362 = d;
var G__24363 = e;
var G__24364 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__24359,G__24360,G__24361,G__24362,G__24363,G__24364) : self__.dispatch_fn.call(null,G__24359,G__24360,G__24361,G__24362,G__24363,G__24364));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24365 = a;
var G__24366 = b;
var G__24367 = c;
var G__24368 = d;
var G__24369 = e;
var G__24370 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__24365,G__24366,G__24367,G__24368,G__24369,G__24370) : target_fn.call(null,G__24365,G__24366,G__24367,G__24368,G__24369,G__24370));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24371 = a;
var G__24372 = b;
var G__24373 = c;
var G__24374 = d;
var G__24375 = e;
var G__24376 = f;
var G__24377 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__24371,G__24372,G__24373,G__24374,G__24375,G__24376,G__24377) : self__.dispatch_fn.call(null,G__24371,G__24372,G__24373,G__24374,G__24375,G__24376,G__24377));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24378 = a;
var G__24379 = b;
var G__24380 = c;
var G__24381 = d;
var G__24382 = e;
var G__24383 = f;
var G__24384 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__24378,G__24379,G__24380,G__24381,G__24382,G__24383,G__24384) : target_fn.call(null,G__24378,G__24379,G__24380,G__24381,G__24382,G__24383,G__24384));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24385 = a;
var G__24386 = b;
var G__24387 = c;
var G__24388 = d;
var G__24389 = e;
var G__24390 = f;
var G__24391 = g;
var G__24392 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__24385,G__24386,G__24387,G__24388,G__24389,G__24390,G__24391,G__24392) : self__.dispatch_fn.call(null,G__24385,G__24386,G__24387,G__24388,G__24389,G__24390,G__24391,G__24392));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24393 = a;
var G__24394 = b;
var G__24395 = c;
var G__24396 = d;
var G__24397 = e;
var G__24398 = f;
var G__24399 = g;
var G__24400 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__24393,G__24394,G__24395,G__24396,G__24397,G__24398,G__24399,G__24400) : target_fn.call(null,G__24393,G__24394,G__24395,G__24396,G__24397,G__24398,G__24399,G__24400));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24401 = a;
var G__24402 = b;
var G__24403 = c;
var G__24404 = d;
var G__24405 = e;
var G__24406 = f;
var G__24407 = g;
var G__24408 = h;
var G__24409 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__24401,G__24402,G__24403,G__24404,G__24405,G__24406,G__24407,G__24408,G__24409) : self__.dispatch_fn.call(null,G__24401,G__24402,G__24403,G__24404,G__24405,G__24406,G__24407,G__24408,G__24409));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24410 = a;
var G__24411 = b;
var G__24412 = c;
var G__24413 = d;
var G__24414 = e;
var G__24415 = f;
var G__24416 = g;
var G__24417 = h;
var G__24418 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__24410,G__24411,G__24412,G__24413,G__24414,G__24415,G__24416,G__24417,G__24418) : target_fn.call(null,G__24410,G__24411,G__24412,G__24413,G__24414,G__24415,G__24416,G__24417,G__24418));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24419 = a;
var G__24420 = b;
var G__24421 = c;
var G__24422 = d;
var G__24423 = e;
var G__24424 = f;
var G__24425 = g;
var G__24426 = h;
var G__24427 = i;
var G__24428 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__24419,G__24420,G__24421,G__24422,G__24423,G__24424,G__24425,G__24426,G__24427,G__24428) : self__.dispatch_fn.call(null,G__24419,G__24420,G__24421,G__24422,G__24423,G__24424,G__24425,G__24426,G__24427,G__24428));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24429 = a;
var G__24430 = b;
var G__24431 = c;
var G__24432 = d;
var G__24433 = e;
var G__24434 = f;
var G__24435 = g;
var G__24436 = h;
var G__24437 = i;
var G__24438 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__24429,G__24430,G__24431,G__24432,G__24433,G__24434,G__24435,G__24436,G__24437,G__24438) : target_fn.call(null,G__24429,G__24430,G__24431,G__24432,G__24433,G__24434,G__24435,G__24436,G__24437,G__24438));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24439 = a;
var G__24440 = b;
var G__24441 = c;
var G__24442 = d;
var G__24443 = e;
var G__24444 = f;
var G__24445 = g;
var G__24446 = h;
var G__24447 = i;
var G__24448 = j;
var G__24449 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__24439,G__24440,G__24441,G__24442,G__24443,G__24444,G__24445,G__24446,G__24447,G__24448,G__24449) : self__.dispatch_fn.call(null,G__24439,G__24440,G__24441,G__24442,G__24443,G__24444,G__24445,G__24446,G__24447,G__24448,G__24449));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24450 = a;
var G__24451 = b;
var G__24452 = c;
var G__24453 = d;
var G__24454 = e;
var G__24455 = f;
var G__24456 = g;
var G__24457 = h;
var G__24458 = i;
var G__24459 = j;
var G__24460 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__24450,G__24451,G__24452,G__24453,G__24454,G__24455,G__24456,G__24457,G__24458,G__24459,G__24460) : target_fn.call(null,G__24450,G__24451,G__24452,G__24453,G__24454,G__24455,G__24456,G__24457,G__24458,G__24459,G__24460));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24461 = a;
var G__24462 = b;
var G__24463 = c;
var G__24464 = d;
var G__24465 = e;
var G__24466 = f;
var G__24467 = g;
var G__24468 = h;
var G__24469 = i;
var G__24470 = j;
var G__24471 = k;
var G__24472 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__24461,G__24462,G__24463,G__24464,G__24465,G__24466,G__24467,G__24468,G__24469,G__24470,G__24471,G__24472) : self__.dispatch_fn.call(null,G__24461,G__24462,G__24463,G__24464,G__24465,G__24466,G__24467,G__24468,G__24469,G__24470,G__24471,G__24472));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24473 = a;
var G__24474 = b;
var G__24475 = c;
var G__24476 = d;
var G__24477 = e;
var G__24478 = f;
var G__24479 = g;
var G__24480 = h;
var G__24481 = i;
var G__24482 = j;
var G__24483 = k;
var G__24484 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__24473,G__24474,G__24475,G__24476,G__24477,G__24478,G__24479,G__24480,G__24481,G__24482,G__24483,G__24484) : target_fn.call(null,G__24473,G__24474,G__24475,G__24476,G__24477,G__24478,G__24479,G__24480,G__24481,G__24482,G__24483,G__24484));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24485 = a;
var G__24486 = b;
var G__24487 = c;
var G__24488 = d;
var G__24489 = e;
var G__24490 = f;
var G__24491 = g;
var G__24492 = h;
var G__24493 = i;
var G__24494 = j;
var G__24495 = k;
var G__24496 = l;
var G__24497 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__24485,G__24486,G__24487,G__24488,G__24489,G__24490,G__24491,G__24492,G__24493,G__24494,G__24495,G__24496,G__24497) : self__.dispatch_fn.call(null,G__24485,G__24486,G__24487,G__24488,G__24489,G__24490,G__24491,G__24492,G__24493,G__24494,G__24495,G__24496,G__24497));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24498 = a;
var G__24499 = b;
var G__24500 = c;
var G__24501 = d;
var G__24502 = e;
var G__24503 = f;
var G__24504 = g;
var G__24505 = h;
var G__24506 = i;
var G__24507 = j;
var G__24508 = k;
var G__24509 = l;
var G__24510 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__24498,G__24499,G__24500,G__24501,G__24502,G__24503,G__24504,G__24505,G__24506,G__24507,G__24508,G__24509,G__24510) : target_fn.call(null,G__24498,G__24499,G__24500,G__24501,G__24502,G__24503,G__24504,G__24505,G__24506,G__24507,G__24508,G__24509,G__24510));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24511 = a;
var G__24512 = b;
var G__24513 = c;
var G__24514 = d;
var G__24515 = e;
var G__24516 = f;
var G__24517 = g;
var G__24518 = h;
var G__24519 = i;
var G__24520 = j;
var G__24521 = k;
var G__24522 = l;
var G__24523 = m;
var G__24524 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__24511,G__24512,G__24513,G__24514,G__24515,G__24516,G__24517,G__24518,G__24519,G__24520,G__24521,G__24522,G__24523,G__24524) : self__.dispatch_fn.call(null,G__24511,G__24512,G__24513,G__24514,G__24515,G__24516,G__24517,G__24518,G__24519,G__24520,G__24521,G__24522,G__24523,G__24524));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24525 = a;
var G__24526 = b;
var G__24527 = c;
var G__24528 = d;
var G__24529 = e;
var G__24530 = f;
var G__24531 = g;
var G__24532 = h;
var G__24533 = i;
var G__24534 = j;
var G__24535 = k;
var G__24536 = l;
var G__24537 = m;
var G__24538 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__24525,G__24526,G__24527,G__24528,G__24529,G__24530,G__24531,G__24532,G__24533,G__24534,G__24535,G__24536,G__24537,G__24538) : target_fn.call(null,G__24525,G__24526,G__24527,G__24528,G__24529,G__24530,G__24531,G__24532,G__24533,G__24534,G__24535,G__24536,G__24537,G__24538));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24539 = a;
var G__24540 = b;
var G__24541 = c;
var G__24542 = d;
var G__24543 = e;
var G__24544 = f;
var G__24545 = g;
var G__24546 = h;
var G__24547 = i;
var G__24548 = j;
var G__24549 = k;
var G__24550 = l;
var G__24551 = m;
var G__24552 = n;
var G__24553 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__24539,G__24540,G__24541,G__24542,G__24543,G__24544,G__24545,G__24546,G__24547,G__24548,G__24549,G__24550,G__24551,G__24552,G__24553) : self__.dispatch_fn.call(null,G__24539,G__24540,G__24541,G__24542,G__24543,G__24544,G__24545,G__24546,G__24547,G__24548,G__24549,G__24550,G__24551,G__24552,G__24553));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24554 = a;
var G__24555 = b;
var G__24556 = c;
var G__24557 = d;
var G__24558 = e;
var G__24559 = f;
var G__24560 = g;
var G__24561 = h;
var G__24562 = i;
var G__24563 = j;
var G__24564 = k;
var G__24565 = l;
var G__24566 = m;
var G__24567 = n;
var G__24568 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__24554,G__24555,G__24556,G__24557,G__24558,G__24559,G__24560,G__24561,G__24562,G__24563,G__24564,G__24565,G__24566,G__24567,G__24568) : target_fn.call(null,G__24554,G__24555,G__24556,G__24557,G__24558,G__24559,G__24560,G__24561,G__24562,G__24563,G__24564,G__24565,G__24566,G__24567,G__24568));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24569 = a;
var G__24570 = b;
var G__24571 = c;
var G__24572 = d;
var G__24573 = e;
var G__24574 = f;
var G__24575 = g;
var G__24576 = h;
var G__24577 = i;
var G__24578 = j;
var G__24579 = k;
var G__24580 = l;
var G__24581 = m;
var G__24582 = n;
var G__24583 = o;
var G__24584 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__24569,G__24570,G__24571,G__24572,G__24573,G__24574,G__24575,G__24576,G__24577,G__24578,G__24579,G__24580,G__24581,G__24582,G__24583,G__24584) : self__.dispatch_fn.call(null,G__24569,G__24570,G__24571,G__24572,G__24573,G__24574,G__24575,G__24576,G__24577,G__24578,G__24579,G__24580,G__24581,G__24582,G__24583,G__24584));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24585 = a;
var G__24586 = b;
var G__24587 = c;
var G__24588 = d;
var G__24589 = e;
var G__24590 = f;
var G__24591 = g;
var G__24592 = h;
var G__24593 = i;
var G__24594 = j;
var G__24595 = k;
var G__24596 = l;
var G__24597 = m;
var G__24598 = n;
var G__24599 = o;
var G__24600 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__24585,G__24586,G__24587,G__24588,G__24589,G__24590,G__24591,G__24592,G__24593,G__24594,G__24595,G__24596,G__24597,G__24598,G__24599,G__24600) : target_fn.call(null,G__24585,G__24586,G__24587,G__24588,G__24589,G__24590,G__24591,G__24592,G__24593,G__24594,G__24595,G__24596,G__24597,G__24598,G__24599,G__24600));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24601 = a;
var G__24602 = b;
var G__24603 = c;
var G__24604 = d;
var G__24605 = e;
var G__24606 = f;
var G__24607 = g;
var G__24608 = h;
var G__24609 = i;
var G__24610 = j;
var G__24611 = k;
var G__24612 = l;
var G__24613 = m;
var G__24614 = n;
var G__24615 = o;
var G__24616 = p;
var G__24617 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__24601,G__24602,G__24603,G__24604,G__24605,G__24606,G__24607,G__24608,G__24609,G__24610,G__24611,G__24612,G__24613,G__24614,G__24615,G__24616,G__24617) : self__.dispatch_fn.call(null,G__24601,G__24602,G__24603,G__24604,G__24605,G__24606,G__24607,G__24608,G__24609,G__24610,G__24611,G__24612,G__24613,G__24614,G__24615,G__24616,G__24617));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24618 = a;
var G__24619 = b;
var G__24620 = c;
var G__24621 = d;
var G__24622 = e;
var G__24623 = f;
var G__24624 = g;
var G__24625 = h;
var G__24626 = i;
var G__24627 = j;
var G__24628 = k;
var G__24629 = l;
var G__24630 = m;
var G__24631 = n;
var G__24632 = o;
var G__24633 = p;
var G__24634 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__24618,G__24619,G__24620,G__24621,G__24622,G__24623,G__24624,G__24625,G__24626,G__24627,G__24628,G__24629,G__24630,G__24631,G__24632,G__24633,G__24634) : target_fn.call(null,G__24618,G__24619,G__24620,G__24621,G__24622,G__24623,G__24624,G__24625,G__24626,G__24627,G__24628,G__24629,G__24630,G__24631,G__24632,G__24633,G__24634));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24635 = a;
var G__24636 = b;
var G__24637 = c;
var G__24638 = d;
var G__24639 = e;
var G__24640 = f;
var G__24641 = g;
var G__24642 = h;
var G__24643 = i;
var G__24644 = j;
var G__24645 = k;
var G__24646 = l;
var G__24647 = m;
var G__24648 = n;
var G__24649 = o;
var G__24650 = p;
var G__24651 = q;
var G__24652 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__24635,G__24636,G__24637,G__24638,G__24639,G__24640,G__24641,G__24642,G__24643,G__24644,G__24645,G__24646,G__24647,G__24648,G__24649,G__24650,G__24651,G__24652) : self__.dispatch_fn.call(null,G__24635,G__24636,G__24637,G__24638,G__24639,G__24640,G__24641,G__24642,G__24643,G__24644,G__24645,G__24646,G__24647,G__24648,G__24649,G__24650,G__24651,G__24652));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24653 = a;
var G__24654 = b;
var G__24655 = c;
var G__24656 = d;
var G__24657 = e;
var G__24658 = f;
var G__24659 = g;
var G__24660 = h;
var G__24661 = i;
var G__24662 = j;
var G__24663 = k;
var G__24664 = l;
var G__24665 = m;
var G__24666 = n;
var G__24667 = o;
var G__24668 = p;
var G__24669 = q;
var G__24670 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__24653,G__24654,G__24655,G__24656,G__24657,G__24658,G__24659,G__24660,G__24661,G__24662,G__24663,G__24664,G__24665,G__24666,G__24667,G__24668,G__24669,G__24670) : target_fn.call(null,G__24653,G__24654,G__24655,G__24656,G__24657,G__24658,G__24659,G__24660,G__24661,G__24662,G__24663,G__24664,G__24665,G__24666,G__24667,G__24668,G__24669,G__24670));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24671 = a;
var G__24672 = b;
var G__24673 = c;
var G__24674 = d;
var G__24675 = e;
var G__24676 = f;
var G__24677 = g;
var G__24678 = h;
var G__24679 = i;
var G__24680 = j;
var G__24681 = k;
var G__24682 = l;
var G__24683 = m;
var G__24684 = n;
var G__24685 = o;
var G__24686 = p;
var G__24687 = q;
var G__24688 = r;
var G__24689 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__24671,G__24672,G__24673,G__24674,G__24675,G__24676,G__24677,G__24678,G__24679,G__24680,G__24681,G__24682,G__24683,G__24684,G__24685,G__24686,G__24687,G__24688,G__24689) : self__.dispatch_fn.call(null,G__24671,G__24672,G__24673,G__24674,G__24675,G__24676,G__24677,G__24678,G__24679,G__24680,G__24681,G__24682,G__24683,G__24684,G__24685,G__24686,G__24687,G__24688,G__24689));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24690 = a;
var G__24691 = b;
var G__24692 = c;
var G__24693 = d;
var G__24694 = e;
var G__24695 = f;
var G__24696 = g;
var G__24697 = h;
var G__24698 = i;
var G__24699 = j;
var G__24700 = k;
var G__24701 = l;
var G__24702 = m;
var G__24703 = n;
var G__24704 = o;
var G__24705 = p;
var G__24706 = q;
var G__24707 = r;
var G__24708 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__24690,G__24691,G__24692,G__24693,G__24694,G__24695,G__24696,G__24697,G__24698,G__24699,G__24700,G__24701,G__24702,G__24703,G__24704,G__24705,G__24706,G__24707,G__24708) : target_fn.call(null,G__24690,G__24691,G__24692,G__24693,G__24694,G__24695,G__24696,G__24697,G__24698,G__24699,G__24700,G__24701,G__24702,G__24703,G__24704,G__24705,G__24706,G__24707,G__24708));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24709 = a;
var G__24710 = b;
var G__24711 = c;
var G__24712 = d;
var G__24713 = e;
var G__24714 = f;
var G__24715 = g;
var G__24716 = h;
var G__24717 = i;
var G__24718 = j;
var G__24719 = k;
var G__24720 = l;
var G__24721 = m;
var G__24722 = n;
var G__24723 = o;
var G__24724 = p;
var G__24725 = q;
var G__24726 = r;
var G__24727 = s;
var G__24728 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__24709,G__24710,G__24711,G__24712,G__24713,G__24714,G__24715,G__24716,G__24717,G__24718,G__24719,G__24720,G__24721,G__24722,G__24723,G__24724,G__24725,G__24726,G__24727,G__24728) : self__.dispatch_fn.call(null,G__24709,G__24710,G__24711,G__24712,G__24713,G__24714,G__24715,G__24716,G__24717,G__24718,G__24719,G__24720,G__24721,G__24722,G__24723,G__24724,G__24725,G__24726,G__24727,G__24728));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24729 = a;
var G__24730 = b;
var G__24731 = c;
var G__24732 = d;
var G__24733 = e;
var G__24734 = f;
var G__24735 = g;
var G__24736 = h;
var G__24737 = i;
var G__24738 = j;
var G__24739 = k;
var G__24740 = l;
var G__24741 = m;
var G__24742 = n;
var G__24743 = o;
var G__24744 = p;
var G__24745 = q;
var G__24746 = r;
var G__24747 = s;
var G__24748 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__24729,G__24730,G__24731,G__24732,G__24733,G__24734,G__24735,G__24736,G__24737,G__24738,G__24739,G__24740,G__24741,G__24742,G__24743,G__24744,G__24745,G__24746,G__24747,G__24748) : target_fn.call(null,G__24729,G__24730,G__24731,G__24732,G__24733,G__24734,G__24735,G__24736,G__24737,G__24738,G__24739,G__24740,G__24741,G__24742,G__24743,G__24744,G__24745,G__24746,G__24747,G__24748));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__24750 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__24750);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__13180__auto__,writer__13181__auto__,opt__13182__auto__){
return cljs.core._write(writer__13181__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.ExceptionInfo.prototype = (new Error());
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,map){
return (new cljs.core.ExceptionInfo(msg,map,null));
});
var ex_info__3 = (function (msg,map,cause){
return (new cljs.core.ExceptionInfo(msg,map,cause));
});
ex_info = function(msg,map,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,map);
case 3:
return ex_info__3.call(this,msg,map,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__24755 = x;
var G__24756 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__24755,G__24756) : pred.call(null,G__24755,G__24756));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__24757 = y;
var G__24758 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__24757,G__24758) : pred.call(null,G__24757,G__24758));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map?rel=1422744168876